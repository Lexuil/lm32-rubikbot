
image:     formato del fichero elf32-lm32

Secciones:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000c50  00000000  00000000  00000054  2**2
                  CONTENTS, ALLOC, LOAD, CODE
  1 .rodata       0000005c  00000c50  00000c50  00000ca4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         00000010  00000cac  00000cac  00000d00  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000084  00000cbc  00000cbc  00000d10  2**2
                  ALLOC
  4 .debug_frame  0000020c  00000000  00000000  00000d10  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c1c  00000000  00000000  00000f1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000003a1  00000000  00000000  00001b38  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_loc    000005ee  00000000  00000000  00001ed9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_aranges 00000048  00000000  00000000  000024c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000030  00000000  00000000  0000250f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   0000099f  00000000  00000000  0000253f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000476  00000000  00000000  00002ede  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .comment      00000011  00000000  00000000  00003354  2**0
                  CONTENTS, READONLY

Desensamblado de la secci√≥n .text:

00000000 <_ftext>:
   0:	98 00 00 00 	xor r0,r0,r0
   4:	d0 00 00 00 	wcsr IE,r0
   8:	78 01 00 00 	mvhi r1,0x0
   c:	38 21 00 00 	ori r1,r1,0x0
  10:	d0 e1 00 00 	wcsr EBA,r1
  14:	f8 00 00 3b 	calli 100 <_crt0>
  18:	34 00 00 00 	nop
  1c:	34 00 00 00 	nop

00000020 <_breakpoint_handler>:
  20:	34 00 00 00 	nop
  24:	34 00 00 00 	nop
  28:	34 00 00 00 	nop
  2c:	34 00 00 00 	nop
  30:	34 00 00 00 	nop
  34:	34 00 00 00 	nop
  38:	34 00 00 00 	nop
  3c:	34 00 00 00 	nop

00000040 <_ibuserror_handler>:
  40:	34 00 00 00 	nop
  44:	34 00 00 00 	nop
  48:	34 00 00 00 	nop
  4c:	34 00 00 00 	nop
  50:	34 00 00 00 	nop
  54:	34 00 00 00 	nop
  58:	34 00 00 00 	nop
  5c:	34 00 00 00 	nop

00000060 <_watchpoint_handler>:
  60:	34 00 00 00 	nop
  64:	34 00 00 00 	nop
  68:	34 00 00 00 	nop
  6c:	34 00 00 00 	nop
  70:	34 00 00 00 	nop
  74:	34 00 00 00 	nop
  78:	34 00 00 00 	nop
  7c:	34 00 00 00 	nop

00000080 <_dbuserror_handler>:
  80:	34 00 00 00 	nop
  84:	34 00 00 00 	nop
  88:	34 00 00 00 	nop
  8c:	34 00 00 00 	nop
  90:	34 00 00 00 	nop
  94:	34 00 00 00 	nop
  98:	34 00 00 00 	nop
  9c:	34 00 00 00 	nop

000000a0 <_divzero_handler>:
  a0:	34 00 00 00 	nop
  a4:	34 00 00 00 	nop
  a8:	34 00 00 00 	nop
  ac:	34 00 00 00 	nop
  b0:	34 00 00 00 	nop
  b4:	34 00 00 00 	nop
  b8:	34 00 00 00 	nop
  bc:	34 00 00 00 	nop

000000c0 <_interrupt_handler>:
  c0:	5b 9d 00 00 	sw (sp+0),ra
  c4:	f8 00 00 2c 	calli 174 <_save_all>
  c8:	90 40 08 00 	rcsr r1,IP
  cc:	f8 00 00 1d 	calli 140 <irq_handler>
  d0:	78 01 ff ff 	mvhi r1,0xffff
  d4:	38 21 ff ff 	ori r1,r1,0xffff
  d8:	d0 41 00 00 	wcsr IP,r1
  dc:	e0 00 00 39 	bi 1c0 <_restore_all_and_eret>

000000e0 <_scall_handler>:
  e0:	34 00 00 00 	nop
  e4:	34 00 00 00 	nop
  e8:	34 00 00 00 	nop
  ec:	34 00 00 00 	nop
  f0:	34 00 00 00 	nop
  f4:	34 00 00 00 	nop
  f8:	34 00 00 00 	nop
  fc:	34 00 00 00 	nop

00000100 <_crt0>:
 100:	78 1c 00 00 	mvhi sp,0x0
 104:	3b 9c 0f fc 	ori sp,sp,0xffc
 108:	78 1a 00 00 	mvhi gp,0x0
 10c:	3b 5a 0c c0 	ori gp,gp,0xcc0
 110:	78 01 00 00 	mvhi r1,0x0
 114:	38 21 0c bc 	ori r1,r1,0xcbc
 118:	78 03 00 00 	mvhi r3,0x0
 11c:	38 63 0d 40 	ori r3,r3,0xd40

00000120 <.clearBSS>:
 120:	44 23 00 04 	be r1,r3,130 <.callMain>
 124:	58 20 00 00 	sw (r1+0),r0
 128:	34 21 00 04 	addi r1,r1,4
 12c:	e3 ff ff fd 	bi 120 <.clearBSS>

00000130 <.callMain>:
 130:	34 01 00 00 	mvi r1,0
 134:	34 02 00 00 	mvi r2,0
 138:	34 03 00 00 	mvi r3,0
 13c:	f8 00 00 a4 	calli 3cc <main>

00000140 <irq_handler>:
 140:	c3 a0 00 00 	ret

00000144 <irq_enable>:
 144:	34 01 00 01 	mvi r1,1
 148:	d0 01 00 00 	wcsr IE,r1
 14c:	c3 a0 00 00 	ret

00000150 <irq_disable>:
 150:	34 01 00 00 	mvi r1,0
 154:	d0 01 00 00 	wcsr IE,r1
 158:	c3 a0 00 00 	ret

0000015c <irq_set_mask>:
 15c:	d0 21 00 00 	wcsr IM,r1
 160:	c3 a0 00 00 	ret

00000164 <irq_get_mask>:
 164:	90 20 08 00 	rcsr r1,IM
 168:	c3 a0 00 00 	ret

0000016c <jump>:
 16c:	c0 20 00 00 	b r1

00000170 <halt>:
 170:	e0 00 00 00 	bi 170 <halt>

00000174 <_save_all>:
 174:	37 9c ff 80 	addi sp,sp,-128
 178:	5b 81 00 04 	sw (sp+4),r1
 17c:	5b 82 00 08 	sw (sp+8),r2
 180:	5b 83 00 0c 	sw (sp+12),r3
 184:	5b 84 00 10 	sw (sp+16),r4
 188:	5b 85 00 14 	sw (sp+20),r5
 18c:	5b 86 00 18 	sw (sp+24),r6
 190:	5b 87 00 1c 	sw (sp+28),r7
 194:	5b 88 00 20 	sw (sp+32),r8
 198:	5b 89 00 24 	sw (sp+36),r9
 19c:	5b 8a 00 28 	sw (sp+40),r10
 1a0:	5b 9e 00 78 	sw (sp+120),ea
 1a4:	5b 9f 00 7c 	sw (sp+124),ba
 1a8:	2b 81 00 80 	lw r1,(sp+128)
 1ac:	5b 81 00 74 	sw (sp+116),r1
 1b0:	bb 80 08 00 	mv r1,sp
 1b4:	34 21 00 80 	addi r1,r1,128
 1b8:	5b 81 00 70 	sw (sp+112),r1
 1bc:	c3 a0 00 00 	ret

000001c0 <_restore_all_and_eret>:
 1c0:	2b 81 00 04 	lw r1,(sp+4)
 1c4:	2b 82 00 08 	lw r2,(sp+8)
 1c8:	2b 83 00 0c 	lw r3,(sp+12)
 1cc:	2b 84 00 10 	lw r4,(sp+16)
 1d0:	2b 85 00 14 	lw r5,(sp+20)
 1d4:	2b 86 00 18 	lw r6,(sp+24)
 1d8:	2b 87 00 1c 	lw r7,(sp+28)
 1dc:	2b 88 00 20 	lw r8,(sp+32)
 1e0:	2b 89 00 24 	lw r9,(sp+36)
 1e4:	2b 8a 00 28 	lw r10,(sp+40)
 1e8:	2b 9d 00 74 	lw ra,(sp+116)
 1ec:	2b 9e 00 78 	lw ea,(sp+120)
 1f0:	2b 9f 00 7c 	lw ba,(sp+124)
 1f4:	2b 9c 00 70 	lw sp,(sp+112)
 1f8:	c3 c0 00 00 	eret

000001fc <get_sp>:
 1fc:	bb 80 08 00 	mv r1,sp
 200:	c3 a0 00 00 	ret

00000204 <get_gp>:
 204:	bb 40 08 00 	mv r1,gp
 208:	c3 a0 00 00 	ret

0000020c <_ZN3arm4homeEv>:
		void home();
		void set_serv(int,int);
};


void arm::home(){
 20c:	37 9c ff f8 	addi sp,sp,-8
 210:	5b 8b 00 08 	sw (sp+8),r11
 214:	5b 9d 00 04 	sw (sp+4),ra
 218:	b8 20 58 00 	mv r11,r1
	pwm_duty(serv2,DER);
 21c:	28 21 00 04 	lw r1,(r1+4)
 220:	34 02 00 19 	mvi r2,25
 224:	f8 00 01 4a 	calli 74c <_Z8pwm_dutyij>
	msleep(1000);
 228:	34 01 03 e8 	mvi r1,1000
 22c:	f8 00 00 b9 	calli 510 <_Z6msleepj>
	pwm_duty(serv1,MID);
 230:	29 61 00 00 	lw r1,(r11+0)
 234:	34 02 00 0f 	mvi r2,15
 238:	f8 00 01 45 	calli 74c <_Z8pwm_dutyij>
	msleep(1000);
 23c:	34 01 03 e8 	mvi r1,1000
 240:	f8 00 00 b4 	calli 510 <_Z6msleepj>
	pwm_duty(serv2,IZ);
 244:	29 61 00 04 	lw r1,(r11+4)
 248:	34 02 00 05 	mvi r2,5
 24c:	f8 00 01 40 	calli 74c <_Z8pwm_dutyij>
}
 250:	2b 9d 00 04 	lw ra,(sp+4)
 254:	2b 8b 00 08 	lw r11,(sp+8)
 258:	37 9c 00 08 	addi sp,sp,8
 25c:	c3 a0 00 00 	ret

00000260 <_ZN3arm7derechaEv>:

void arm::derecha(){
 260:	37 9c ff f8 	addi sp,sp,-8
 264:	5b 8b 00 08 	sw (sp+8),r11
 268:	5b 9d 00 04 	sw (sp+4),ra
 26c:	b8 20 58 00 	mv r11,r1
	pwm_duty(serv1,MID);
 270:	28 21 00 00 	lw r1,(r1+0)
 274:	34 02 00 0f 	mvi r2,15
 278:	f8 00 01 35 	calli 74c <_Z8pwm_dutyij>
	msleep(1000);
 27c:	34 01 03 e8 	mvi r1,1000
 280:	f8 00 00 a4 	calli 510 <_Z6msleepj>
	pwm_duty(serv1,DER);
 284:	29 61 00 00 	lw r1,(r11+0)
 288:	34 02 00 19 	mvi r2,25
 28c:	f8 00 01 30 	calli 74c <_Z8pwm_dutyij>
	msleep(1000);
 290:	34 01 03 e8 	mvi r1,1000
 294:	f8 00 00 9f 	calli 510 <_Z6msleepj>
	pwm_duty(serv2,IZ);
 298:	29 61 00 04 	lw r1,(r11+4)
 29c:	34 02 00 05 	mvi r2,5
 2a0:	f8 00 01 2b 	calli 74c <_Z8pwm_dutyij>
	msleep(1000);
 2a4:	34 01 03 e8 	mvi r1,1000
 2a8:	f8 00 00 9a 	calli 510 <_Z6msleepj>
	pwm_duty(serv1,MID);
 2ac:	29 61 00 00 	lw r1,(r11+0)
 2b0:	34 02 00 0f 	mvi r2,15
 2b4:	f8 00 01 26 	calli 74c <_Z8pwm_dutyij>
	msleep(1000);
 2b8:	34 01 03 e8 	mvi r1,1000
 2bc:	f8 00 00 95 	calli 510 <_Z6msleepj>
	pwm_duty(serv2,DER);
 2c0:	29 61 00 04 	lw r1,(r11+4)
 2c4:	34 02 00 19 	mvi r2,25
 2c8:	f8 00 01 21 	calli 74c <_Z8pwm_dutyij>
}
 2cc:	2b 9d 00 04 	lw ra,(sp+4)
 2d0:	2b 8b 00 08 	lw r11,(sp+8)
 2d4:	37 9c 00 08 	addi sp,sp,8
 2d8:	c3 a0 00 00 	ret

000002dc <_ZN3arm9izquierdaEv>:
void arm::izquierda(){
 2dc:	37 9c ff f8 	addi sp,sp,-8
 2e0:	5b 8b 00 08 	sw (sp+8),r11
 2e4:	5b 9d 00 04 	sw (sp+4),ra
 2e8:	b8 20 58 00 	mv r11,r1
	pwm_duty(serv1,MID);
 2ec:	28 21 00 00 	lw r1,(r1+0)
 2f0:	34 02 00 0f 	mvi r2,15
 2f4:	f8 00 01 16 	calli 74c <_Z8pwm_dutyij>
	msleep(1000);
 2f8:	34 01 03 e8 	mvi r1,1000
 2fc:	f8 00 00 85 	calli 510 <_Z6msleepj>
	pwm_duty(serv1,IZ);
 300:	29 61 00 00 	lw r1,(r11+0)
 304:	34 02 00 05 	mvi r2,5
 308:	f8 00 01 11 	calli 74c <_Z8pwm_dutyij>
	msleep(1000);
 30c:	34 01 03 e8 	mvi r1,1000
 310:	f8 00 00 80 	calli 510 <_Z6msleepj>
	pwm_duty(serv2,IZ);
 314:	29 61 00 04 	lw r1,(r11+4)
 318:	34 02 00 05 	mvi r2,5
 31c:	f8 00 01 0c 	calli 74c <_Z8pwm_dutyij>
	msleep(1000);
 320:	34 01 03 e8 	mvi r1,1000
 324:	f8 00 00 7b 	calli 510 <_Z6msleepj>
	pwm_duty(serv1,MID);
 328:	29 61 00 00 	lw r1,(r11+0)
 32c:	34 02 00 0f 	mvi r2,15
 330:	f8 00 01 07 	calli 74c <_Z8pwm_dutyij>
	msleep(1000);
 334:	34 01 03 e8 	mvi r1,1000
 338:	f8 00 00 76 	calli 510 <_Z6msleepj>
	pwm_duty(serv2,DER);
 33c:	29 61 00 04 	lw r1,(r11+4)
 340:	34 02 00 19 	mvi r2,25
 344:	f8 00 01 02 	calli 74c <_Z8pwm_dutyij>
}
 348:	2b 9d 00 04 	lw ra,(sp+4)
 34c:	2b 8b 00 08 	lw r11,(sp+8)
 350:	37 9c 00 08 	addi sp,sp,8
 354:	c3 a0 00 00 	ret

00000358 <_ZN3arm8set_servEii>:

void arm::set_serv(int x,int y){
 358:	37 9c ff f8 	addi sp,sp,-8
 35c:	5b 8b 00 08 	sw (sp+8),r11
 360:	5b 9d 00 04 	sw (sp+4),ra
 364:	b8 40 20 00 	mv r4,r2
	serv1 = x;
	serv2 = y;
 368:	58 23 00 04 	sw (r1+4),r3
void arm::set_serv(int x,int y){
 36c:	b8 20 58 00 	mv r11,r1
	serv1 = x;
 370:	59 64 00 00 	sw (r11+0),r4
	pwm_period(serv1,200);
 374:	b8 80 08 00 	mv r1,r4
 378:	34 02 00 c8 	mvi r2,200
 37c:	f8 00 01 30 	calli 83c <_Z10pwm_periodij>
	pwm_period(serv2,200);
 380:	29 61 00 04 	lw r1,(r11+4)
 384:	34 02 00 c8 	mvi r2,200
 388:	f8 00 01 2d 	calli 83c <_Z10pwm_periodij>
	pwm_duty(serv1,MID);
 38c:	29 61 00 00 	lw r1,(r11+0)
 390:	34 02 00 0f 	mvi r2,15
 394:	f8 00 00 ee 	calli 74c <_Z8pwm_dutyij>
	pwm_duty(serv2,IZ);
 398:	29 61 00 04 	lw r1,(r11+4)
 39c:	34 02 00 05 	mvi r2,5
 3a0:	f8 00 00 eb 	calli 74c <_Z8pwm_dutyij>
	pwm_en(serv1,1);
 3a4:	29 61 00 00 	lw r1,(r11+0)
 3a8:	34 02 00 01 	mvi r2,1
 3ac:	f8 00 00 ac 	calli 65c <_Z6pwm_enij>
	pwm_en(serv2,1);
 3b0:	29 61 00 04 	lw r1,(r11+4)
 3b4:	34 02 00 01 	mvi r2,1
 3b8:	f8 00 00 a9 	calli 65c <_Z6pwm_enij>
}
 3bc:	2b 9d 00 04 	lw ra,(sp+4)
 3c0:	2b 8b 00 08 	lw r11,(sp+8)
 3c4:	37 9c 00 08 	addi sp,sp,8
 3c8:	c3 a0 00 00 	ret

000003cc <main>:

int main(){
 3cc:	37 9c ff f4 	addi sp,sp,-12
 3d0:	5b 9d 00 04 	sw (sp+4),ra

	arm arm1;

	arm1.set_serv(0,2);
 3d4:	34 03 00 02 	mvi r3,2
 3d8:	34 02 00 00 	mvi r2,0
 3dc:	37 81 00 08 	addi r1,sp,8
 3e0:	fb ff ff de 	calli 358 <_ZN3arm8set_servEii>

	arm1.home();
 3e4:	37 81 00 08 	addi r1,sp,8
 3e8:	fb ff ff 89 	calli 20c <_ZN3arm4homeEv>

	arm1.derecha();
 3ec:	37 81 00 08 	addi r1,sp,8
 3f0:	fb ff ff 9c 	calli 260 <_ZN3arm7derechaEv>
	arm1.izquierda();
 3f4:	37 81 00 08 	addi r1,sp,8
 3f8:	fb ff ff b9 	calli 2dc <_ZN3arm9izquierdaEv>
		pwm_duty(0,IZ);
		pwm_duty(2,IZ);
		msleep(1000);
	}
		*/
}
 3fc:	34 01 00 00 	mvi r1,0
 400:	2b 9d 00 04 	lw ra,(sp+4)
 404:	37 9c 00 0c 	addi sp,sp,12
 408:	c3 a0 00 00 	ret

0000040c <_Z7tic_isrv>:

uint32_t tic_msec;

void tic_isr()
{
	tic_msec++;
 40c:	78 01 00 00 	mvhi r1,0x0
 410:	38 21 0c 50 	ori r1,r1,0xc50
 414:	28 22 00 00 	lw r2,(r1+0)
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
 418:	78 04 00 00 	mvhi r4,0x0
 41c:	38 84 0c 54 	ori r4,r4,0xc54
 420:	28 83 00 00 	lw r3,(r4+0)
	tic_msec++;
 424:	28 41 00 00 	lw r1,(r2+0)
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
 428:	28 63 00 00 	lw r3,(r3+0)
	tic_msec++;
 42c:	34 21 00 01 	addi r1,r1,1
 430:	58 41 00 00 	sw (r2+0),r1
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
 434:	34 01 00 0e 	mvi r1,14
 438:	58 61 00 00 	sw (r3+0),r1
}
 43c:	c3 a0 00 00 	ret

00000440 <_Z8isr_nullv>:
 440:	c3 a0 00 00 	ret

00000444 <_Z11irq_handlerj>:
{
 444:	37 9c ff f0 	addi sp,sp,-16
 448:	5b 8b 00 10 	sw (sp+16),r11
 44c:	5b 8c 00 0c 	sw (sp+12),r12
 450:	5b 8d 00 08 	sw (sp+8),r13
 454:	5b 9d 00 04 	sw (sp+4),ra
 458:	78 02 00 00 	mvhi r2,0x0
 45c:	38 42 0c 58 	ori r2,r2,0xc58
 460:	28 4b 00 00 	lw r11,(r2+0)
 464:	b8 20 60 00 	mv r12,r1
 468:	35 6d 00 80 	addi r13,r11,128
		if (pending & 0x01) (*isr_table[i])();
 46c:	21 81 00 01 	andi r1,r12,0x1
 470:	44 20 00 03 	be r1,r0,47c <_Z11irq_handlerj+0x38>
 474:	29 61 00 00 	lw r1,(r11+0)
 478:	d8 20 00 00 	call r1
 47c:	35 6b 00 04 	addi r11,r11,4
		pending >>= 1;
 480:	01 8c 00 01 	srui r12,r12,1
	for(i=0; i<32; i++) {
 484:	5d ab ff fa 	bne r13,r11,46c <_Z11irq_handlerj+0x28>
}
 488:	2b 9d 00 04 	lw ra,(sp+4)
 48c:	2b 8b 00 10 	lw r11,(sp+16)
 490:	2b 8c 00 0c 	lw r12,(sp+12)
 494:	2b 8d 00 08 	lw r13,(sp+8)
 498:	37 9c 00 10 	addi sp,sp,16
 49c:	c3 a0 00 00 	ret

000004a0 <_Z8isr_initv>:
{
 4a0:	78 02 00 00 	mvhi r2,0x0
 4a4:	38 42 0c 5c 	ori r2,r2,0xc5c
 4a8:	28 41 00 00 	lw r1,(r2+0)
 4ac:	78 02 00 00 	mvhi r2,0x0
 4b0:	38 42 0c 60 	ori r2,r2,0xc60
 4b4:	28 43 00 00 	lw r3,(r2+0)
 4b8:	34 22 00 80 	addi r2,r1,128
		isr_table[i] = &isr_null;
 4bc:	58 23 00 00 	sw (r1+0),r3
 4c0:	34 21 00 04 	addi r1,r1,4
	for(i=0; i<32; i++)
 4c4:	5c 22 ff fe 	bne r1,r2,4bc <_Z8isr_initv+0x1c>
}
 4c8:	c3 a0 00 00 	ret

000004cc <_Z12isr_registeriPFvvE>:
	isr_table[irq] = isr;
 4cc:	78 04 00 00 	mvhi r4,0x0
 4d0:	38 84 0c 64 	ori r4,r4,0xc64
 4d4:	3c 23 00 02 	sli r3,r1,2
 4d8:	28 81 00 00 	lw r1,(r4+0)
 4dc:	b4 23 08 00 	add r1,r1,r3
 4e0:	58 22 00 00 	sw (r1+0),r2
}
 4e4:	c3 a0 00 00 	ret

000004e8 <_Z14isr_unregisteri>:
	isr_table[irq] = &isr_null;
 4e8:	78 03 00 00 	mvhi r3,0x0
 4ec:	38 63 0c 68 	ori r3,r3,0xc68
 4f0:	3c 22 00 02 	sli r2,r1,2
 4f4:	28 61 00 00 	lw r1,(r3+0)
 4f8:	78 03 00 00 	mvhi r3,0x0
 4fc:	38 63 0c 6c 	ori r3,r3,0xc6c
 500:	b4 22 08 00 	add r1,r1,r2
 504:	28 62 00 00 	lw r2,(r3+0)
 508:	58 22 00 00 	sw (r1+0),r2
}
 50c:	c3 a0 00 00 	ret

00000510 <_Z6msleepj>:
	timer0->compare1 = (FCPU/1000)*msec;
 510:	78 03 00 00 	mvhi r3,0x0
 514:	38 02 c3 50 	mvu r2,0xc350
 518:	38 63 0c 70 	ori r3,r3,0xc70
 51c:	88 22 08 00 	mul r1,r1,r2
 520:	28 62 00 00 	lw r2,(r3+0)
 524:	28 42 00 00 	lw r2,(r2+0)
 528:	58 41 00 10 	sw (r2+16),r1
	timer0->counter1 = 0;
 52c:	58 40 00 14 	sw (r2+20),r0
	timer0->tcr1 = TIMER_EN;
 530:	34 01 00 08 	mvi r1,8
 534:	58 41 00 0c 	sw (r2+12),r1
 		tcr = timer0->tcr1;
 538:	28 41 00 0c 	lw r1,(r2+12)
 	} while ( ! (tcr & TIMER_TRIG) );
 53c:	20 21 00 01 	andi r1,r1,0x1
 540:	44 20 ff fe 	be r1,r0,538 <_Z6msleepj+0x28>
}
 544:	c3 a0 00 00 	ret

00000548 <_Z6nsleepj>:
	timer0->compare1 = (FCPU/1000000)*nsec;
 548:	78 03 00 00 	mvhi r3,0x0
 54c:	38 63 0c 74 	ori r3,r3,0xc74
 550:	28 62 00 00 	lw r2,(r3+0)
 554:	08 21 00 32 	muli r1,r1,50
 558:	28 42 00 00 	lw r2,(r2+0)
 55c:	58 41 00 10 	sw (r2+16),r1
	timer0->counter1 = 0;
 560:	58 40 00 14 	sw (r2+20),r0
	timer0->tcr1 = TIMER_EN;
 564:	34 01 00 08 	mvi r1,8
 568:	58 41 00 0c 	sw (r2+12),r1
 		tcr = timer0->tcr1;
 56c:	28 41 00 0c 	lw r1,(r2+12)
 	} while ( ! (tcr & TIMER_TRIG) );
 570:	20 21 00 01 	andi r1,r1,0x1
 574:	44 20 ff fe 	be r1,r0,56c <_Z6nsleepj+0x24>
}
 578:	c3 a0 00 00 	ret

0000057c <_Z8tic_initv>:
void tic_init()
{
	tic_msec = 0;

	// Setup timer0.0
	timer0->compare0 = (FCPU/10000);
 57c:	78 02 00 00 	mvhi r2,0x0
 580:	38 42 0c 78 	ori r2,r2,0xc78
 584:	28 41 00 00 	lw r1,(r2+0)
	tic_msec = 0;
 588:	78 03 00 00 	mvhi r3,0x0
	timer0->compare0 = (FCPU/10000);
 58c:	34 02 13 88 	mvi r2,5000
 590:	28 21 00 00 	lw r1,(r1+0)
	tic_msec = 0;
 594:	38 63 0c 7c 	ori r3,r3,0xc7c
	timer0->compare0 = (FCPU/10000);
 598:	58 22 00 04 	sw (r1+4),r2
	tic_msec = 0;
 59c:	28 62 00 00 	lw r2,(r3+0)
	timer0->counter0 = 0;
 5a0:	58 20 00 08 	sw (r1+8),r0
	isr_table[irq] = isr;
 5a4:	78 03 00 00 	mvhi r3,0x0
	tic_msec = 0;
 5a8:	58 40 00 00 	sw (r2+0),r0
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
 5ac:	34 02 00 0e 	mvi r2,14
 5b0:	58 22 00 00 	sw (r1+0),r2
	isr_table[irq] = isr;
 5b4:	78 02 00 00 	mvhi r2,0x0
 5b8:	38 42 0c 80 	ori r2,r2,0xc80
 5bc:	38 63 0c 84 	ori r3,r3,0xc84
 5c0:	28 41 00 00 	lw r1,(r2+0)
 5c4:	28 62 00 00 	lw r2,(r3+0)
 5c8:	58 22 00 04 	sw (r1+4),r2

	isr_register(1, &tic_isr);
}
 5cc:	c3 a0 00 00 	ret

000005d0 <_Z9uart_initv>:
	//uart0->lcr = 0x03;  // Line Control Register:    8N1
	//uart0->mcr = 0x00;  // Modem Control Register

	// Setup Divisor register (Fclk / Baud)
	//uart0->div = (FCPU/(57600*16));
}
 5d0:	c3 a0 00 00 	ret

000005d4 <_Z12uart_getcharv>:

char uart_getchar()
{   
	while (! (uart0->ucr & UART_DR)) ;
 5d4:	78 02 00 00 	mvhi r2,0x0
 5d8:	38 42 0c 88 	ori r2,r2,0xc88
 5dc:	28 41 00 00 	lw r1,(r2+0)
 5e0:	28 22 00 00 	lw r2,(r1+0)
 5e4:	28 41 00 00 	lw r1,(r2+0)
 5e8:	20 21 00 01 	andi r1,r1,0x1
 5ec:	44 20 ff fe 	be r1,r0,5e4 <_Z12uart_getcharv+0x10>
	return uart0->rxtx;
 5f0:	28 41 00 04 	lw r1,(r2+4)
}
 5f4:	20 21 00 ff 	andi r1,r1,0xff
 5f8:	c3 a0 00 00 	ret

000005fc <_Z12uart_putcharc>:

void uart_putchar(char c)
{
	while (uart0->ucr & UART_BUSY) ;
 5fc:	78 03 00 00 	mvhi r3,0x0
 600:	38 63 0c 8c 	ori r3,r3,0xc8c
 604:	28 62 00 00 	lw r2,(r3+0)
{
 608:	20 21 00 ff 	andi r1,r1,0xff
	while (uart0->ucr & UART_BUSY) ;
 60c:	28 43 00 00 	lw r3,(r2+0)
 610:	28 62 00 00 	lw r2,(r3+0)
 614:	20 42 00 10 	andi r2,r2,0x10
 618:	5c 40 ff fe 	bne r2,r0,610 <_Z12uart_putcharc+0x14>
	uart0->rxtx = c;
 61c:	58 61 00 04 	sw (r3+4),r1
}
 620:	c3 a0 00 00 	ret

00000624 <_Z11uart_putstrPc>:

void uart_putstr(char *str)
{
	char *c = str;
	while(*c) {
 624:	40 24 00 00 	lbu r4,(r1+0)
 628:	44 80 00 0c 	be r4,r0,658 <_Z11uart_putstrPc+0x34>
	while (uart0->ucr & UART_BUSY) ;
 62c:	78 03 00 00 	mvhi r3,0x0
 630:	38 63 0c 90 	ori r3,r3,0xc90
 634:	28 62 00 00 	lw r2,(r3+0)
 638:	28 43 00 00 	lw r3,(r2+0)
 63c:	28 62 00 00 	lw r2,(r3+0)
 640:	20 42 00 10 	andi r2,r2,0x10
 644:	5c 40 ff fe 	bne r2,r0,63c <_Z11uart_putstrPc+0x18>
	uart0->rxtx = c;
 648:	58 64 00 04 	sw (r3+4),r4
		uart_putchar(*c);
		c++;
 64c:	34 21 00 01 	addi r1,r1,1
	while(*c) {
 650:	40 24 00 00 	lbu r4,(r1+0)
 654:	5c 80 ff fa 	bne r4,r0,63c <_Z11uart_putstrPc+0x18>
	}
}
 658:	c3 a0 00 00 	ret

0000065c <_Z6pwm_enij>:
 * PWM Functions
 */

void pwm_en(int sel, uint32_t val){

	if(sel == 0) pwm0->en0 = val;
 65c:	5c 20 00 0e 	bne r1,r0,694 <_Z6pwm_enij+0x38>
 660:	78 04 00 00 	mvhi r4,0x0
 664:	38 84 0c 94 	ori r4,r4,0xc94
 668:	28 83 00 00 	lw r3,(r4+0)
 66c:	28 63 00 00 	lw r3,(r3+0)
 670:	58 62 00 00 	sw (r3+0),r2
	if(sel == 1) pwm0->en1 = val;
	if(sel == 2) pwm0->en2 = val;
	if(sel == 3) pwm0->en3 = val;
	if(sel == 4) pwm0->en4 = val;
	if(sel == 5) pwm0->en5 = val;
 674:	34 03 00 05 	mvi r3,5
 678:	5c 23 00 16 	bne r1,r3,6d0 <_Z6pwm_enij+0x74>
 67c:	78 04 00 00 	mvhi r4,0x0
 680:	38 84 0c 94 	ori r4,r4,0xc94
 684:	28 81 00 00 	lw r1,(r4+0)
 688:	28 21 00 00 	lw r1,(r1+0)
 68c:	58 22 00 3c 	sw (r1+60),r2
	if(sel == 6) pwm0->en6 = val;
	if(sel == 7) pwm0->en7 = val;

}
 690:	c3 a0 00 00 	ret
	if(sel == 1) pwm0->en1 = val;
 694:	34 03 00 01 	mvi r3,1
 698:	5c 23 00 07 	bne r1,r3,6b4 <_Z6pwm_enij+0x58>
 69c:	78 04 00 00 	mvhi r4,0x0
 6a0:	38 84 0c 94 	ori r4,r4,0xc94
 6a4:	28 83 00 00 	lw r3,(r4+0)
 6a8:	28 63 00 00 	lw r3,(r3+0)
 6ac:	58 62 00 0c 	sw (r3+12),r2
 6b0:	e3 ff ff f1 	bi 674 <_Z6pwm_enij+0x18>
	if(sel == 2) pwm0->en2 = val;
 6b4:	34 03 00 02 	mvi r3,2
 6b8:	5c 23 00 0e 	bne r1,r3,6f0 <_Z6pwm_enij+0x94>
 6bc:	78 04 00 00 	mvhi r4,0x0
 6c0:	38 84 0c 94 	ori r4,r4,0xc94
 6c4:	28 83 00 00 	lw r3,(r4+0)
 6c8:	28 63 00 00 	lw r3,(r3+0)
 6cc:	58 62 00 18 	sw (r3+24),r2
	if(sel == 6) pwm0->en6 = val;
 6d0:	34 03 00 06 	mvi r3,6
 6d4:	5c 23 00 0e 	bne r1,r3,70c <_Z6pwm_enij+0xb0>
 6d8:	78 03 00 00 	mvhi r3,0x0
 6dc:	38 63 0c 94 	ori r3,r3,0xc94
 6e0:	28 61 00 00 	lw r1,(r3+0)
 6e4:	28 21 00 00 	lw r1,(r1+0)
 6e8:	58 22 00 48 	sw (r1+72),r2
}
 6ec:	c3 a0 00 00 	ret
	if(sel == 3) pwm0->en3 = val;
 6f0:	34 03 00 03 	mvi r3,3
 6f4:	5c 23 00 0e 	bne r1,r3,72c <_Z6pwm_enij+0xd0>
 6f8:	78 04 00 00 	mvhi r4,0x0
 6fc:	38 84 0c 94 	ori r4,r4,0xc94
 700:	28 83 00 00 	lw r3,(r4+0)
 704:	28 63 00 00 	lw r3,(r3+0)
 708:	58 62 00 24 	sw (r3+36),r2
	if(sel == 7) pwm0->en7 = val;
 70c:	34 03 00 07 	mvi r3,7
 710:	5c 23 ff e0 	bne r1,r3,690 <_Z6pwm_enij+0x34>
 714:	78 04 00 00 	mvhi r4,0x0
 718:	38 84 0c 94 	ori r4,r4,0xc94
 71c:	28 81 00 00 	lw r1,(r4+0)
 720:	28 21 00 00 	lw r1,(r1+0)
 724:	58 22 00 54 	sw (r1+84),r2
}
 728:	c3 a0 00 00 	ret
	if(sel == 4) pwm0->en4 = val;
 72c:	34 03 00 04 	mvi r3,4
 730:	5c 23 ff d1 	bne r1,r3,674 <_Z6pwm_enij+0x18>
 734:	78 03 00 00 	mvhi r3,0x0
 738:	38 63 0c 94 	ori r3,r3,0xc94
 73c:	28 61 00 00 	lw r1,(r3+0)
 740:	28 21 00 00 	lw r1,(r1+0)
 744:	58 22 00 30 	sw (r1+48),r2
}
 748:	c3 a0 00 00 	ret

0000074c <_Z8pwm_dutyij>:

void pwm_duty(int sel, uint32_t val){

	if(sel == 0) pwm0->duty0 = val;
 74c:	5c 20 00 0e 	bne r1,r0,784 <_Z8pwm_dutyij+0x38>
 750:	78 04 00 00 	mvhi r4,0x0
 754:	38 84 0c 98 	ori r4,r4,0xc98
 758:	28 83 00 00 	lw r3,(r4+0)
 75c:	28 63 00 00 	lw r3,(r3+0)
 760:	58 62 00 08 	sw (r3+8),r2
	if(sel == 1) pwm0->duty1 = val;
	if(sel == 2) pwm0->duty2 = val;
	if(sel == 3) pwm0->duty3 = val;
	if(sel == 4) pwm0->duty4 = val;
	if(sel == 5) pwm0->duty5 = val;
 764:	34 03 00 05 	mvi r3,5
 768:	5c 23 00 16 	bne r1,r3,7c0 <_Z8pwm_dutyij+0x74>
 76c:	78 04 00 00 	mvhi r4,0x0
 770:	38 84 0c 98 	ori r4,r4,0xc98
 774:	28 81 00 00 	lw r1,(r4+0)
 778:	28 21 00 00 	lw r1,(r1+0)
 77c:	58 22 00 44 	sw (r1+68),r2
	if(sel == 6) pwm0->duty6 = val;
	if(sel == 7) pwm0->duty7 = val;

}
 780:	c3 a0 00 00 	ret
	if(sel == 1) pwm0->duty1 = val;
 784:	34 03 00 01 	mvi r3,1
 788:	5c 23 00 07 	bne r1,r3,7a4 <_Z8pwm_dutyij+0x58>
 78c:	78 04 00 00 	mvhi r4,0x0
 790:	38 84 0c 98 	ori r4,r4,0xc98
 794:	28 83 00 00 	lw r3,(r4+0)
 798:	28 63 00 00 	lw r3,(r3+0)
 79c:	58 62 00 14 	sw (r3+20),r2
 7a0:	e3 ff ff f1 	bi 764 <_Z8pwm_dutyij+0x18>
	if(sel == 2) pwm0->duty2 = val;
 7a4:	34 03 00 02 	mvi r3,2
 7a8:	5c 23 00 0e 	bne r1,r3,7e0 <_Z8pwm_dutyij+0x94>
 7ac:	78 04 00 00 	mvhi r4,0x0
 7b0:	38 84 0c 98 	ori r4,r4,0xc98
 7b4:	28 83 00 00 	lw r3,(r4+0)
 7b8:	28 63 00 00 	lw r3,(r3+0)
 7bc:	58 62 00 20 	sw (r3+32),r2
	if(sel == 6) pwm0->duty6 = val;
 7c0:	34 03 00 06 	mvi r3,6
 7c4:	5c 23 00 0e 	bne r1,r3,7fc <_Z8pwm_dutyij+0xb0>
 7c8:	78 03 00 00 	mvhi r3,0x0
 7cc:	38 63 0c 98 	ori r3,r3,0xc98
 7d0:	28 61 00 00 	lw r1,(r3+0)
 7d4:	28 21 00 00 	lw r1,(r1+0)
 7d8:	58 22 00 50 	sw (r1+80),r2
}
 7dc:	c3 a0 00 00 	ret
	if(sel == 3) pwm0->duty3 = val;
 7e0:	34 03 00 03 	mvi r3,3
 7e4:	5c 23 00 0e 	bne r1,r3,81c <_Z8pwm_dutyij+0xd0>
 7e8:	78 04 00 00 	mvhi r4,0x0
 7ec:	38 84 0c 98 	ori r4,r4,0xc98
 7f0:	28 83 00 00 	lw r3,(r4+0)
 7f4:	28 63 00 00 	lw r3,(r3+0)
 7f8:	58 62 00 2c 	sw (r3+44),r2
	if(sel == 7) pwm0->duty7 = val;
 7fc:	34 03 00 07 	mvi r3,7
 800:	5c 23 ff e0 	bne r1,r3,780 <_Z8pwm_dutyij+0x34>
 804:	78 04 00 00 	mvhi r4,0x0
 808:	38 84 0c 98 	ori r4,r4,0xc98
 80c:	28 81 00 00 	lw r1,(r4+0)
 810:	28 21 00 00 	lw r1,(r1+0)
 814:	58 22 00 5c 	sw (r1+92),r2
}
 818:	c3 a0 00 00 	ret
	if(sel == 4) pwm0->duty4 = val;
 81c:	34 03 00 04 	mvi r3,4
 820:	5c 23 ff d1 	bne r1,r3,764 <_Z8pwm_dutyij+0x18>
 824:	78 03 00 00 	mvhi r3,0x0
 828:	38 63 0c 98 	ori r3,r3,0xc98
 82c:	28 61 00 00 	lw r1,(r3+0)
 830:	28 21 00 00 	lw r1,(r1+0)
 834:	58 22 00 38 	sw (r1+56),r2
}
 838:	c3 a0 00 00 	ret

0000083c <_Z10pwm_periodij>:

void pwm_period(int sel, uint32_t val){

	if(sel == 0) pwm0->period0 = val;
 83c:	5c 20 00 0e 	bne r1,r0,874 <_Z10pwm_periodij+0x38>
 840:	78 04 00 00 	mvhi r4,0x0
 844:	38 84 0c 9c 	ori r4,r4,0xc9c
 848:	28 83 00 00 	lw r3,(r4+0)
 84c:	28 63 00 00 	lw r3,(r3+0)
 850:	58 62 00 04 	sw (r3+4),r2
	if(sel == 1) pwm0->period1 = val;
	if(sel == 2) pwm0->period2 = val;
	if(sel == 3) pwm0->period3 = val;
	if(sel == 4) pwm0->period4 = val;
	if(sel == 5) pwm0->period5 = val;
 854:	34 03 00 05 	mvi r3,5
 858:	5c 23 00 16 	bne r1,r3,8b0 <_Z10pwm_periodij+0x74>
 85c:	78 04 00 00 	mvhi r4,0x0
 860:	38 84 0c 9c 	ori r4,r4,0xc9c
 864:	28 81 00 00 	lw r1,(r4+0)
 868:	28 21 00 00 	lw r1,(r1+0)
 86c:	58 22 00 40 	sw (r1+64),r2
	if(sel == 6) pwm0->period6 = val;
	if(sel == 7) pwm0->period7 = val;

}
 870:	c3 a0 00 00 	ret
	if(sel == 1) pwm0->period1 = val;
 874:	34 03 00 01 	mvi r3,1
 878:	5c 23 00 07 	bne r1,r3,894 <_Z10pwm_periodij+0x58>
 87c:	78 04 00 00 	mvhi r4,0x0
 880:	38 84 0c 9c 	ori r4,r4,0xc9c
 884:	28 83 00 00 	lw r3,(r4+0)
 888:	28 63 00 00 	lw r3,(r3+0)
 88c:	58 62 00 10 	sw (r3+16),r2
 890:	e3 ff ff f1 	bi 854 <_Z10pwm_periodij+0x18>
	if(sel == 2) pwm0->period2 = val;
 894:	34 03 00 02 	mvi r3,2
 898:	5c 23 00 0e 	bne r1,r3,8d0 <_Z10pwm_periodij+0x94>
 89c:	78 04 00 00 	mvhi r4,0x0
 8a0:	38 84 0c 9c 	ori r4,r4,0xc9c
 8a4:	28 83 00 00 	lw r3,(r4+0)
 8a8:	28 63 00 00 	lw r3,(r3+0)
 8ac:	58 62 00 1c 	sw (r3+28),r2
	if(sel == 6) pwm0->period6 = val;
 8b0:	34 03 00 06 	mvi r3,6
 8b4:	5c 23 00 0e 	bne r1,r3,8ec <_Z10pwm_periodij+0xb0>
 8b8:	78 03 00 00 	mvhi r3,0x0
 8bc:	38 63 0c 9c 	ori r3,r3,0xc9c
 8c0:	28 61 00 00 	lw r1,(r3+0)
 8c4:	28 21 00 00 	lw r1,(r1+0)
 8c8:	58 22 00 4c 	sw (r1+76),r2
}
 8cc:	c3 a0 00 00 	ret
	if(sel == 3) pwm0->period3 = val;
 8d0:	34 03 00 03 	mvi r3,3
 8d4:	5c 23 00 0e 	bne r1,r3,90c <_Z10pwm_periodij+0xd0>
 8d8:	78 04 00 00 	mvhi r4,0x0
 8dc:	38 84 0c 9c 	ori r4,r4,0xc9c
 8e0:	28 83 00 00 	lw r3,(r4+0)
 8e4:	28 63 00 00 	lw r3,(r3+0)
 8e8:	58 62 00 28 	sw (r3+40),r2
	if(sel == 7) pwm0->period7 = val;
 8ec:	34 03 00 07 	mvi r3,7
 8f0:	5c 23 ff e0 	bne r1,r3,870 <_Z10pwm_periodij+0x34>
 8f4:	78 04 00 00 	mvhi r4,0x0
 8f8:	38 84 0c 9c 	ori r4,r4,0xc9c
 8fc:	28 81 00 00 	lw r1,(r4+0)
 900:	28 21 00 00 	lw r1,(r1+0)
 904:	58 22 00 58 	sw (r1+88),r2
}
 908:	c3 a0 00 00 	ret
	if(sel == 4) pwm0->period4 = val;
 90c:	34 03 00 04 	mvi r3,4
 910:	5c 23 ff d1 	bne r1,r3,854 <_Z10pwm_periodij+0x18>
 914:	78 03 00 00 	mvhi r3,0x0
 918:	38 63 0c 9c 	ori r3,r3,0xc9c
 91c:	28 61 00 00 	lw r1,(r3+0)
 920:	28 21 00 00 	lw r1,(r1+0)
 924:	58 22 00 34 	sw (r1+52),r2
}
 928:	c3 a0 00 00 	ret

0000092c <_Z9pwm_getenj>:

uint32_t pwm_geten(uint32_t sel){

	if(sel == 0) return pwm0->en0;
 92c:	44 20 00 16 	be r1,r0,984 <_Z9pwm_getenj+0x58>
	if(sel == 1) return pwm0->en1;
 930:	34 02 00 01 	mvi r2,1
 934:	44 22 00 1b 	be r1,r2,9a0 <_Z9pwm_getenj+0x74>
	if(sel == 2) return pwm0->en2;
 938:	34 02 00 02 	mvi r2,2
 93c:	44 22 00 26 	be r1,r2,9d4 <_Z9pwm_getenj+0xa8>
	if(sel == 3) return pwm0->en3;
 940:	34 02 00 03 	mvi r2,3
 944:	44 22 00 1e 	be r1,r2,9bc <_Z9pwm_getenj+0x90>
	if(sel == 4) return pwm0->en4;
 948:	34 02 00 04 	mvi r2,4
 94c:	44 22 00 29 	be r1,r2,9f0 <_Z9pwm_getenj+0xc4>
	if(sel == 5) return pwm0->en5;
 950:	34 02 00 05 	mvi r2,5
 954:	44 22 00 2d 	be r1,r2,a08 <_Z9pwm_getenj+0xdc>
	if(sel == 6) return pwm0->en6;
 958:	34 02 00 06 	mvi r2,6
 95c:	44 22 00 31 	be r1,r2,a20 <_Z9pwm_getenj+0xf4>
	if(sel == 7) return pwm0->en7;
 960:	34 03 00 07 	mvi r3,7
	return 0;
 964:	34 02 00 00 	mvi r2,0
	if(sel == 7) return pwm0->en7;
 968:	5c 23 00 0c 	bne r1,r3,998 <_Z9pwm_getenj+0x6c>
 96c:	78 02 00 00 	mvhi r2,0x0
 970:	38 42 0c a0 	ori r2,r2,0xca0
 974:	28 41 00 00 	lw r1,(r2+0)
 978:	28 21 00 00 	lw r1,(r1+0)
 97c:	28 22 00 54 	lw r2,(r1+84)
 980:	e0 00 00 06 	bi 998 <_Z9pwm_getenj+0x6c>
	if(sel == 0) return pwm0->en0;
 984:	78 02 00 00 	mvhi r2,0x0
 988:	38 42 0c a0 	ori r2,r2,0xca0
 98c:	28 41 00 00 	lw r1,(r2+0)
 990:	28 21 00 00 	lw r1,(r1+0)
 994:	28 22 00 00 	lw r2,(r1+0)

}
 998:	b8 40 08 00 	mv r1,r2
 99c:	c3 a0 00 00 	ret
	if(sel == 1) return pwm0->en1;
 9a0:	78 02 00 00 	mvhi r2,0x0
 9a4:	38 42 0c a0 	ori r2,r2,0xca0
 9a8:	28 41 00 00 	lw r1,(r2+0)
 9ac:	28 21 00 00 	lw r1,(r1+0)
 9b0:	28 22 00 0c 	lw r2,(r1+12)
}
 9b4:	b8 40 08 00 	mv r1,r2
 9b8:	c3 a0 00 00 	ret
	if(sel == 3) return pwm0->en3;
 9bc:	78 02 00 00 	mvhi r2,0x0
 9c0:	38 42 0c a0 	ori r2,r2,0xca0
 9c4:	28 41 00 00 	lw r1,(r2+0)
 9c8:	28 21 00 00 	lw r1,(r1+0)
 9cc:	28 22 00 24 	lw r2,(r1+36)
 9d0:	e3 ff ff f2 	bi 998 <_Z9pwm_getenj+0x6c>
	if(sel == 2) return pwm0->en2;
 9d4:	78 02 00 00 	mvhi r2,0x0
 9d8:	38 42 0c a0 	ori r2,r2,0xca0
 9dc:	28 41 00 00 	lw r1,(r2+0)
 9e0:	28 21 00 00 	lw r1,(r1+0)
 9e4:	28 22 00 18 	lw r2,(r1+24)
}
 9e8:	b8 40 08 00 	mv r1,r2
 9ec:	c3 a0 00 00 	ret
	if(sel == 4) return pwm0->en4;
 9f0:	78 02 00 00 	mvhi r2,0x0
 9f4:	38 42 0c a0 	ori r2,r2,0xca0
 9f8:	28 41 00 00 	lw r1,(r2+0)
 9fc:	28 21 00 00 	lw r1,(r1+0)
 a00:	28 22 00 30 	lw r2,(r1+48)
 a04:	e3 ff ff e5 	bi 998 <_Z9pwm_getenj+0x6c>
	if(sel == 5) return pwm0->en5;
 a08:	78 02 00 00 	mvhi r2,0x0
 a0c:	38 42 0c a0 	ori r2,r2,0xca0
 a10:	28 41 00 00 	lw r1,(r2+0)
 a14:	28 21 00 00 	lw r1,(r1+0)
 a18:	28 22 00 3c 	lw r2,(r1+60)
 a1c:	e3 ff ff df 	bi 998 <_Z9pwm_getenj+0x6c>
	if(sel == 6) return pwm0->en6;
 a20:	78 02 00 00 	mvhi r2,0x0
 a24:	38 42 0c a0 	ori r2,r2,0xca0
 a28:	28 41 00 00 	lw r1,(r2+0)
 a2c:	28 21 00 00 	lw r1,(r1+0)
 a30:	28 22 00 48 	lw r2,(r1+72)
 a34:	e3 ff ff d9 	bi 998 <_Z9pwm_getenj+0x6c>

00000a38 <_Z11pwm_getdutyj>:

uint32_t pwm_getduty(uint32_t sel){

	if(sel == 0) return pwm0->duty0;
 a38:	44 20 00 16 	be r1,r0,a90 <_Z11pwm_getdutyj+0x58>
	if(sel == 1) return pwm0->duty1;
 a3c:	34 02 00 01 	mvi r2,1
 a40:	44 22 00 1b 	be r1,r2,aac <_Z11pwm_getdutyj+0x74>
	if(sel == 2) return pwm0->duty2;
 a44:	34 02 00 02 	mvi r2,2
 a48:	44 22 00 26 	be r1,r2,ae0 <_Z11pwm_getdutyj+0xa8>
	if(sel == 3) return pwm0->duty3;
 a4c:	34 02 00 03 	mvi r2,3
 a50:	44 22 00 1e 	be r1,r2,ac8 <_Z11pwm_getdutyj+0x90>
	if(sel == 4) return pwm0->duty4;
 a54:	34 02 00 04 	mvi r2,4
 a58:	44 22 00 29 	be r1,r2,afc <_Z11pwm_getdutyj+0xc4>
	if(sel == 5) return pwm0->duty5;
 a5c:	34 02 00 05 	mvi r2,5
 a60:	44 22 00 2d 	be r1,r2,b14 <_Z11pwm_getdutyj+0xdc>
	if(sel == 6) return pwm0->duty6;
 a64:	34 02 00 06 	mvi r2,6
 a68:	44 22 00 31 	be r1,r2,b2c <_Z11pwm_getdutyj+0xf4>
	if(sel == 7) return pwm0->duty7;
 a6c:	34 03 00 07 	mvi r3,7
	return 0;
 a70:	34 02 00 00 	mvi r2,0
	if(sel == 7) return pwm0->duty7;
 a74:	5c 23 00 0c 	bne r1,r3,aa4 <_Z11pwm_getdutyj+0x6c>
 a78:	78 02 00 00 	mvhi r2,0x0
 a7c:	38 42 0c a4 	ori r2,r2,0xca4
 a80:	28 41 00 00 	lw r1,(r2+0)
 a84:	28 21 00 00 	lw r1,(r1+0)
 a88:	28 22 00 5c 	lw r2,(r1+92)
 a8c:	e0 00 00 06 	bi aa4 <_Z11pwm_getdutyj+0x6c>
	if(sel == 0) return pwm0->duty0;
 a90:	78 02 00 00 	mvhi r2,0x0
 a94:	38 42 0c a4 	ori r2,r2,0xca4
 a98:	28 41 00 00 	lw r1,(r2+0)
 a9c:	28 21 00 00 	lw r1,(r1+0)
 aa0:	28 22 00 08 	lw r2,(r1+8)
	
}
 aa4:	b8 40 08 00 	mv r1,r2
 aa8:	c3 a0 00 00 	ret
	if(sel == 1) return pwm0->duty1;
 aac:	78 02 00 00 	mvhi r2,0x0
 ab0:	38 42 0c a4 	ori r2,r2,0xca4
 ab4:	28 41 00 00 	lw r1,(r2+0)
 ab8:	28 21 00 00 	lw r1,(r1+0)
 abc:	28 22 00 14 	lw r2,(r1+20)
}
 ac0:	b8 40 08 00 	mv r1,r2
 ac4:	c3 a0 00 00 	ret
	if(sel == 3) return pwm0->duty3;
 ac8:	78 02 00 00 	mvhi r2,0x0
 acc:	38 42 0c a4 	ori r2,r2,0xca4
 ad0:	28 41 00 00 	lw r1,(r2+0)
 ad4:	28 21 00 00 	lw r1,(r1+0)
 ad8:	28 22 00 2c 	lw r2,(r1+44)
 adc:	e3 ff ff f2 	bi aa4 <_Z11pwm_getdutyj+0x6c>
	if(sel == 2) return pwm0->duty2;
 ae0:	78 02 00 00 	mvhi r2,0x0
 ae4:	38 42 0c a4 	ori r2,r2,0xca4
 ae8:	28 41 00 00 	lw r1,(r2+0)
 aec:	28 21 00 00 	lw r1,(r1+0)
 af0:	28 22 00 20 	lw r2,(r1+32)
}
 af4:	b8 40 08 00 	mv r1,r2
 af8:	c3 a0 00 00 	ret
	if(sel == 4) return pwm0->duty4;
 afc:	78 02 00 00 	mvhi r2,0x0
 b00:	38 42 0c a4 	ori r2,r2,0xca4
 b04:	28 41 00 00 	lw r1,(r2+0)
 b08:	28 21 00 00 	lw r1,(r1+0)
 b0c:	28 22 00 38 	lw r2,(r1+56)
 b10:	e3 ff ff e5 	bi aa4 <_Z11pwm_getdutyj+0x6c>
	if(sel == 5) return pwm0->duty5;
 b14:	78 02 00 00 	mvhi r2,0x0
 b18:	38 42 0c a4 	ori r2,r2,0xca4
 b1c:	28 41 00 00 	lw r1,(r2+0)
 b20:	28 21 00 00 	lw r1,(r1+0)
 b24:	28 22 00 44 	lw r2,(r1+68)
 b28:	e3 ff ff df 	bi aa4 <_Z11pwm_getdutyj+0x6c>
	if(sel == 6) return pwm0->duty6;
 b2c:	78 02 00 00 	mvhi r2,0x0
 b30:	38 42 0c a4 	ori r2,r2,0xca4
 b34:	28 41 00 00 	lw r1,(r2+0)
 b38:	28 21 00 00 	lw r1,(r1+0)
 b3c:	28 22 00 50 	lw r2,(r1+80)
 b40:	e3 ff ff d9 	bi aa4 <_Z11pwm_getdutyj+0x6c>

00000b44 <_Z13pwm_getperiodj>:

uint32_t pwm_getperiod(uint32_t sel){

	if(sel == 0) return pwm0->period0;
 b44:	44 20 00 16 	be r1,r0,b9c <_Z13pwm_getperiodj+0x58>
	if(sel == 1) return pwm0->period1;
 b48:	34 02 00 01 	mvi r2,1
 b4c:	44 22 00 1b 	be r1,r2,bb8 <_Z13pwm_getperiodj+0x74>
	if(sel == 2) return pwm0->period2;
 b50:	34 02 00 02 	mvi r2,2
 b54:	44 22 00 26 	be r1,r2,bec <_Z13pwm_getperiodj+0xa8>
	if(sel == 3) return pwm0->period3;
 b58:	34 02 00 03 	mvi r2,3
 b5c:	44 22 00 1e 	be r1,r2,bd4 <_Z13pwm_getperiodj+0x90>
	if(sel == 4) return pwm0->period4;
 b60:	34 02 00 04 	mvi r2,4
 b64:	44 22 00 29 	be r1,r2,c08 <_Z13pwm_getperiodj+0xc4>
	if(sel == 5) return pwm0->period5;
 b68:	34 02 00 05 	mvi r2,5
 b6c:	44 22 00 2d 	be r1,r2,c20 <_Z13pwm_getperiodj+0xdc>
	if(sel == 6) return pwm0->period6;
 b70:	34 02 00 06 	mvi r2,6
 b74:	44 22 00 31 	be r1,r2,c38 <_Z13pwm_getperiodj+0xf4>
	if(sel == 7) return pwm0->period7;
 b78:	34 03 00 07 	mvi r3,7
	return 0;
 b7c:	34 02 00 00 	mvi r2,0
	if(sel == 7) return pwm0->period7;
 b80:	5c 23 00 0c 	bne r1,r3,bb0 <_Z13pwm_getperiodj+0x6c>
 b84:	78 02 00 00 	mvhi r2,0x0
 b88:	38 42 0c a8 	ori r2,r2,0xca8
 b8c:	28 41 00 00 	lw r1,(r2+0)
 b90:	28 21 00 00 	lw r1,(r1+0)
 b94:	28 22 00 58 	lw r2,(r1+88)
 b98:	e0 00 00 06 	bi bb0 <_Z13pwm_getperiodj+0x6c>
	if(sel == 0) return pwm0->period0;
 b9c:	78 02 00 00 	mvhi r2,0x0
 ba0:	38 42 0c a8 	ori r2,r2,0xca8
 ba4:	28 41 00 00 	lw r1,(r2+0)
 ba8:	28 21 00 00 	lw r1,(r1+0)
 bac:	28 22 00 04 	lw r2,(r1+4)
	
 bb0:	b8 40 08 00 	mv r1,r2
 bb4:	c3 a0 00 00 	ret
	if(sel == 1) return pwm0->period1;
 bb8:	78 02 00 00 	mvhi r2,0x0
 bbc:	38 42 0c a8 	ori r2,r2,0xca8
 bc0:	28 41 00 00 	lw r1,(r2+0)
 bc4:	28 21 00 00 	lw r1,(r1+0)
 bc8:	28 22 00 10 	lw r2,(r1+16)
 bcc:	b8 40 08 00 	mv r1,r2
 bd0:	c3 a0 00 00 	ret
	if(sel == 3) return pwm0->period3;
 bd4:	78 02 00 00 	mvhi r2,0x0
 bd8:	38 42 0c a8 	ori r2,r2,0xca8
 bdc:	28 41 00 00 	lw r1,(r2+0)
 be0:	28 21 00 00 	lw r1,(r1+0)
 be4:	28 22 00 28 	lw r2,(r1+40)
 be8:	e3 ff ff f2 	bi bb0 <_Z13pwm_getperiodj+0x6c>
	if(sel == 2) return pwm0->period2;
 bec:	78 02 00 00 	mvhi r2,0x0
 bf0:	38 42 0c a8 	ori r2,r2,0xca8
 bf4:	28 41 00 00 	lw r1,(r2+0)
 bf8:	28 21 00 00 	lw r1,(r1+0)
 bfc:	28 22 00 1c 	lw r2,(r1+28)
 c00:	b8 40 08 00 	mv r1,r2
 c04:	c3 a0 00 00 	ret
	if(sel == 4) return pwm0->period4;
 c08:	78 02 00 00 	mvhi r2,0x0
 c0c:	38 42 0c a8 	ori r2,r2,0xca8
 c10:	28 41 00 00 	lw r1,(r2+0)
 c14:	28 21 00 00 	lw r1,(r1+0)
 c18:	28 22 00 34 	lw r2,(r1+52)
 c1c:	e3 ff ff e5 	bi bb0 <_Z13pwm_getperiodj+0x6c>
	if(sel == 5) return pwm0->period5;
 c20:	78 02 00 00 	mvhi r2,0x0
 c24:	38 42 0c a8 	ori r2,r2,0xca8
 c28:	28 41 00 00 	lw r1,(r2+0)
 c2c:	28 21 00 00 	lw r1,(r1+0)
 c30:	28 22 00 40 	lw r2,(r1+64)
 c34:	e3 ff ff df 	bi bb0 <_Z13pwm_getperiodj+0x6c>
	if(sel == 6) return pwm0->period6;
 c38:	78 02 00 00 	mvhi r2,0x0
 c3c:	38 42 0c a8 	ori r2,r2,0xca8
 c40:	28 41 00 00 	lw r1,(r2+0)
 c44:	28 21 00 00 	lw r1,(r1+0)
 c48:	28 22 00 4c 	lw r2,(r1+76)
 c4c:	e3 ff ff d9 	bi bb0 <_Z13pwm_getperiodj+0x6c>
