
image:     formato del fichero elf32-lm32

Secciones:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000029a8  00000000  00000000  00000054  2**2
                  CONTENTS, ALLOC, LOAD, CODE
  1 .rodata       00000328  000029a8  000029a8  000029fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         00000014  00002cd0  00002cd0  00002d24  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000000b0  00002ce4  00002ce4  00002d38  2**2
                  ALLOC
  4 .debug_frame  000005b0  00000000  00000000  00002d38  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000040a0  00000000  00000000  000032e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000ba9  00000000  00000000  00007388  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_loc    00000b56  00000000  00000000  00007f31  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_aranges 000000c8  00000000  00000000  00008a87  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 000000c8  00000000  00000000  00008b4f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00001d31  00000000  00000000  00008c17  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000007ea  00000000  00000000  0000a948  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .comment      00000011  00000000  00000000  0000b132  2**0
                  CONTENTS, READONLY

Desensamblado de la secci√≥n .text:

00000000 <_ftext>:
       0:	98 00 00 00 	xor r0,r0,r0
       4:	d0 00 00 00 	wcsr IE,r0
       8:	78 01 00 00 	mvhi r1,0x0
       c:	38 21 00 00 	ori r1,r1,0x0
      10:	d0 e1 00 00 	wcsr EBA,r1
      14:	f8 00 00 3b 	calli 100 <_crt0>
      18:	34 00 00 00 	nop
      1c:	34 00 00 00 	nop

00000020 <_breakpoint_handler>:
      20:	34 00 00 00 	nop
      24:	34 00 00 00 	nop
      28:	34 00 00 00 	nop
      2c:	34 00 00 00 	nop
      30:	34 00 00 00 	nop
      34:	34 00 00 00 	nop
      38:	34 00 00 00 	nop
      3c:	34 00 00 00 	nop

00000040 <_ibuserror_handler>:
      40:	34 00 00 00 	nop
      44:	34 00 00 00 	nop
      48:	34 00 00 00 	nop
      4c:	34 00 00 00 	nop
      50:	34 00 00 00 	nop
      54:	34 00 00 00 	nop
      58:	34 00 00 00 	nop
      5c:	34 00 00 00 	nop

00000060 <_watchpoint_handler>:
      60:	34 00 00 00 	nop
      64:	34 00 00 00 	nop
      68:	34 00 00 00 	nop
      6c:	34 00 00 00 	nop
      70:	34 00 00 00 	nop
      74:	34 00 00 00 	nop
      78:	34 00 00 00 	nop
      7c:	34 00 00 00 	nop

00000080 <_dbuserror_handler>:
      80:	34 00 00 00 	nop
      84:	34 00 00 00 	nop
      88:	34 00 00 00 	nop
      8c:	34 00 00 00 	nop
      90:	34 00 00 00 	nop
      94:	34 00 00 00 	nop
      98:	34 00 00 00 	nop
      9c:	34 00 00 00 	nop

000000a0 <_divzero_handler>:
      a0:	34 00 00 00 	nop
      a4:	34 00 00 00 	nop
      a8:	34 00 00 00 	nop
      ac:	34 00 00 00 	nop
      b0:	34 00 00 00 	nop
      b4:	34 00 00 00 	nop
      b8:	34 00 00 00 	nop
      bc:	34 00 00 00 	nop

000000c0 <_interrupt_handler>:
      c0:	5b 9d 00 00 	sw (sp+0),ra
      c4:	f8 00 00 2b 	calli 170 <_save_all>
      c8:	90 40 08 00 	rcsr r1,IP
      cc:	f8 00 03 69 	calli e70 <irq_handler>
      d0:	78 01 ff ff 	mvhi r1,0xffff
      d4:	38 21 ff ff 	ori r1,r1,0xffff
      d8:	d0 41 00 00 	wcsr IP,r1
      dc:	e0 00 00 38 	bi 1bc <_restore_all_and_eret>

000000e0 <_scall_handler>:
      e0:	34 00 00 00 	nop
      e4:	34 00 00 00 	nop
      e8:	34 00 00 00 	nop
      ec:	34 00 00 00 	nop
      f0:	34 00 00 00 	nop
      f4:	34 00 00 00 	nop
      f8:	34 00 00 00 	nop
      fc:	34 00 00 00 	nop

00000100 <_crt0>:
     100:	78 1c 00 0f 	mvhi sp,0xf
     104:	3b 9c ff fc 	ori sp,sp,0xfffc
     108:	78 1a 00 00 	mvhi gp,0x0
     10c:	3b 5a 2c f0 	ori gp,gp,0x2cf0
     110:	78 01 00 00 	mvhi r1,0x0
     114:	38 21 2c e4 	ori r1,r1,0x2ce4
     118:	78 03 00 00 	mvhi r3,0x0
     11c:	38 63 2d 94 	ori r3,r3,0x2d94

00000120 <.clearBSS>:
     120:	44 23 00 04 	be r1,r3,130 <.callMain>
     124:	58 20 00 00 	sw (r1+0),r0
     128:	34 21 00 04 	addi r1,r1,4
     12c:	e3 ff ff fd 	bi 120 <.clearBSS>

00000130 <.callMain>:
     130:	34 01 00 00 	mvi r1,0
     134:	34 02 00 00 	mvi r2,0
     138:	34 03 00 00 	mvi r3,0
     13c:	f8 00 01 2b 	calli 5e8 <main>

00000140 <irq_enable>:
     140:	34 01 00 01 	mvi r1,1
     144:	d0 01 00 00 	wcsr IE,r1
     148:	c3 a0 00 00 	ret

0000014c <irq_disable>:
     14c:	34 01 00 00 	mvi r1,0
     150:	d0 01 00 00 	wcsr IE,r1
     154:	c3 a0 00 00 	ret

00000158 <irq_set_mask>:
     158:	d0 21 00 00 	wcsr IM,r1
     15c:	c3 a0 00 00 	ret

00000160 <irq_get_mask>:
     160:	90 20 08 00 	rcsr r1,IM
     164:	c3 a0 00 00 	ret

00000168 <jump>:
     168:	c0 20 00 00 	b r1

0000016c <halt>:
     16c:	e0 00 00 00 	bi 16c <halt>

00000170 <_save_all>:
     170:	37 9c ff 80 	addi sp,sp,-128
     174:	5b 81 00 04 	sw (sp+4),r1
     178:	5b 82 00 08 	sw (sp+8),r2
     17c:	5b 83 00 0c 	sw (sp+12),r3
     180:	5b 84 00 10 	sw (sp+16),r4
     184:	5b 85 00 14 	sw (sp+20),r5
     188:	5b 86 00 18 	sw (sp+24),r6
     18c:	5b 87 00 1c 	sw (sp+28),r7
     190:	5b 88 00 20 	sw (sp+32),r8
     194:	5b 89 00 24 	sw (sp+36),r9
     198:	5b 8a 00 28 	sw (sp+40),r10
     19c:	5b 9e 00 78 	sw (sp+120),ea
     1a0:	5b 9f 00 7c 	sw (sp+124),ba
     1a4:	2b 81 00 80 	lw r1,(sp+128)
     1a8:	5b 81 00 74 	sw (sp+116),r1
     1ac:	bb 80 08 00 	mv r1,sp
     1b0:	34 21 00 80 	addi r1,r1,128
     1b4:	5b 81 00 70 	sw (sp+112),r1
     1b8:	c3 a0 00 00 	ret

000001bc <_restore_all_and_eret>:
     1bc:	2b 81 00 04 	lw r1,(sp+4)
     1c0:	2b 82 00 08 	lw r2,(sp+8)
     1c4:	2b 83 00 0c 	lw r3,(sp+12)
     1c8:	2b 84 00 10 	lw r4,(sp+16)
     1cc:	2b 85 00 14 	lw r5,(sp+20)
     1d0:	2b 86 00 18 	lw r6,(sp+24)
     1d4:	2b 87 00 1c 	lw r7,(sp+28)
     1d8:	2b 88 00 20 	lw r8,(sp+32)
     1dc:	2b 89 00 24 	lw r9,(sp+36)
     1e0:	2b 8a 00 28 	lw r10,(sp+40)
     1e4:	2b 9d 00 74 	lw ra,(sp+116)
     1e8:	2b 9e 00 78 	lw ea,(sp+120)
     1ec:	2b 9f 00 7c 	lw ba,(sp+124)
     1f0:	2b 9c 00 70 	lw sp,(sp+112)
     1f4:	c3 c0 00 00 	eret

000001f8 <get_sp>:
     1f8:	bb 80 08 00 	mv r1,sp
     1fc:	c3 a0 00 00 	ret

00000200 <get_gp>:
     200:	bb 40 08 00 	mv r1,gp
     204:	c3 a0 00 00 	ret

00000208 <_Z11instruccion3armc>:
int val;
int adr;

uint32_t FF;

void instruccion(arm y,char x){
     208:	37 9c ff dc 	addi sp,sp,-36
     20c:	5b 9d 00 04 	sw (sp+4),ra
     210:	43 89 00 2b 	lbu r9,(sp+43)
     214:	5b 81 00 08 	sw (sp+8),r1
     218:	5b 82 00 0c 	sw (sp+12),r2
     21c:	5b 83 00 10 	sw (sp+16),r3
     220:	5b 84 00 14 	sw (sp+20),r4
     224:	5b 85 00 18 	sw (sp+24),r5
     228:	5b 86 00 1c 	sw (sp+28),r6
     22c:	5b 87 00 20 	sw (sp+32),r7
     230:	5b 88 00 24 	sw (sp+36),r8
	switch(x){
     234:	34 01 00 10 	mvi r1,16
     238:	45 21 00 0a 	be r9,r1,260 <_Z11instruccion3armc+0x58>
     23c:	34 01 00 11 	mvi r1,17
     240:	5d 21 00 05 	bne r9,r1,254 <_Z11instruccion3armc+0x4c>
			y.derecha();
			uart_putchar('d');
			break;

		case 0x11:
			y.izquierda();
     244:	37 81 00 08 	addi r1,sp,8
     248:	f8 00 05 03 	calli 1654 <_ZN3arm9izquierdaEv>
			uart_putchar('z');
     24c:	34 01 00 7a 	mvi r1,122
     250:	f8 00 03 77 	calli 102c <uart_putchar>
			break;
	}
}
     254:	2b 9d 00 04 	lw ra,(sp+4)
     258:	37 9c 00 24 	addi sp,sp,36
     25c:	c3 a0 00 00 	ret
			y.derecha();
     260:	37 81 00 08 	addi r1,sp,8
     264:	f8 00 04 dd 	calli 15d8 <_ZN3arm7derechaEv>
			uart_putchar('d');
     268:	34 01 00 64 	mvi r1,100
     26c:	f8 00 03 70 	calli 102c <uart_putchar>
}
     270:	2b 9d 00 04 	lw ra,(sp+4)
     274:	37 9c 00 24 	addi sp,sp,36
     278:	c3 a0 00 00 	ret

0000027c <_Z12read_commandv>:

uint32_t command_array [5];

uint8_t read_command(){
     27c:	37 9c ff f4 	addi sp,sp,-12
     280:	5b 8b 00 0c 	sw (sp+12),r11
     284:	5b 8c 00 08 	sw (sp+8),r12
     288:	5b 9d 00 04 	sw (sp+4),ra
     28c:	78 01 00 00 	mvhi r1,0x0
     290:	38 21 29 a8 	ori r1,r1,0x29a8
     294:	28 2c 00 00 	lw r12,(r1+0)

		uint8_t cm;
		uint8_t i=0;
     298:	34 0b 00 00 	mvi r11,0
        while ( (cm != 0xf0) && (i<5) ){
        	cm = uart_getchar();
        	command_array[i]=cm;
        	i++;
     29c:	35 6b 00 01 	addi r11,r11,1
        	cm = uart_getchar();
     2a0:	f8 00 03 59 	calli 1004 <uart_getchar>
        	i++;
     2a4:	21 6b 00 ff 	andi r11,r11,0xff
        while ( (cm != 0xf0) && (i<5) ){
     2a8:	64 23 00 f0 	cmpei r3,r1,240
     2ac:	75 62 00 04 	cmpgui r2,r11,0x4
        	command_array[i]=cm;
     2b0:	59 81 00 00 	sw (r12+0),r1
        while ( (cm != 0xf0) && (i<5) ){
     2b4:	b8 62 10 00 	or r2,r3,r2
     2b8:	35 8c 00 04 	addi r12,r12,4
     2bc:	44 40 ff f8 	be r2,r0,29c <_Z12read_commandv+0x20>

        }
        if (cm == 0xf0 )
        	return 1;
        return 0;			
}
     2c0:	b8 60 08 00 	mv r1,r3
     2c4:	2b 9d 00 04 	lw ra,(sp+4)
     2c8:	2b 8b 00 0c 	lw r11,(sp+12)
     2cc:	2b 8c 00 08 	lw r12,(sp+8)
     2d0:	37 9c 00 0c 	addi sp,sp,12
     2d4:	c3 a0 00 00 	ret

000002d8 <_Z8move_arm3armS_S_S_cc>:

/* --- MOVE_ARM FUNCTION --- */

void move_arm(arm arm1, arm arm2, arm arm3, arm arm4,char b, char c){	
     2d8:	37 9c ff d8 	addi sp,sp,-40
     2dc:	5b 8b 00 08 	sw (sp+8),r11
     2e0:	5b 9d 00 04 	sw (sp+4),ra
     2e4:	43 89 00 93 	lbu r9,(sp+147)
     2e8:	5b 81 00 0c 	sw (sp+12),r1
     2ec:	5b 82 00 10 	sw (sp+16),r2
     2f0:	5b 83 00 14 	sw (sp+20),r3
     2f4:	5b 84 00 18 	sw (sp+24),r4
     2f8:	5b 85 00 1c 	sw (sp+28),r5
     2fc:	5b 86 00 20 	sw (sp+32),r6
     300:	5b 87 00 24 	sw (sp+36),r7
     304:	5b 88 00 28 	sw (sp+40),r8
	if (c == 0x27){  // ' = 27 (ASCII to HEX)
     308:	34 01 00 27 	mvi r1,39
void move_arm(arm arm1, arm arm2, arm arm3, arm arm4,char b, char c){	
     30c:	43 8b 00 8f 	lbu r11,(sp+143)
	if (c == 0x27){  // ' = 27 (ASCII to HEX)
     310:	45 21 00 13 	be r9,r1,35c <_Z8move_arm3armS_S_S_cc+0x84>
				arm4.izquierda();
				uart_putstr("Moving Arm 3 to the LEFT..."); // Moves ARM 1 (Cube's Down Face --WHITE--) to the RIGHT
			}
	}
	else {
			if (b == 0x52){
     314:	34 01 00 52 	mvi r1,82
     318:	45 61 00 93 	be r11,r1,564 <_Z8move_arm3armS_S_S_cc+0x28c>
				arm4.derecha();
				uart_putstr("Moving Arm 1 to the RIGHT..."); // Moves ARM 1 (Cube's Right Face --ORANGE--) to the RIGHT
			}
			if (b == 0x42){
     31c:	34 01 00 42 	mvi r1,66
     320:	45 61 00 21 	be r11,r1,3a4 <_Z8move_arm3armS_S_S_cc+0xcc>
				arm3.derecha();
				uart_putstr("Moving Arm 2 to the RIGHT..."); // Moves ARM 1 (Cube's Back Face --BLUE--) to the RIGHT	
			}		
			if (b == 0x4C){
     324:	34 01 00 4c 	mvi r1,76
     328:	45 61 00 8d 	be r11,r1,55c <_Z8move_arm3armS_S_S_cc+0x284>
				arm2.derecha();
				uart_putstr("Moving Arm 3 to the RIGHT..."); // Moves ARM 1 (Cube's Left Face --RED--) to the RIGHT
			}
			if (b == 0x46){
     32c:	34 01 00 46 	mvi r1,70
     330:	5d 61 00 2f 	bne r11,r1,3ec <_Z8move_arm3armS_S_S_cc+0x114>
				arm1.derecha();
     334:	37 81 00 0c 	addi r1,sp,12
     338:	f8 00 04 a8 	calli 15d8 <_ZN3arm7derechaEv>
				uart_putstr("Moving Arm 4 to the RIGHT..."); // Moves ARM 1 (Cube's Front Face --GREEN--) to the RIGHT
     33c:	78 02 00 00 	mvhi r2,0x0
     340:	38 42 29 c8 	ori r2,r2,0x29c8
     344:	28 41 00 00 	lw r1,(r2+0)
     348:	f8 00 03 43 	calli 1054 <uart_putstr>
			if (b == 0x44){
				arm4.derecha();
				uart_putstr("Moving Arm 3 to the RIGHT..."); // Moves ARM 1 (Cube's Down Face --WHITE--) to the RIGHT
			}
		}
}
     34c:	2b 9d 00 04 	lw ra,(sp+4)
     350:	2b 8b 00 08 	lw r11,(sp+8)
     354:	37 9c 00 28 	addi sp,sp,40
     358:	c3 a0 00 00 	ret
			if(b == 0x52){ 
     35c:	34 01 00 52 	mvi r1,82
     360:	45 61 00 92 	be r11,r1,5a8 <_Z8move_arm3armS_S_S_cc+0x2d0>
			if(b == 0x42){
     364:	34 01 00 42 	mvi r1,66
     368:	45 61 00 86 	be r11,r1,580 <_Z8move_arm3armS_S_S_cc+0x2a8>
			if(b == 0x4C){
     36c:	34 01 00 4c 	mvi r1,76
     370:	45 61 00 71 	be r11,r1,534 <_Z8move_arm3armS_S_S_cc+0x25c>
			if (b == 0x46){
     374:	34 01 00 46 	mvi r1,70
     378:	5d 61 00 93 	bne r11,r1,5c4 <_Z8move_arm3armS_S_S_cc+0x2ec>
				arm1.izquierda();
     37c:	37 81 00 0c 	addi r1,sp,12
     380:	f8 00 04 b5 	calli 1654 <_ZN3arm9izquierdaEv>
				uart_putstr("Moving Arm 4 to the LEFT..."); // Moves ARM 1 (Cube's Front Face --GREEN--) to the LEFT
     384:	78 02 00 00 	mvhi r2,0x0
     388:	38 42 29 b8 	ori r2,r2,0x29b8
     38c:	28 41 00 00 	lw r1,(r2+0)
     390:	f8 00 03 31 	calli 1054 <uart_putstr>
}
     394:	2b 9d 00 04 	lw ra,(sp+4)
     398:	2b 8b 00 08 	lw r11,(sp+8)
     39c:	37 9c 00 28 	addi sp,sp,40
     3a0:	c3 a0 00 00 	ret
				arm3.derecha();
     3a4:	37 81 00 4c 	addi r1,sp,76
     3a8:	f8 00 04 8c 	calli 15d8 <_ZN3arm7derechaEv>
				uart_putstr("Moving Arm 2 to the RIGHT..."); // Moves ARM 1 (Cube's Back Face --BLUE--) to the RIGHT	
     3ac:	78 02 00 00 	mvhi r2,0x0
     3b0:	38 42 29 c0 	ori r2,r2,0x29c0
     3b4:	28 41 00 00 	lw r1,(r2+0)
     3b8:	f8 00 03 27 	calli 1054 <uart_putstr>
			if (b == 0x44){
     3bc:	34 01 00 44 	mvi r1,68
     3c0:	5d 61 ff f5 	bne r11,r1,394 <_Z8move_arm3armS_S_S_cc+0xbc>
				arm4.derecha();
     3c4:	37 81 00 6c 	addi r1,sp,108
     3c8:	f8 00 04 84 	calli 15d8 <_ZN3arm7derechaEv>
				uart_putstr("Moving Arm 3 to the RIGHT..."); // Moves ARM 1 (Cube's Down Face --WHITE--) to the RIGHT
     3cc:	78 02 00 00 	mvhi r2,0x0
     3d0:	38 42 29 c4 	ori r2,r2,0x29c4
     3d4:	28 41 00 00 	lw r1,(r2+0)
     3d8:	f8 00 03 1f 	calli 1054 <uart_putstr>
}
     3dc:	2b 9d 00 04 	lw ra,(sp+4)
     3e0:	2b 8b 00 08 	lw r11,(sp+8)
     3e4:	37 9c 00 28 	addi sp,sp,40
     3e8:	c3 a0 00 00 	ret
			if (b == 0x55){
     3ec:	34 01 00 55 	mvi r1,85
     3f0:	5d 61 ff f3 	bne r11,r1,3bc <_Z8move_arm3armS_S_S_cc+0xe4>
				arm1.atras0();
     3f4:	37 81 00 0c 	addi r1,sp,12
     3f8:	f8 00 05 0e 	calli 1830 <_ZN3arm6atras0Ev>
				arm3.atras0();
     3fc:	37 81 00 4c 	addi r1,sp,76
     400:	f8 00 05 0c 	calli 1830 <_ZN3arm6atras0Ev>
				msleep(1000);
     404:	34 01 03 e8 	mvi r1,1000
     408:	f8 00 02 cd 	calli f3c <msleep>
				arm2.derecha0();
     40c:	37 81 00 2c 	addi r1,sp,44
     410:	f8 00 04 f0 	calli 17d0 <_ZN3arm8derecha0Ev>
				arm4.izquierda0();
     414:	37 81 00 6c 	addi r1,sp,108
     418:	f8 00 04 f6 	calli 17f0 <_ZN3arm10izquierda0Ev>
				msleep(1000);
     41c:	34 01 03 e8 	mvi r1,1000
     420:	f8 00 02 c7 	calli f3c <msleep>
				arm1.adelante0();
     424:	37 81 00 0c 	addi r1,sp,12
     428:	f8 00 05 0a 	calli 1850 <_ZN3arm9adelante0Ev>
				arm3.adelante0();
     42c:	37 81 00 4c 	addi r1,sp,76
     430:	f8 00 05 08 	calli 1850 <_ZN3arm9adelante0Ev>
				msleep(1000);
     434:	34 01 03 e8 	mvi r1,1000
     438:	f8 00 02 c1 	calli f3c <msleep>
				arm2.atras0();
     43c:	37 81 00 2c 	addi r1,sp,44
     440:	f8 00 04 fc 	calli 1830 <_ZN3arm6atras0Ev>
				arm4.atras0();
     444:	37 81 00 6c 	addi r1,sp,108
     448:	f8 00 04 fa 	calli 1830 <_ZN3arm6atras0Ev>
				msleep(1000);
     44c:	34 01 03 e8 	mvi r1,1000
     450:	f8 00 02 bb 	calli f3c <msleep>
				arm2.medio0();
     454:	37 81 00 2c 	addi r1,sp,44
     458:	f8 00 04 ee 	calli 1810 <_ZN3arm6medio0Ev>
				arm4.medio0();
     45c:	37 81 00 6c 	addi r1,sp,108
     460:	f8 00 04 ec 	calli 1810 <_ZN3arm6medio0Ev>
				msleep(1000);
     464:	34 01 03 e8 	mvi r1,1000
     468:	f8 00 02 b5 	calli f3c <msleep>
				arm2.adelante0();
     46c:	37 81 00 2c 	addi r1,sp,44
     470:	f8 00 04 f8 	calli 1850 <_ZN3arm9adelante0Ev>
				arm4.adelante0();
     474:	37 81 00 6c 	addi r1,sp,108
     478:	f8 00 04 f6 	calli 1850 <_ZN3arm9adelante0Ev>
				msleep(1000);
     47c:	34 01 03 e8 	mvi r1,1000
     480:	f8 00 02 af 	calli f3c <msleep>
				arm1.derecha();
     484:	37 81 00 0c 	addi r1,sp,12
     488:	f8 00 04 54 	calli 15d8 <_ZN3arm7derechaEv>
				arm1.atras0();
     48c:	37 81 00 0c 	addi r1,sp,12
     490:	f8 00 04 e8 	calli 1830 <_ZN3arm6atras0Ev>
				arm3.atras0();
     494:	37 81 00 4c 	addi r1,sp,76
     498:	f8 00 04 e6 	calli 1830 <_ZN3arm6atras0Ev>
				msleep(1000);
     49c:	34 01 03 e8 	mvi r1,1000
     4a0:	f8 00 02 a7 	calli f3c <msleep>
				arm2.izquierda0();
     4a4:	37 81 00 2c 	addi r1,sp,44
     4a8:	f8 00 04 d2 	calli 17f0 <_ZN3arm10izquierda0Ev>
				arm4.derecha0();
     4ac:	37 81 00 6c 	addi r1,sp,108
     4b0:	f8 00 04 c8 	calli 17d0 <_ZN3arm8derecha0Ev>
				msleep(1000);
     4b4:	34 01 03 e8 	mvi r1,1000
     4b8:	f8 00 02 a1 	calli f3c <msleep>
				arm1.adelante0();
     4bc:	37 81 00 0c 	addi r1,sp,12
     4c0:	f8 00 04 e4 	calli 1850 <_ZN3arm9adelante0Ev>
				arm3.adelante0();
     4c4:	37 81 00 4c 	addi r1,sp,76
     4c8:	f8 00 04 e2 	calli 1850 <_ZN3arm9adelante0Ev>
				msleep(1000);
     4cc:	34 01 03 e8 	mvi r1,1000
     4d0:	f8 00 02 9b 	calli f3c <msleep>
				arm2.atras0();
     4d4:	37 81 00 2c 	addi r1,sp,44
     4d8:	f8 00 04 d6 	calli 1830 <_ZN3arm6atras0Ev>
				arm4.atras0();
     4dc:	37 81 00 6c 	addi r1,sp,108
     4e0:	f8 00 04 d4 	calli 1830 <_ZN3arm6atras0Ev>
				msleep(1000);
     4e4:	34 01 03 e8 	mvi r1,1000
     4e8:	f8 00 02 95 	calli f3c <msleep>
				arm2.medio0();
     4ec:	37 81 00 2c 	addi r1,sp,44
     4f0:	f8 00 04 c8 	calli 1810 <_ZN3arm6medio0Ev>
				arm4.medio0();
     4f4:	37 81 00 6c 	addi r1,sp,108
     4f8:	f8 00 04 c6 	calli 1810 <_ZN3arm6medio0Ev>
				msleep(1000);
     4fc:	34 01 03 e8 	mvi r1,1000
     500:	f8 00 02 8f 	calli f3c <msleep>
				arm2.adelante0();
     504:	37 81 00 2c 	addi r1,sp,44
     508:	f8 00 04 d2 	calli 1850 <_ZN3arm9adelante0Ev>
				arm4.adelante0();
     50c:	37 81 00 6c 	addi r1,sp,108
     510:	f8 00 04 d0 	calli 1850 <_ZN3arm9adelante0Ev>
				uart_putstr("Moving Arm 1 to the RIGHT..."); // Moves ARM 1 (Cube's Upper Face --YELLOW--) to the RIGHT
     514:	78 02 00 00 	mvhi r2,0x0
     518:	38 42 29 bc 	ori r2,r2,0x29bc
     51c:	28 41 00 00 	lw r1,(r2+0)
     520:	f8 00 02 cd 	calli 1054 <uart_putstr>
}
     524:	2b 9d 00 04 	lw ra,(sp+4)
     528:	2b 8b 00 08 	lw r11,(sp+8)
     52c:	37 9c 00 28 	addi sp,sp,40
     530:	c3 a0 00 00 	ret
			 	arm2.izquierda();
     534:	37 81 00 2c 	addi r1,sp,44
				arm4.izquierda();
     538:	f8 00 04 47 	calli 1654 <_ZN3arm9izquierdaEv>
				uart_putstr("Moving Arm 3 to the LEFT..."); // Moves ARM 1 (Cube's Down Face --WHITE--) to the RIGHT
     53c:	78 02 00 00 	mvhi r2,0x0
     540:	38 42 29 b4 	ori r2,r2,0x29b4
     544:	28 41 00 00 	lw r1,(r2+0)
     548:	f8 00 02 c3 	calli 1054 <uart_putstr>
}
     54c:	2b 9d 00 04 	lw ra,(sp+4)
     550:	2b 8b 00 08 	lw r11,(sp+8)
     554:	37 9c 00 28 	addi sp,sp,40
     558:	c3 a0 00 00 	ret
				arm2.derecha();
     55c:	37 81 00 2c 	addi r1,sp,44
     560:	e3 ff ff 9a 	bi 3c8 <_Z8move_arm3armS_S_S_cc+0xf0>
				arm4.derecha();
     564:	37 81 00 6c 	addi r1,sp,108
     568:	f8 00 04 1c 	calli 15d8 <_ZN3arm7derechaEv>
				uart_putstr("Moving Arm 1 to the RIGHT..."); // Moves ARM 1 (Cube's Right Face --ORANGE--) to the RIGHT
     56c:	78 02 00 00 	mvhi r2,0x0
     570:	38 42 29 bc 	ori r2,r2,0x29bc
     574:	28 41 00 00 	lw r1,(r2+0)
     578:	f8 00 02 b7 	calli 1054 <uart_putstr>
     57c:	e3 ff ff 90 	bi 3bc <_Z8move_arm3armS_S_S_cc+0xe4>
				arm3.izquierda();
     580:	37 81 00 4c 	addi r1,sp,76
     584:	f8 00 04 34 	calli 1654 <_ZN3arm9izquierdaEv>
				uart_putstr("Moving Arm 2 to the LEFT..."); // Moves ARM 1 (Cube's Back Face --BLUE--) to the LEFT
     588:	78 02 00 00 	mvhi r2,0x0
     58c:	38 42 29 b0 	ori r2,r2,0x29b0
     590:	28 41 00 00 	lw r1,(r2+0)
     594:	f8 00 02 b0 	calli 1054 <uart_putstr>
			if (b == 0x44){
     598:	34 01 00 44 	mvi r1,68
     59c:	5d 61 ff 7e 	bne r11,r1,394 <_Z8move_arm3armS_S_S_cc+0xbc>
				arm4.izquierda();
     5a0:	37 81 00 6c 	addi r1,sp,108
     5a4:	e3 ff ff e5 	bi 538 <_Z8move_arm3armS_S_S_cc+0x260>
				arm4.izquierda();
     5a8:	37 81 00 6c 	addi r1,sp,108
     5ac:	f8 00 04 2a 	calli 1654 <_ZN3arm9izquierdaEv>
				uart_putstr("Moving Arm 1 to the LEFT..."); // Moves ARM 1 (Cube's Right Face --ORANGE--) to the LEFT
     5b0:	78 02 00 00 	mvhi r2,0x0
     5b4:	38 42 29 ac 	ori r2,r2,0x29ac
     5b8:	28 41 00 00 	lw r1,(r2+0)
     5bc:	f8 00 02 a6 	calli 1054 <uart_putstr>
     5c0:	e3 ff ff f6 	bi 598 <_Z8move_arm3armS_S_S_cc+0x2c0>
			if (b == 0x55){
     5c4:	34 01 00 55 	mvi r1,85
     5c8:	5d 61 ff f4 	bne r11,r1,598 <_Z8move_arm3armS_S_S_cc+0x2c0>
				arm1.izquierda();
     5cc:	37 81 00 0c 	addi r1,sp,12
     5d0:	f8 00 04 21 	calli 1654 <_ZN3arm9izquierdaEv>
				uart_putstr("Moving Arm 1 to the LEFT..."); // Moves ARM 1 (Cube's Upper Face --YELLOW--) to the RIGHT
     5d4:	78 02 00 00 	mvhi r2,0x0
     5d8:	38 42 29 ac 	ori r2,r2,0x29ac
     5dc:	28 41 00 00 	lw r1,(r2+0)
     5e0:	f8 00 02 9d 	calli 1054 <uart_putstr>
     5e4:	e3 ff ff 6c 	bi 394 <_Z8move_arm3armS_S_S_cc+0xbc>

000005e8 <main>:

int main(){
     5e8:	37 9c fe 88 	addi sp,sp,-376
     5ec:	5b 8b 00 c8 	sw (sp+200),r11
     5f0:	5b 8c 00 c4 	sw (sp+196),r12
     5f4:	5b 8d 00 c0 	sw (sp+192),r13
     5f8:	5b 8e 00 bc 	sw (sp+188),r14
     5fc:	5b 8f 00 b8 	sw (sp+184),r15
     600:	5b 90 00 b4 	sw (sp+180),r16
     604:	5b 91 00 b0 	sw (sp+176),r17
     608:	5b 92 00 ac 	sw (sp+172),r18
     60c:	5b 93 00 a8 	sw (sp+168),r19
     610:	5b 94 00 a4 	sw (sp+164),r20
     614:	5b 95 00 a0 	sw (sp+160),r21
     618:	5b 96 00 9c 	sw (sp+156),r22
     61c:	5b 97 00 98 	sw (sp+152),r23
     620:	5b 98 00 94 	sw (sp+148),r24
     624:	5b 99 00 90 	sw (sp+144),r25
     628:	5b 9b 00 8c 	sw (sp+140),fp
     62c:	5b 9d 00 88 	sw (sp+136),ra


	cam camera;

	uart_putstr("YInitializing...");
     630:	78 02 00 00 	mvhi r2,0x0
     634:	38 42 29 cc 	ori r2,r2,0x29cc
     638:	28 41 00 00 	lw r1,(r2+0)
     63c:	f8 00 02 86 	calli 1054 <uart_putstr>
   volatile uint32_t en7;
   volatile uint32_t period7;
   volatile uint32_t duty7;
} pwm_t;

class  pwm{
     640:	78 04 50 00 	mvhi r4,0x5000
#define FACE_H

#include "servos.h"


class  face : public arm{
     644:	34 05 00 01 	mvi r5,1
	arm arm3;
	arm arm4;

	face F;

	arm1.set_serv(0,1);
     648:	34 03 00 01 	mvi r3,1
     64c:	34 02 00 00 	mvi r2,0
     650:	37 81 00 d4 	addi r1,sp,212
     654:	5b 85 01 74 	sw (sp+372),r5
     658:	5b 85 01 78 	sw (sp+376),r5
     65c:	5b 84 00 d4 	sw (sp+212),r4
     660:	5b 84 00 f4 	sw (sp+244),r4
     664:	5b 84 01 14 	sw (sp+276),r4
     668:	5b 84 01 34 	sw (sp+308),r4
     66c:	5b 84 01 54 	sw (sp+340),r4
     670:	f8 00 04 18 	calli 16d0 <_ZN3arm8set_servEii>
	arm2.set_serv(2,3);
     674:	34 03 00 03 	mvi r3,3
     678:	34 02 00 02 	mvi r2,2
     67c:	37 81 00 f4 	addi r1,sp,244
     680:	f8 00 04 14 	calli 16d0 <_ZN3arm8set_servEii>
	arm3.set_serv(4,5);
     684:	34 03 00 05 	mvi r3,5
     688:	34 02 00 04 	mvi r2,4
     68c:	37 81 01 14 	addi r1,sp,276
     690:	f8 00 04 10 	calli 16d0 <_ZN3arm8set_servEii>
	arm4.set_serv(6,7);
     694:	34 03 00 07 	mvi r3,7
     698:	34 02 00 06 	mvi r2,6
     69c:	37 81 01 34 	addi r1,sp,308
     6a0:	f8 00 04 0c 	calli 16d0 <_ZN3arm8set_servEii>

	arm1.calib(0x20,0x29);
     6a4:	34 03 00 29 	mvi r3,41
     6a8:	34 02 00 20 	mvi r2,32
     6ac:	37 81 00 d4 	addi r1,sp,212
     6b0:	f8 00 04 33 	calli 177c <_ZN3arm5calibEci>
	arm1.calib(0x21,0x05);
     6b4:	34 03 00 05 	mvi r3,5
     6b8:	34 02 00 21 	mvi r2,33
     6bc:	37 81 00 d4 	addi r1,sp,212
     6c0:	f8 00 04 2f 	calli 177c <_ZN3arm5calibEci>
	arm1.calib(0x22,0x18);
     6c4:	34 03 00 18 	mvi r3,24
     6c8:	34 02 00 22 	mvi r2,34
     6cc:	37 81 00 d4 	addi r1,sp,212
     6d0:	f8 00 04 2b 	calli 177c <_ZN3arm5calibEci>
	arm1.calib(0x23,0x30);
     6d4:	34 03 00 30 	mvi r3,48
     6d8:	34 02 00 23 	mvi r2,35
     6dc:	37 81 00 d4 	addi r1,sp,212
     6e0:	f8 00 04 27 	calli 177c <_ZN3arm5calibEci>
	arm1.calib(0x24,0x10);
     6e4:	34 03 00 10 	mvi r3,16
     6e8:	34 02 00 24 	mvi r2,36
     6ec:	37 81 00 d4 	addi r1,sp,212
     6f0:	f8 00 04 23 	calli 177c <_ZN3arm5calibEci>

	arm2.calib(0x20,0x29);
     6f4:	34 03 00 29 	mvi r3,41
     6f8:	34 02 00 20 	mvi r2,32
     6fc:	37 81 00 f4 	addi r1,sp,244
     700:	f8 00 04 1f 	calli 177c <_ZN3arm5calibEci>
	arm2.calib(0x21,0x05);
     704:	34 03 00 05 	mvi r3,5
     708:	34 02 00 21 	mvi r2,33
     70c:	37 81 00 f4 	addi r1,sp,244
     710:	f8 00 04 1b 	calli 177c <_ZN3arm5calibEci>
	arm2.calib(0x22,0x18);
     714:	34 03 00 18 	mvi r3,24
     718:	34 02 00 22 	mvi r2,34
     71c:	37 81 00 f4 	addi r1,sp,244
     720:	f8 00 04 17 	calli 177c <_ZN3arm5calibEci>
	arm2.calib(0x23,0x30);
     724:	34 03 00 30 	mvi r3,48
     728:	34 02 00 23 	mvi r2,35
     72c:	37 81 00 f4 	addi r1,sp,244
     730:	f8 00 04 13 	calli 177c <_ZN3arm5calibEci>
	arm2.calib(0x24,0x15);
     734:	34 03 00 15 	mvi r3,21
     738:	34 02 00 24 	mvi r2,36
     73c:	37 81 00 f4 	addi r1,sp,244
     740:	f8 00 04 0f 	calli 177c <_ZN3arm5calibEci>

	arm3.calib(0x20,0x29);
     744:	34 03 00 29 	mvi r3,41
     748:	34 02 00 20 	mvi r2,32
     74c:	37 81 01 14 	addi r1,sp,276
     750:	f8 00 04 0b 	calli 177c <_ZN3arm5calibEci>
	arm3.calib(0x21,0x09);
     754:	34 03 00 09 	mvi r3,9
     758:	34 02 00 21 	mvi r2,33
     75c:	37 81 01 14 	addi r1,sp,276
     760:	f8 00 04 07 	calli 177c <_ZN3arm5calibEci>
	arm3.calib(0x22,0x18);
     764:	34 03 00 18 	mvi r3,24
     768:	34 02 00 22 	mvi r2,34
     76c:	37 81 01 14 	addi r1,sp,276
     770:	f8 00 04 03 	calli 177c <_ZN3arm5calibEci>
	arm3.calib(0x23,0x30);
     774:	34 03 00 30 	mvi r3,48
     778:	34 02 00 23 	mvi r2,35
     77c:	37 81 01 14 	addi r1,sp,276
     780:	f8 00 03 ff 	calli 177c <_ZN3arm5calibEci>
	arm3.calib(0x24,0x15);
     784:	34 03 00 15 	mvi r3,21
     788:	34 02 00 24 	mvi r2,36
     78c:	37 81 01 14 	addi r1,sp,276
     790:	f8 00 03 fb 	calli 177c <_ZN3arm5calibEci>

	arm4.calib(0x20,0x29);
     794:	34 03 00 29 	mvi r3,41
     798:	34 02 00 20 	mvi r2,32
     79c:	37 81 01 34 	addi r1,sp,308
     7a0:	f8 00 03 f7 	calli 177c <_ZN3arm5calibEci>
	arm4.calib(0x21,0x9);
     7a4:	34 03 00 09 	mvi r3,9
     7a8:	34 02 00 21 	mvi r2,33
     7ac:	37 81 01 34 	addi r1,sp,308
     7b0:	f8 00 03 f3 	calli 177c <_ZN3arm5calibEci>
	arm4.calib(0x22,0x18);
     7b4:	34 03 00 18 	mvi r3,24
     7b8:	34 02 00 22 	mvi r2,34
     7bc:	37 81 01 34 	addi r1,sp,308
     7c0:	f8 00 03 ef 	calli 177c <_ZN3arm5calibEci>
	arm4.calib(0x23,0x30);
     7c4:	34 03 00 30 	mvi r3,48
     7c8:	34 02 00 23 	mvi r2,35
     7cc:	37 81 01 34 	addi r1,sp,308
     7d0:	f8 00 03 eb 	calli 177c <_ZN3arm5calibEci>
	arm4.calib(0x24,0x10);
     7d4:	34 02 00 24 	mvi r2,36
     7d8:	37 81 01 34 	addi r1,sp,308
     7dc:	34 03 00 10 	mvi r3,16
     7e0:	f8 00 03 e7 	calli 177c <_ZN3arm5calibEci>

	uart_putstr("Ready");
     7e4:	78 05 00 00 	mvhi r5,0x0
     7e8:	38 a5 29 d0 	ori r5,r5,0x29d0
     7ec:	28 a1 00 00 	lw r1,(r5+0)
     7f0:	78 05 00 00 	mvhi r5,0x0
     7f4:	38 a5 29 d8 	ori r5,r5,0x29d8
     7f8:	78 02 00 00 	mvhi r2,0x0
     7fc:	28 b3 00 00 	lw r19,(r5+0)
     800:	78 05 00 00 	mvhi r5,0x0
     804:	38 42 29 d4 	ori r2,r2,0x29d4
     808:	38 a5 29 e0 	ori r5,r5,0x29e0
     80c:	28 4c 00 00 	lw r12,(r2+0)
     810:	28 b2 00 00 	lw r18,(r5+0)
     814:	78 02 00 00 	mvhi r2,0x0
     818:	78 05 00 00 	mvhi r5,0x0
     81c:	38 42 29 dc 	ori r2,r2,0x29dc
     820:	38 a5 29 e8 	ori r5,r5,0x29e8
     824:	28 4e 00 00 	lw r14,(r2+0)
     828:	28 b0 00 00 	lw r16,(r5+0)
     82c:	78 02 00 00 	mvhi r2,0x0

	    uint8_t cm=read_command();

		if (cm){
			if (command_array[0] == 0xff) {
					uart_putstr("Home...");
     830:	78 05 00 00 	mvhi r5,0x0
     834:	38 42 29 e4 	ori r2,r2,0x29e4
     838:	38 a5 29 f0 	ori r5,r5,0x29f0
     83c:	28 51 00 00 	lw r17,(r2+0)
     840:	28 bb 00 00 	lw fp,(r5+0)
		uart_putstr("------Instruction------");
     844:	78 02 00 00 	mvhi r2,0x0
					arm4.home();
					uart_putstr("Ready");
			}

			if (command_array[0] == 0xfe){
					uart_putstr("Init...");
     848:	78 05 00 00 	mvhi r5,0x0
		uart_putstr("------Instruction------");
     84c:	38 42 29 ec 	ori r2,r2,0x29ec
					uart_putstr("Init...");
     850:	38 a5 29 f4 	ori r5,r5,0x29f4
		uart_putstr("------Instruction------");
     854:	28 4b 00 00 	lw r11,(r2+0)
					uart_putstr("Init...");
     858:	28 b9 00 00 	lw r25,(r5+0)
					uart_putstr("Ready");
			}

			if (command_array[0] == 0xfd){
				inst = command_array[2];
				uart_putstr("Moving...");
     85c:	78 02 00 00 	mvhi r2,0x0
			}
			if (command_array[0] == 0xfc){
				br  = command_array[1];
				dir = command_array[2];
				val = command_array[3];
				uart_putstr("Calibrating...");
     860:	78 05 00 00 	mvhi r5,0x0
				uart_putstr("Moving...");
     864:	38 42 29 f8 	ori r2,r2,0x29f8
				uart_putstr("Calibrating...");
     868:	38 a5 29 fc 	ori r5,r5,0x29fc
				uart_putstr("Moving...");
     86c:	28 4f 00 00 	lw r15,(r2+0)
				uart_putstr("Calibrating...");
     870:	28 b8 00 00 	lw r24,(r5+0)
			}
// Cube Solver
			if (command_array[0] == 0xfa){
				adr = command_array[1];
				dir = command_array[2];
				uart_putstr("Solving Cube");
     874:	78 02 00 00 	mvhi r2,0x0
				move_arm(arm1, arm2, arm3, arm4, adr, dir);
				uart_putstr("Done");
     878:	78 05 00 00 	mvhi r5,0x0
				uart_putstr("Solving Cube");
     87c:	38 42 2a 00 	ori r2,r2,0x2a00
				uart_putstr("Done");
     880:	38 a5 2a 04 	ori r5,r5,0x2a04
				uart_putstr("Solving Cube");
     884:	28 57 00 00 	lw r23,(r2+0)
				uart_putstr("Done");
     888:	28 b6 00 00 	lw r22,(r5+0)
			}

			if (command_array[0] == 0x50){
				uart_putstr("Reset camera...");
     88c:	78 02 00 00 	mvhi r2,0x0
				camera.reset();
			}

			if (command_array[0] == 0x5a){
				uart_putstr("Take picture...");
     890:	78 05 00 00 	mvhi r5,0x0
				uart_putstr("Reset camera...");
     894:	38 42 2a 08 	ori r2,r2,0x2a08
				uart_putstr("Take picture...");
     898:	38 a5 2a 0c 	ori r5,r5,0x2a0c
					uart_putstr("Ready");
     89c:	b8 20 68 00 	mv r13,r1
				uart_putstr("Reset camera...");
     8a0:	28 55 00 00 	lw r21,(r2+0)
				uart_putstr("Take picture...");
     8a4:	28 b4 00 00 	lw r20,(r5+0)
	uart_putstr("Ready");
     8a8:	f8 00 01 eb 	calli 1054 <uart_putstr>
		uart_putchar('\n');
     8ac:	34 01 00 0a 	mvi r1,10
     8b0:	f8 00 01 df 	calli 102c <uart_putchar>
		uart_putstr("------Instruction------");
     8b4:	b9 60 08 00 	mv r1,r11
     8b8:	f8 00 01 e7 	calli 1054 <uart_putstr>
		uart_putchar('\n');
     8bc:	34 01 00 0a 	mvi r1,10
     8c0:	f8 00 01 db 	calli 102c <uart_putchar>
	    uint8_t cm=read_command();
     8c4:	fb ff fe 6e 	calli 27c <_Z12read_commandv>
		if (cm){
     8c8:	44 20 ff f9 	be r1,r0,8ac <main+0x2c4>
			if (command_array[0] == 0xff) {
     8cc:	29 81 00 00 	lw r1,(r12+0)
     8d0:	34 02 00 ff 	mvi r2,255
     8d4:	44 22 01 01 	be r1,r2,cd8 <main+0x6f0>
			if (command_array[0] == 0xfe){
     8d8:	34 02 00 fe 	mvi r2,254
     8dc:	44 22 00 f1 	be r1,r2,ca0 <main+0x6b8>
			if (command_array[0] == 0xfd){
     8e0:	34 02 00 fd 	mvi r2,253
     8e4:	44 22 00 de 	be r1,r2,c5c <main+0x674>
			if (command_array[0] == 0xfc){
     8e8:	34 02 00 fc 	mvi r2,252
     8ec:	44 22 00 c5 	be r1,r2,c00 <main+0x618>
			if (command_array[0] == 0xfb){
     8f0:	34 02 00 fb 	mvi r2,251
     8f4:	44 22 00 77 	be r1,r2,ad0 <main+0x4e8>
			if (command_array[0] == 0xfa){
     8f8:	34 02 00 fa 	mvi r2,250
     8fc:	44 22 00 2e 	be r1,r2,9b4 <main+0x3cc>
			if (command_array[0] == 0x50){
     900:	34 02 00 50 	mvi r2,80
     904:	44 22 00 26 	be r1,r2,99c <main+0x3b4>
			if (command_array[0] == 0x5a){
     908:	34 02 00 5a 	mvi r2,90
     90c:	44 22 00 1e 	be r1,r2,984 <main+0x39c>
				camera.takepicture();
			}

			if (command_array[0] == 0x5b){
     910:	34 02 00 5b 	mvi r2,91
     914:	44 22 00 14 	be r1,r2,964 <main+0x37c>
				uart_putstr("Get size...");
				camera.getsize();
			}

			if (command_array[0] == 0x5c){
     918:	34 02 00 5c 	mvi r2,92
     91c:	44 22 00 0a 	be r1,r2,944 <main+0x35c>
				uart_putstr("Sending...");
				camera.sendpicture();
			}

			if (command_array[0] == 0x5d){
     920:	34 02 00 5d 	mvi r2,93
     924:	5c 22 ff e2 	bne r1,r2,8ac <main+0x2c4>
				uart_putstr("Stoping...");
     928:	78 02 00 00 	mvhi r2,0x0
     92c:	38 42 2a 18 	ori r2,r2,0x2a18
     930:	28 41 00 00 	lw r1,(r2+0)
     934:	f8 00 01 c8 	calli 1054 <uart_putstr>
				camera.stoptaking();
     938:	37 81 00 cc 	addi r1,sp,204
     93c:	f8 00 04 b4 	calli 1c0c <_ZN3cam10stoptakingEv>
     940:	e3 ff ff db 	bi 8ac <main+0x2c4>
				uart_putstr("Sending...");
     944:	78 05 00 00 	mvhi r5,0x0
     948:	38 a5 2a 14 	ori r5,r5,0x2a14
     94c:	28 a1 00 00 	lw r1,(r5+0)
     950:	f8 00 01 c1 	calli 1054 <uart_putstr>
				camera.sendpicture();
     954:	37 81 00 cc 	addi r1,sp,204
     958:	f8 00 04 40 	calli 1a58 <_ZN3cam11sendpictureEv>
     95c:	29 81 00 00 	lw r1,(r12+0)
     960:	e3 ff ff f0 	bi 920 <main+0x338>
				uart_putstr("Get size...");
     964:	78 02 00 00 	mvhi r2,0x0
     968:	38 42 2a 10 	ori r2,r2,0x2a10
     96c:	28 41 00 00 	lw r1,(r2+0)
     970:	f8 00 01 b9 	calli 1054 <uart_putstr>
				camera.getsize();
     974:	37 81 00 cc 	addi r1,sp,204
     978:	f8 00 04 05 	calli 198c <_ZN3cam7getsizeEv>
     97c:	29 81 00 00 	lw r1,(r12+0)
     980:	e3 ff ff e6 	bi 918 <main+0x330>
				uart_putstr("Take picture...");
     984:	ba 80 08 00 	mv r1,r20
     988:	f8 00 01 b3 	calli 1054 <uart_putstr>
				camera.takepicture();
     98c:	37 81 00 cc 	addi r1,sp,204
     990:	f8 00 03 d7 	calli 18ec <_ZN3cam11takepictureEv>
     994:	29 81 00 00 	lw r1,(r12+0)
     998:	e3 ff ff de 	bi 910 <main+0x328>
				uart_putstr("Reset camera...");
     99c:	ba a0 08 00 	mv r1,r21
     9a0:	f8 00 01 ad 	calli 1054 <uart_putstr>
				camera.reset();
     9a4:	37 81 00 cc 	addi r1,sp,204
     9a8:	f8 00 03 b2 	calli 1870 <_ZN3cam5resetEv>
     9ac:	29 81 00 00 	lw r1,(r12+0)
     9b0:	e3 ff ff d6 	bi 908 <main+0x320>
				adr = command_array[1];
     9b4:	29 83 00 04 	lw r3,(r12+4)
				dir = command_array[2];
     9b8:	29 82 00 08 	lw r2,(r12+8)
				uart_putstr("Solving Cube");
     9bc:	ba e0 08 00 	mv r1,r23
				adr = command_array[1];
     9c0:	5a 03 00 00 	sw (r16+0),r3
				dir = command_array[2];
     9c4:	59 c2 00 00 	sw (r14+0),r2
				uart_putstr("Solving Cube");
     9c8:	f8 00 01 a3 	calli 1054 <uart_putstr>
				move_arm(arm1, arm2, arm3, arm4, adr, dir);
     9cc:	42 01 00 03 	lbu r1,(r16+3)
     9d0:	41 c2 00 03 	lbu r2,(r14+3)
     9d4:	5b 81 00 64 	sw (sp+100),r1
     9d8:	2b 81 01 34 	lw r1,(sp+308)
     9dc:	5b 82 00 68 	sw (sp+104),r2
     9e0:	5b 81 00 44 	sw (sp+68),r1
     9e4:	2b 81 01 38 	lw r1,(sp+312)
     9e8:	5b 81 00 48 	sw (sp+72),r1
     9ec:	2b 81 01 3c 	lw r1,(sp+316)
     9f0:	5b 81 00 4c 	sw (sp+76),r1
     9f4:	2b 81 01 40 	lw r1,(sp+320)
     9f8:	5b 81 00 50 	sw (sp+80),r1
     9fc:	2b 81 01 44 	lw r1,(sp+324)
     a00:	5b 81 00 54 	sw (sp+84),r1
     a04:	2b 81 01 48 	lw r1,(sp+328)
     a08:	5b 81 00 58 	sw (sp+88),r1
     a0c:	2b 81 01 4c 	lw r1,(sp+332)
     a10:	5b 81 00 5c 	sw (sp+92),r1
     a14:	2b 81 01 50 	lw r1,(sp+336)
     a18:	5b 81 00 60 	sw (sp+96),r1
     a1c:	2b 81 01 14 	lw r1,(sp+276)
     a20:	5b 81 00 24 	sw (sp+36),r1
     a24:	2b 81 01 18 	lw r1,(sp+280)
     a28:	5b 81 00 28 	sw (sp+40),r1
     a2c:	2b 81 01 1c 	lw r1,(sp+284)
     a30:	5b 81 00 2c 	sw (sp+44),r1
     a34:	2b 81 01 20 	lw r1,(sp+288)
     a38:	5b 81 00 30 	sw (sp+48),r1
     a3c:	2b 81 01 24 	lw r1,(sp+292)
     a40:	5b 81 00 34 	sw (sp+52),r1
     a44:	2b 81 01 28 	lw r1,(sp+296)
     a48:	5b 81 00 38 	sw (sp+56),r1
     a4c:	2b 82 00 d8 	lw r2,(sp+216)
     a50:	2b 89 01 2c 	lw r9,(sp+300)
     a54:	2b 83 00 dc 	lw r3,(sp+220)
     a58:	2b 84 00 e0 	lw r4,(sp+224)
     a5c:	5b 89 00 3c 	sw (sp+60),r9
     a60:	2b 89 01 30 	lw r9,(sp+304)
     a64:	2b 85 00 e4 	lw r5,(sp+228)
     a68:	2b 86 00 e8 	lw r6,(sp+232)
     a6c:	5b 89 00 40 	sw (sp+64),r9
     a70:	2b 89 00 f4 	lw r9,(sp+244)
     a74:	2b 87 00 ec 	lw r7,(sp+236)
     a78:	2b 88 00 f0 	lw r8,(sp+240)
     a7c:	5b 89 00 04 	sw (sp+4),r9
     a80:	2b 89 00 f8 	lw r9,(sp+248)
     a84:	2b 81 00 d4 	lw r1,(sp+212)
     a88:	5b 89 00 08 	sw (sp+8),r9
     a8c:	2b 89 00 fc 	lw r9,(sp+252)
     a90:	5b 89 00 0c 	sw (sp+12),r9
     a94:	2b 89 01 00 	lw r9,(sp+256)
     a98:	5b 89 00 10 	sw (sp+16),r9
     a9c:	2b 89 01 04 	lw r9,(sp+260)
     aa0:	5b 89 00 14 	sw (sp+20),r9
     aa4:	2b 89 01 08 	lw r9,(sp+264)
     aa8:	5b 89 00 18 	sw (sp+24),r9
     aac:	2b 89 01 0c 	lw r9,(sp+268)
     ab0:	5b 89 00 1c 	sw (sp+28),r9
     ab4:	2b 89 01 10 	lw r9,(sp+272)
     ab8:	5b 89 00 20 	sw (sp+32),r9
     abc:	fb ff fe 07 	calli 2d8 <_Z8move_arm3armS_S_S_cc>
				uart_putstr("Done");
     ac0:	ba c0 08 00 	mv r1,r22
     ac4:	f8 00 01 64 	calli 1054 <uart_putstr>
     ac8:	29 81 00 00 	lw r1,(r12+0)
     acc:	e3 ff ff 8d 	bi 900 <main+0x318>
				FF  = command_array[1];
     ad0:	29 82 00 04 	lw r2,(r12+4)
			 	uart_putstr("Moving...");
     ad4:	b9 e0 08 00 	mv r1,r15
				FF  = command_array[1];
     ad8:	5a 22 00 00 	sw (r17+0),r2
			 	uart_putstr("Moving...");
     adc:	f8 00 01 5e 	calli 1054 <uart_putstr>
			 	F.Face(arm1,arm2,arm3,arm4,FF);
     ae0:	2a 21 00 00 	lw r1,(r17+0)
     ae4:	5b 81 00 84 	sw (sp+132),r1
     ae8:	2b 81 01 34 	lw r1,(sp+308)
     aec:	5b 81 00 64 	sw (sp+100),r1
     af0:	2b 81 01 38 	lw r1,(sp+312)
     af4:	5b 81 00 68 	sw (sp+104),r1
     af8:	2b 81 01 3c 	lw r1,(sp+316)
     afc:	5b 81 00 6c 	sw (sp+108),r1
     b00:	2b 81 01 40 	lw r1,(sp+320)
     b04:	5b 81 00 70 	sw (sp+112),r1
     b08:	2b 81 01 44 	lw r1,(sp+324)
     b0c:	5b 81 00 74 	sw (sp+116),r1
     b10:	2b 81 01 48 	lw r1,(sp+328)
     b14:	5b 81 00 78 	sw (sp+120),r1
     b18:	2b 81 01 4c 	lw r1,(sp+332)
     b1c:	5b 81 00 7c 	sw (sp+124),r1
     b20:	2b 81 01 50 	lw r1,(sp+336)
     b24:	5b 81 00 80 	sw (sp+128),r1
     b28:	2b 81 01 14 	lw r1,(sp+276)
     b2c:	5b 81 00 44 	sw (sp+68),r1
     b30:	2b 81 01 18 	lw r1,(sp+280)
     b34:	5b 81 00 48 	sw (sp+72),r1
     b38:	2b 81 01 1c 	lw r1,(sp+284)
     b3c:	5b 81 00 4c 	sw (sp+76),r1
     b40:	2b 81 01 20 	lw r1,(sp+288)
     b44:	5b 81 00 50 	sw (sp+80),r1
     b48:	2b 81 01 24 	lw r1,(sp+292)
     b4c:	5b 81 00 54 	sw (sp+84),r1
     b50:	2b 81 01 28 	lw r1,(sp+296)
     b54:	5b 81 00 58 	sw (sp+88),r1
     b58:	2b 81 01 2c 	lw r1,(sp+300)
     b5c:	5b 81 00 5c 	sw (sp+92),r1
     b60:	2b 81 01 30 	lw r1,(sp+304)
     b64:	5b 81 00 60 	sw (sp+96),r1
     b68:	2b 81 00 f4 	lw r1,(sp+244)
     b6c:	5b 81 00 24 	sw (sp+36),r1
     b70:	2b 81 00 f8 	lw r1,(sp+248)
     b74:	5b 81 00 28 	sw (sp+40),r1
     b78:	2b 81 00 fc 	lw r1,(sp+252)
     b7c:	5b 81 00 2c 	sw (sp+44),r1
     b80:	2b 81 01 00 	lw r1,(sp+256)
     b84:	5b 81 00 30 	sw (sp+48),r1
     b88:	2b 81 01 04 	lw r1,(sp+260)
     b8c:	5b 81 00 34 	sw (sp+52),r1
     b90:	2b 81 01 08 	lw r1,(sp+264)
     b94:	5b 81 00 38 	sw (sp+56),r1
     b98:	2b 81 01 0c 	lw r1,(sp+268)
     b9c:	5b 81 00 3c 	sw (sp+60),r1
     ba0:	2b 81 01 10 	lw r1,(sp+272)
     ba4:	5b 81 00 40 	sw (sp+64),r1
     ba8:	2b 81 00 d4 	lw r1,(sp+212)
     bac:	5b 81 00 04 	sw (sp+4),r1
     bb0:	2b 81 00 d8 	lw r1,(sp+216)
     bb4:	5b 81 00 08 	sw (sp+8),r1
     bb8:	2b 81 00 dc 	lw r1,(sp+220)
     bbc:	5b 81 00 0c 	sw (sp+12),r1
     bc0:	2b 81 00 e0 	lw r1,(sp+224)
     bc4:	5b 81 00 10 	sw (sp+16),r1
     bc8:	2b 81 00 e4 	lw r1,(sp+228)
     bcc:	5b 81 00 14 	sw (sp+20),r1
     bd0:	2b 81 00 e8 	lw r1,(sp+232)
     bd4:	5b 81 00 18 	sw (sp+24),r1
     bd8:	2b 81 00 ec 	lw r1,(sp+236)
     bdc:	5b 81 00 1c 	sw (sp+28),r1
     be0:	2b 82 00 f0 	lw r2,(sp+240)
     be4:	37 81 01 54 	addi r1,sp,340
     be8:	5b 82 00 20 	sw (sp+32),r2
     bec:	f8 00 04 d4 	calli 1f3c <_ZN4face4FaceE3armS0_S0_S0_j>
			 	uart_putstr("Ready");
     bf0:	b9 a0 08 00 	mv r1,r13
     bf4:	f8 00 01 18 	calli 1054 <uart_putstr>
     bf8:	29 81 00 00 	lw r1,(r12+0)
     bfc:	e3 ff ff 3f 	bi 8f8 <main+0x310>
				val = command_array[3];
     c00:	29 82 00 0c 	lw r2,(r12+12)
				br  = command_array[1];
     c04:	29 84 00 04 	lw r4,(r12+4)
				dir = command_array[2];
     c08:	29 83 00 08 	lw r3,(r12+8)
				br  = command_array[1];
     c0c:	78 05 00 00 	mvhi r5,0x0
				uart_putstr("Calibrating...");
     c10:	bb 00 08 00 	mv r1,r24
				br  = command_array[1];
     c14:	38 a5 2d 0c 	ori r5,r5,0x2d0c
				val = command_array[3];
     c18:	5a 42 00 00 	sw (r18+0),r2
				br  = command_array[1];
     c1c:	58 a4 00 00 	sw (r5+0),r4
				dir = command_array[2];
     c20:	59 c3 00 00 	sw (r14+0),r3
				uart_putstr("Calibrating...");
     c24:	f8 00 01 0c 	calli 1054 <uart_putstr>
				if (command_array[1] == 0x01)
     c28:	29 81 00 04 	lw r1,(r12+4)
     c2c:	34 02 00 01 	mvi r2,1
     c30:	44 22 00 49 	be r1,r2,d54 <main+0x76c>
				if (command_array[1] == 0x02)
     c34:	34 02 00 02 	mvi r2,2
     c38:	44 22 00 41 	be r1,r2,d3c <main+0x754>
				if (command_array[1] == 0x03)
     c3c:	34 02 00 03 	mvi r2,3
     c40:	44 22 00 39 	be r1,r2,d24 <main+0x73c>
				if (command_array[1] == 0x04)
     c44:	34 02 00 04 	mvi r2,4
     c48:	44 22 00 32 	be r1,r2,d10 <main+0x728>
				uart_putstr("Ready");
     c4c:	b9 a0 08 00 	mv r1,r13
     c50:	f8 00 01 01 	calli 1054 <uart_putstr>
     c54:	29 81 00 00 	lw r1,(r12+0)
     c58:	e3 ff ff 26 	bi 8f0 <main+0x308>
				inst = command_array[2];
     c5c:	29 82 00 08 	lw r2,(r12+8)
				uart_putstr("Moving...");
     c60:	b9 e0 08 00 	mv r1,r15
				inst = command_array[2];
     c64:	5a 62 00 00 	sw (r19+0),r2
				uart_putstr("Moving...");
     c68:	f8 00 00 fb 	calli 1054 <uart_putstr>
				if (command_array[1] == 0x01) 
     c6c:	29 81 00 04 	lw r1,(r12+4)
     c70:	34 02 00 01 	mvi r2,1
     c74:	44 22 00 64 	be r1,r2,e04 <main+0x81c>
				if (command_array[1] == 0x02)
     c78:	34 02 00 02 	mvi r2,2
     c7c:	44 22 00 55 	be r1,r2,dd0 <main+0x7e8>
				if (command_array[1] == 0x03)
     c80:	34 02 00 03 	mvi r2,3
     c84:	44 22 00 46 	be r1,r2,d9c <main+0x7b4>
				if (command_array[1] == 0x04)
     c88:	34 02 00 04 	mvi r2,4
     c8c:	44 22 00 38 	be r1,r2,d6c <main+0x784>
				uart_putstr("Ready");
     c90:	b9 a0 08 00 	mv r1,r13
     c94:	f8 00 00 f0 	calli 1054 <uart_putstr>
     c98:	29 81 00 00 	lw r1,(r12+0)
     c9c:	e3 ff ff 13 	bi 8e8 <main+0x300>
					uart_putstr("Init...");
     ca0:	bb 20 08 00 	mv r1,r25
     ca4:	f8 00 00 ec 	calli 1054 <uart_putstr>
					arm1.init();
     ca8:	37 81 00 d4 	addi r1,sp,212
     cac:	f8 00 02 25 	calli 1540 <_ZN3arm4initEv>
					arm2.init();
     cb0:	37 81 00 f4 	addi r1,sp,244
     cb4:	f8 00 02 23 	calli 1540 <_ZN3arm4initEv>
					arm3.init();
     cb8:	37 81 01 14 	addi r1,sp,276
     cbc:	f8 00 02 21 	calli 1540 <_ZN3arm4initEv>
					arm4.init();
     cc0:	37 81 01 34 	addi r1,sp,308
     cc4:	f8 00 02 1f 	calli 1540 <_ZN3arm4initEv>
					uart_putstr("Ready");
     cc8:	b9 a0 08 00 	mv r1,r13
     ccc:	f8 00 00 e2 	calli 1054 <uart_putstr>
     cd0:	29 81 00 00 	lw r1,(r12+0)
     cd4:	e3 ff ff 03 	bi 8e0 <main+0x2f8>
					uart_putstr("Home...");
     cd8:	bb 60 08 00 	mv r1,fp
     cdc:	f8 00 00 de 	calli 1054 <uart_putstr>
					arm1.home();
     ce0:	37 81 00 d4 	addi r1,sp,212
     ce4:	f8 00 02 30 	calli 15a4 <_ZN3arm4homeEv>
					arm2.home();
     ce8:	37 81 00 f4 	addi r1,sp,244
     cec:	f8 00 02 2e 	calli 15a4 <_ZN3arm4homeEv>
					arm3.home();
     cf0:	37 81 01 14 	addi r1,sp,276
     cf4:	f8 00 02 2c 	calli 15a4 <_ZN3arm4homeEv>
					arm4.home();
     cf8:	37 81 01 34 	addi r1,sp,308
     cfc:	f8 00 02 2a 	calli 15a4 <_ZN3arm4homeEv>
					uart_putstr("Ready");
     d00:	b9 a0 08 00 	mv r1,r13
     d04:	f8 00 00 d4 	calli 1054 <uart_putstr>
     d08:	29 81 00 00 	lw r1,(r12+0)
     d0c:	e3 ff fe f3 	bi 8d8 <main+0x2f0>
					arm4.calib(dir,val);
     d10:	2a 43 00 00 	lw r3,(r18+0)
     d14:	41 c2 00 03 	lbu r2,(r14+3)
     d18:	37 81 01 34 	addi r1,sp,308
     d1c:	f8 00 02 98 	calli 177c <_ZN3arm5calibEci>
     d20:	e3 ff ff cb 	bi c4c <main+0x664>
					arm3.calib(dir,val);
     d24:	2a 43 00 00 	lw r3,(r18+0)
     d28:	41 c2 00 03 	lbu r2,(r14+3)
     d2c:	37 81 01 14 	addi r1,sp,276
     d30:	f8 00 02 93 	calli 177c <_ZN3arm5calibEci>
     d34:	29 81 00 04 	lw r1,(r12+4)
     d38:	e3 ff ff c3 	bi c44 <main+0x65c>
					arm2.calib(dir,val);
     d3c:	2a 43 00 00 	lw r3,(r18+0)
     d40:	41 c2 00 03 	lbu r2,(r14+3)
     d44:	37 81 00 f4 	addi r1,sp,244
     d48:	f8 00 02 8d 	calli 177c <_ZN3arm5calibEci>
     d4c:	29 81 00 04 	lw r1,(r12+4)
     d50:	e3 ff ff bb 	bi c3c <main+0x654>
					arm1.calib(dir,val);
     d54:	2a 43 00 00 	lw r3,(r18+0)
     d58:	41 c2 00 03 	lbu r2,(r14+3)
     d5c:	37 81 00 d4 	addi r1,sp,212
     d60:	f8 00 02 87 	calli 177c <_ZN3arm5calibEci>
     d64:	29 81 00 04 	lw r1,(r12+4)
     d68:	e3 ff ff b3 	bi c34 <main+0x64c>
					instruccion(arm4,inst);
     d6c:	42 69 00 03 	lbu r9,(r19+3)
     d70:	2b 81 01 34 	lw r1,(sp+308)
     d74:	2b 82 01 38 	lw r2,(sp+312)
     d78:	2b 83 01 3c 	lw r3,(sp+316)
     d7c:	2b 84 01 40 	lw r4,(sp+320)
     d80:	2b 85 01 44 	lw r5,(sp+324)
     d84:	2b 86 01 48 	lw r6,(sp+328)
     d88:	2b 87 01 4c 	lw r7,(sp+332)
     d8c:	2b 88 01 50 	lw r8,(sp+336)
     d90:	5b 89 00 04 	sw (sp+4),r9
     d94:	fb ff fd 1d 	calli 208 <_Z11instruccion3armc>
     d98:	e3 ff ff be 	bi c90 <main+0x6a8>
					instruccion(arm3,inst);
     d9c:	42 69 00 03 	lbu r9,(r19+3)
     da0:	2b 81 01 14 	lw r1,(sp+276)
     da4:	2b 82 01 18 	lw r2,(sp+280)
     da8:	2b 83 01 1c 	lw r3,(sp+284)
     dac:	2b 84 01 20 	lw r4,(sp+288)
     db0:	2b 85 01 24 	lw r5,(sp+292)
     db4:	2b 86 01 28 	lw r6,(sp+296)
     db8:	2b 87 01 2c 	lw r7,(sp+300)
     dbc:	2b 88 01 30 	lw r8,(sp+304)
     dc0:	5b 89 00 04 	sw (sp+4),r9
     dc4:	fb ff fd 11 	calli 208 <_Z11instruccion3armc>
     dc8:	29 81 00 04 	lw r1,(r12+4)
     dcc:	e3 ff ff af 	bi c88 <main+0x6a0>
					instruccion(arm2,inst);
     dd0:	42 69 00 03 	lbu r9,(r19+3)
     dd4:	2b 81 00 f4 	lw r1,(sp+244)
     dd8:	2b 82 00 f8 	lw r2,(sp+248)
     ddc:	2b 83 00 fc 	lw r3,(sp+252)
     de0:	2b 84 01 00 	lw r4,(sp+256)
     de4:	2b 85 01 04 	lw r5,(sp+260)
     de8:	2b 86 01 08 	lw r6,(sp+264)
     dec:	2b 87 01 0c 	lw r7,(sp+268)
     df0:	2b 88 01 10 	lw r8,(sp+272)
     df4:	5b 89 00 04 	sw (sp+4),r9
     df8:	fb ff fd 04 	calli 208 <_Z11instruccion3armc>
     dfc:	29 81 00 04 	lw r1,(r12+4)
     e00:	e3 ff ff a0 	bi c80 <main+0x698>
					instruccion(arm1,inst);
     e04:	42 69 00 03 	lbu r9,(r19+3)
     e08:	2b 81 00 d4 	lw r1,(sp+212)
     e0c:	2b 82 00 d8 	lw r2,(sp+216)
     e10:	2b 83 00 dc 	lw r3,(sp+220)
     e14:	2b 84 00 e0 	lw r4,(sp+224)
     e18:	2b 85 00 e4 	lw r5,(sp+228)
     e1c:	2b 86 00 e8 	lw r6,(sp+232)
     e20:	2b 87 00 ec 	lw r7,(sp+236)
     e24:	2b 88 00 f0 	lw r8,(sp+240)
     e28:	5b 89 00 04 	sw (sp+4),r9
     e2c:	fb ff fc f7 	calli 208 <_Z11instruccion3armc>
     e30:	29 81 00 04 	lw r1,(r12+4)
     e34:	e3 ff ff 91 	bi c78 <main+0x690>

00000e38 <tic_isr>:

uint32_t tic_msec;

void tic_isr()
{
	tic_msec++;
     e38:	78 01 00 00 	mvhi r1,0x0
     e3c:	38 21 2b c8 	ori r1,r1,0x2bc8
     e40:	28 22 00 00 	lw r2,(r1+0)
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
     e44:	78 04 00 00 	mvhi r4,0x0
     e48:	38 84 2b cc 	ori r4,r4,0x2bcc
     e4c:	28 83 00 00 	lw r3,(r4+0)
	tic_msec++;
     e50:	28 41 00 00 	lw r1,(r2+0)
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
     e54:	28 63 00 00 	lw r3,(r3+0)
	tic_msec++;
     e58:	34 21 00 01 	addi r1,r1,1
     e5c:	58 41 00 00 	sw (r2+0),r1
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
     e60:	34 01 00 0e 	mvi r1,14
     e64:	58 61 00 00 	sw (r3+0),r1
}
     e68:	c3 a0 00 00 	ret

00000e6c <isr_null>:
     e6c:	c3 a0 00 00 	ret

00000e70 <irq_handler>:
{
     e70:	37 9c ff f0 	addi sp,sp,-16
     e74:	5b 8b 00 10 	sw (sp+16),r11
     e78:	5b 8c 00 0c 	sw (sp+12),r12
     e7c:	5b 8d 00 08 	sw (sp+8),r13
     e80:	5b 9d 00 04 	sw (sp+4),ra
     e84:	78 02 00 00 	mvhi r2,0x0
     e88:	38 42 2b d0 	ori r2,r2,0x2bd0
     e8c:	28 4b 00 00 	lw r11,(r2+0)
     e90:	b8 20 60 00 	mv r12,r1
     e94:	35 6d 00 80 	addi r13,r11,128
		if (pending & 0x01) (*isr_table[i])();
     e98:	21 81 00 01 	andi r1,r12,0x1
     e9c:	44 20 00 03 	be r1,r0,ea8 <irq_handler+0x38>
     ea0:	29 61 00 00 	lw r1,(r11+0)
     ea4:	d8 20 00 00 	call r1
     ea8:	35 6b 00 04 	addi r11,r11,4
		pending >>= 1;
     eac:	01 8c 00 01 	srui r12,r12,1
	for(i=0; i<32; i++) {
     eb0:	5d ab ff fa 	bne r13,r11,e98 <irq_handler+0x28>
}
     eb4:	2b 9d 00 04 	lw ra,(sp+4)
     eb8:	2b 8b 00 10 	lw r11,(sp+16)
     ebc:	2b 8c 00 0c 	lw r12,(sp+12)
     ec0:	2b 8d 00 08 	lw r13,(sp+8)
     ec4:	37 9c 00 10 	addi sp,sp,16
     ec8:	c3 a0 00 00 	ret

00000ecc <isr_init>:
{
     ecc:	78 02 00 00 	mvhi r2,0x0
     ed0:	38 42 2b d4 	ori r2,r2,0x2bd4
     ed4:	28 41 00 00 	lw r1,(r2+0)
     ed8:	78 02 00 00 	mvhi r2,0x0
     edc:	38 42 2b d8 	ori r2,r2,0x2bd8
     ee0:	28 43 00 00 	lw r3,(r2+0)
     ee4:	34 22 00 80 	addi r2,r1,128
		isr_table[i] = &isr_null;
     ee8:	58 23 00 00 	sw (r1+0),r3
     eec:	34 21 00 04 	addi r1,r1,4
	for(i=0; i<32; i++)
     ef0:	5c 22 ff fe 	bne r1,r2,ee8 <isr_init+0x1c>
}
     ef4:	c3 a0 00 00 	ret

00000ef8 <isr_register>:
	isr_table[irq] = isr;
     ef8:	78 04 00 00 	mvhi r4,0x0
     efc:	38 84 2b dc 	ori r4,r4,0x2bdc
     f00:	3c 23 00 02 	sli r3,r1,2
     f04:	28 81 00 00 	lw r1,(r4+0)
     f08:	b4 23 08 00 	add r1,r1,r3
     f0c:	58 22 00 00 	sw (r1+0),r2
}
     f10:	c3 a0 00 00 	ret

00000f14 <isr_unregister>:
	isr_table[irq] = &isr_null;
     f14:	78 03 00 00 	mvhi r3,0x0
     f18:	38 63 2b e0 	ori r3,r3,0x2be0
     f1c:	3c 22 00 02 	sli r2,r1,2
     f20:	28 61 00 00 	lw r1,(r3+0)
     f24:	78 03 00 00 	mvhi r3,0x0
     f28:	38 63 2b e4 	ori r3,r3,0x2be4
     f2c:	b4 22 08 00 	add r1,r1,r2
     f30:	28 62 00 00 	lw r2,(r3+0)
     f34:	58 22 00 00 	sw (r1+0),r2
}
     f38:	c3 a0 00 00 	ret

00000f3c <msleep>:
	timer0->compare1 = (FCPU/1000)*msec;
     f3c:	78 03 00 00 	mvhi r3,0x0
     f40:	38 02 86 a0 	mvu r2,0x86a0
     f44:	78 42 00 01 	orhi r2,r2,0x1
     f48:	38 63 2b e8 	ori r3,r3,0x2be8
     f4c:	88 22 08 00 	mul r1,r1,r2
     f50:	28 62 00 00 	lw r2,(r3+0)
     f54:	28 42 00 00 	lw r2,(r2+0)
     f58:	58 41 00 10 	sw (r2+16),r1
	timer0->counter1 = 0;
     f5c:	58 40 00 14 	sw (r2+20),r0
	timer0->tcr1 = TIMER_EN;
     f60:	34 01 00 08 	mvi r1,8
     f64:	58 41 00 0c 	sw (r2+12),r1
 		tcr = timer0->tcr1;
     f68:	28 41 00 0c 	lw r1,(r2+12)
 	} while ( ! (tcr & TIMER_TRIG) );
     f6c:	20 21 00 01 	andi r1,r1,0x1
     f70:	44 20 ff fe 	be r1,r0,f68 <msleep+0x2c>
}
     f74:	c3 a0 00 00 	ret

00000f78 <nsleep>:
	timer0->compare1 = (FCPU/1000000)*nsec;
     f78:	78 03 00 00 	mvhi r3,0x0
     f7c:	38 63 2b ec 	ori r3,r3,0x2bec
     f80:	28 62 00 00 	lw r2,(r3+0)
     f84:	08 21 00 64 	muli r1,r1,100
     f88:	28 42 00 00 	lw r2,(r2+0)
     f8c:	58 41 00 10 	sw (r2+16),r1
	timer0->counter1 = 0;
     f90:	58 40 00 14 	sw (r2+20),r0
	timer0->tcr1 = TIMER_EN;
     f94:	34 01 00 08 	mvi r1,8
     f98:	58 41 00 0c 	sw (r2+12),r1
 		tcr = timer0->tcr1;
     f9c:	28 41 00 0c 	lw r1,(r2+12)
 	} while ( ! (tcr & TIMER_TRIG) );
     fa0:	20 21 00 01 	andi r1,r1,0x1
     fa4:	44 20 ff fe 	be r1,r0,f9c <nsleep+0x24>
}
     fa8:	c3 a0 00 00 	ret

00000fac <tic_init>:
void tic_init()
{
	tic_msec = 0;

	// Setup timer0.0
	timer0->compare0 = (FCPU/10000);
     fac:	78 02 00 00 	mvhi r2,0x0
     fb0:	38 42 2b f0 	ori r2,r2,0x2bf0
     fb4:	28 41 00 00 	lw r1,(r2+0)
	tic_msec = 0;
     fb8:	78 03 00 00 	mvhi r3,0x0
	timer0->compare0 = (FCPU/10000);
     fbc:	34 02 27 10 	mvi r2,10000
     fc0:	28 21 00 00 	lw r1,(r1+0)
	tic_msec = 0;
     fc4:	38 63 2b f4 	ori r3,r3,0x2bf4
	timer0->compare0 = (FCPU/10000);
     fc8:	58 22 00 04 	sw (r1+4),r2
	tic_msec = 0;
     fcc:	28 62 00 00 	lw r2,(r3+0)
	timer0->counter0 = 0;
     fd0:	58 20 00 08 	sw (r1+8),r0
	isr_table[irq] = isr;
     fd4:	78 03 00 00 	mvhi r3,0x0
	tic_msec = 0;
     fd8:	58 40 00 00 	sw (r2+0),r0
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
     fdc:	34 02 00 0e 	mvi r2,14
     fe0:	58 22 00 00 	sw (r1+0),r2
	isr_table[irq] = isr;
     fe4:	78 02 00 00 	mvhi r2,0x0
     fe8:	38 42 2b f8 	ori r2,r2,0x2bf8
     fec:	38 63 2b fc 	ori r3,r3,0x2bfc
     ff0:	28 41 00 00 	lw r1,(r2+0)
     ff4:	28 62 00 00 	lw r2,(r3+0)
     ff8:	58 22 00 04 	sw (r1+4),r2

	isr_register(1, &tic_isr);
}
     ffc:	c3 a0 00 00 	ret

00001000 <uart_init>:
	//uart0->lcr = 0x03;  // Line Control Register:    8N1
	//uart0->mcr = 0x00;  // Modem Control Register

	// Setup Divisor register (Fclk / Baud)
	//uart0->div = (FCPU/(57600*16));
}
    1000:	c3 a0 00 00 	ret

00001004 <uart_getchar>:

char uart_getchar()
{   
	while (! (uart0->ucr & UART_DR)) ;
    1004:	78 02 00 00 	mvhi r2,0x0
    1008:	38 42 2c 00 	ori r2,r2,0x2c00
    100c:	28 41 00 00 	lw r1,(r2+0)
    1010:	28 22 00 00 	lw r2,(r1+0)
    1014:	28 41 00 00 	lw r1,(r2+0)
    1018:	20 21 00 01 	andi r1,r1,0x1
    101c:	44 20 ff fe 	be r1,r0,1014 <uart_getchar+0x10>
	return uart0->rxtx;
    1020:	28 41 00 04 	lw r1,(r2+4)
}
    1024:	20 21 00 ff 	andi r1,r1,0xff
    1028:	c3 a0 00 00 	ret

0000102c <uart_putchar>:

void uart_putchar(char c)
{
	while (uart0->ucr & UART_BUSY) ;
    102c:	78 03 00 00 	mvhi r3,0x0
    1030:	38 63 2c 04 	ori r3,r3,0x2c04
    1034:	28 62 00 00 	lw r2,(r3+0)
{
    1038:	20 21 00 ff 	andi r1,r1,0xff
	while (uart0->ucr & UART_BUSY) ;
    103c:	28 43 00 00 	lw r3,(r2+0)
    1040:	28 62 00 00 	lw r2,(r3+0)
    1044:	20 42 00 10 	andi r2,r2,0x10
    1048:	5c 40 ff fe 	bne r2,r0,1040 <uart_putchar+0x14>
	uart0->rxtx = c;
    104c:	58 61 00 04 	sw (r3+4),r1
}
    1050:	c3 a0 00 00 	ret

00001054 <uart_putstr>:

void uart_putstr(char *str)
{
	char *c = str;
	while(*c) {
    1054:	40 24 00 00 	lbu r4,(r1+0)
    1058:	44 80 00 0c 	be r4,r0,1088 <uart_putstr+0x34>
	while (uart0->ucr & UART_BUSY) ;
    105c:	78 03 00 00 	mvhi r3,0x0
    1060:	38 63 2c 08 	ori r3,r3,0x2c08
    1064:	28 62 00 00 	lw r2,(r3+0)
    1068:	28 43 00 00 	lw r3,(r2+0)
    106c:	28 62 00 00 	lw r2,(r3+0)
    1070:	20 42 00 10 	andi r2,r2,0x10
    1074:	5c 40 ff fe 	bne r2,r0,106c <uart_putstr+0x18>
	uart0->rxtx = c;
    1078:	58 64 00 04 	sw (r3+4),r4
		uart_putchar(*c);
		c++;
    107c:	34 21 00 01 	addi r1,r1,1
	while(*c) {
    1080:	40 24 00 00 	lbu r4,(r1+0)
    1084:	5c 80 ff fa 	bne r4,r0,106c <uart_putstr+0x18>
	}
}
    1088:	c3 a0 00 00 	ret

0000108c <uart1_init>:
    108c:	c3 a0 00 00 	ret

00001090 <uart1_getchar>:
	//uart0->div = (FCPU/(57600*16));
}

char uart1_getchar()
{   
	while (! (uart1->ucr & UART_DR)) ;
    1090:	78 02 00 00 	mvhi r2,0x0
    1094:	38 42 2c 0c 	ori r2,r2,0x2c0c
    1098:	28 41 00 00 	lw r1,(r2+0)
    109c:	28 22 00 00 	lw r2,(r1+0)
    10a0:	28 41 00 00 	lw r1,(r2+0)
    10a4:	20 21 00 01 	andi r1,r1,0x1
    10a8:	44 20 ff fe 	be r1,r0,10a0 <uart1_getchar+0x10>
	return uart1->rxtx;
    10ac:	28 41 00 04 	lw r1,(r2+4)
}
    10b0:	20 21 00 ff 	andi r1,r1,0xff
    10b4:	c3 a0 00 00 	ret

000010b8 <uart1_putchar>:

void uart1_putchar(char c)
{
	while (uart1->ucr & UART_BUSY) ;
    10b8:	78 03 00 00 	mvhi r3,0x0
    10bc:	38 63 2c 10 	ori r3,r3,0x2c10
    10c0:	28 62 00 00 	lw r2,(r3+0)
{
    10c4:	20 21 00 ff 	andi r1,r1,0xff
	while (uart1->ucr & UART_BUSY) ;
    10c8:	28 43 00 00 	lw r3,(r2+0)
    10cc:	28 62 00 00 	lw r2,(r3+0)
    10d0:	20 42 00 10 	andi r2,r2,0x10
    10d4:	5c 40 ff fe 	bne r2,r0,10cc <uart1_putchar+0x14>
	uart1->rxtx = c;
    10d8:	58 61 00 04 	sw (r3+4),r1
}
    10dc:	c3 a0 00 00 	ret

000010e0 <uart1_putstr>:

void uart1_putstr(char *str)
{
	char *c = str;
	while(*c) {
    10e0:	40 24 00 00 	lbu r4,(r1+0)
    10e4:	44 80 00 0c 	be r4,r0,1114 <uart1_putstr+0x34>
	while (uart1->ucr & UART_BUSY) ;
    10e8:	78 03 00 00 	mvhi r3,0x0
    10ec:	38 63 2c 14 	ori r3,r3,0x2c14
    10f0:	28 62 00 00 	lw r2,(r3+0)
    10f4:	28 43 00 00 	lw r3,(r2+0)
    10f8:	28 62 00 00 	lw r2,(r3+0)
    10fc:	20 42 00 10 	andi r2,r2,0x10
    1100:	5c 40 ff fe 	bne r2,r0,10f8 <uart1_putstr+0x18>
	uart1->rxtx = c;
    1104:	58 64 00 04 	sw (r3+4),r4
		uart1_putchar(*c);
		c++;
    1108:	34 21 00 01 	addi r1,r1,1
	while(*c) {
    110c:	40 24 00 00 	lbu r4,(r1+0)
    1110:	5c 80 ff fa 	bne r4,r0,10f8 <uart1_putstr+0x18>
	}
}
    1114:	c3 a0 00 00 	ret

00001118 <fifo_read>:
 * FIFO Functions
 */

uint32_t fifo_read()
{
	return fifo0->datout;
    1118:	78 02 00 00 	mvhi r2,0x0
    111c:	38 42 2c 18 	ori r2,r2,0x2c18
    1120:	28 41 00 00 	lw r1,(r2+0)
    1124:	28 21 00 00 	lw r1,(r1+0)
    1128:	28 21 00 04 	lw r1,(r1+4)
}
    112c:	c3 a0 00 00 	ret

00001130 <fifo_write>:

void fifo_write(uint32_t c)
{
	fifo0->datin = c;
    1130:	78 03 00 00 	mvhi r3,0x0
    1134:	38 63 2c 1c 	ori r3,r3,0x2c1c
    1138:	28 62 00 00 	lw r2,(r3+0)
    113c:	28 42 00 00 	lw r2,(r2+0)
    1140:	58 41 00 08 	sw (r2+8),r1
}
    1144:	c3 a0 00 00 	ret

00001148 <fifo_state>:

uint32_t fifo_state()
{
	return fifo0->dat;
    1148:	78 02 00 00 	mvhi r2,0x0
    114c:	38 42 2c 20 	ori r2,r2,0x2c20
    1150:	28 41 00 00 	lw r1,(r2+0)
    1154:	28 21 00 00 	lw r1,(r1+0)
    1158:	28 21 00 00 	lw r1,(r1+0)
}
    115c:	c3 a0 00 00 	ret

00001160 <fifo_reset>:

void fifo_reset()
{
	fifo0->reset = 1;
    1160:	78 02 00 00 	mvhi r2,0x0
    1164:	38 42 2c 24 	ori r2,r2,0x2c24
    1168:	28 41 00 00 	lw r1,(r2+0)
    116c:	34 02 00 01 	mvi r2,1
    1170:	28 21 00 00 	lw r1,(r1+0)
    1174:	58 22 00 0c 	sw (r1+12),r2
}
    1178:	c3 a0 00 00 	ret

0000117c <_ZN3pwm5pauseEv>:
#include "pwm.h"

void pwm::pause(){
    117c:	37 9c ff fc 	addi sp,sp,-4
    1180:	5b 9d 00 04 	sw (sp+4),ra

	msleep(1000);
    1184:	34 01 03 e8 	mvi r1,1000
    1188:	fb ff ff 6d 	calli f3c <msleep>

};
    118c:	2b 9d 00 04 	lw ra,(sp+4)
    1190:	37 9c 00 04 	addi sp,sp,4
    1194:	c3 a0 00 00 	ret

00001198 <_ZN3pwm6pwm_enEij>:
void pwm::pwm_en(int sel, uint32_t val){

	if(sel == 0) pwm0->en0 = val;
    1198:	5c 40 00 08 	bne r2,r0,11b8 <_ZN3pwm6pwm_enEij+0x20>
    119c:	28 24 00 00 	lw r4,(r1+0)
    11a0:	58 83 00 00 	sw (r4+0),r3
	if(sel == 1) pwm0->en1 = val;
	if(sel == 2) pwm0->en2 = val;
	if(sel == 3) pwm0->en3 = val;
	if(sel == 4) pwm0->en4 = val;
	if(sel == 5) pwm0->en5 = val;
    11a4:	34 04 00 05 	mvi r4,5
    11a8:	5c 44 00 0d 	bne r2,r4,11dc <_ZN3pwm6pwm_enEij+0x44>
    11ac:	28 21 00 00 	lw r1,(r1+0)
    11b0:	58 23 00 3c 	sw (r1+60),r3
	if(sel == 6) pwm0->en6 = val;
	if(sel == 7) pwm0->en7 = val;

};
    11b4:	c3 a0 00 00 	ret
	if(sel == 1) pwm0->en1 = val;
    11b8:	34 04 00 01 	mvi r4,1
    11bc:	5c 44 00 04 	bne r2,r4,11cc <_ZN3pwm6pwm_enEij+0x34>
    11c0:	28 24 00 00 	lw r4,(r1+0)
    11c4:	58 83 00 0c 	sw (r4+12),r3
    11c8:	e3 ff ff f7 	bi 11a4 <_ZN3pwm6pwm_enEij+0xc>
	if(sel == 2) pwm0->en2 = val;
    11cc:	34 04 00 02 	mvi r4,2
    11d0:	5c 44 00 08 	bne r2,r4,11f0 <_ZN3pwm6pwm_enEij+0x58>
    11d4:	28 24 00 00 	lw r4,(r1+0)
    11d8:	58 83 00 18 	sw (r4+24),r3
	if(sel == 6) pwm0->en6 = val;
    11dc:	34 04 00 06 	mvi r4,6
    11e0:	5c 44 00 08 	bne r2,r4,1200 <_ZN3pwm6pwm_enEij+0x68>
    11e4:	28 21 00 00 	lw r1,(r1+0)
    11e8:	58 23 00 48 	sw (r1+72),r3
};
    11ec:	c3 a0 00 00 	ret
	if(sel == 3) pwm0->en3 = val;
    11f0:	34 04 00 03 	mvi r4,3
    11f4:	5c 44 00 08 	bne r2,r4,1214 <_ZN3pwm6pwm_enEij+0x7c>
    11f8:	28 24 00 00 	lw r4,(r1+0)
    11fc:	58 83 00 24 	sw (r4+36),r3
	if(sel == 7) pwm0->en7 = val;
    1200:	34 04 00 07 	mvi r4,7
    1204:	5c 44 ff ec 	bne r2,r4,11b4 <_ZN3pwm6pwm_enEij+0x1c>
    1208:	28 21 00 00 	lw r1,(r1+0)
    120c:	58 23 00 54 	sw (r1+84),r3
};
    1210:	c3 a0 00 00 	ret
	if(sel == 4) pwm0->en4 = val;
    1214:	34 04 00 04 	mvi r4,4
    1218:	5c 44 ff e3 	bne r2,r4,11a4 <_ZN3pwm6pwm_enEij+0xc>
    121c:	28 21 00 00 	lw r1,(r1+0)
    1220:	58 23 00 30 	sw (r1+48),r3
};
    1224:	c3 a0 00 00 	ret

00001228 <_ZN3pwm8pwm_dutyEij>:

void pwm::pwm_duty(int sel, uint32_t val){

	if(sel == 0) pwm0->duty0 = val;
    1228:	5c 40 00 08 	bne r2,r0,1248 <_ZN3pwm8pwm_dutyEij+0x20>
    122c:	28 24 00 00 	lw r4,(r1+0)
    1230:	58 83 00 08 	sw (r4+8),r3
	if(sel == 1) pwm0->duty1 = val;
	if(sel == 2) pwm0->duty2 = val;
	if(sel == 3) pwm0->duty3 = val;
	if(sel == 4) pwm0->duty4 = val;
	if(sel == 5) pwm0->duty5 = val;
    1234:	34 04 00 05 	mvi r4,5
    1238:	5c 44 00 0d 	bne r2,r4,126c <_ZN3pwm8pwm_dutyEij+0x44>
    123c:	28 21 00 00 	lw r1,(r1+0)
    1240:	58 23 00 44 	sw (r1+68),r3
	if(sel == 6) pwm0->duty6 = val;
	if(sel == 7) pwm0->duty7 = val;

};
    1244:	c3 a0 00 00 	ret
	if(sel == 1) pwm0->duty1 = val;
    1248:	34 04 00 01 	mvi r4,1
    124c:	5c 44 00 04 	bne r2,r4,125c <_ZN3pwm8pwm_dutyEij+0x34>
    1250:	28 24 00 00 	lw r4,(r1+0)
    1254:	58 83 00 14 	sw (r4+20),r3
    1258:	e3 ff ff f7 	bi 1234 <_ZN3pwm8pwm_dutyEij+0xc>
	if(sel == 2) pwm0->duty2 = val;
    125c:	34 04 00 02 	mvi r4,2
    1260:	5c 44 00 08 	bne r2,r4,1280 <_ZN3pwm8pwm_dutyEij+0x58>
    1264:	28 24 00 00 	lw r4,(r1+0)
    1268:	58 83 00 20 	sw (r4+32),r3
	if(sel == 6) pwm0->duty6 = val;
    126c:	34 04 00 06 	mvi r4,6
    1270:	5c 44 00 08 	bne r2,r4,1290 <_ZN3pwm8pwm_dutyEij+0x68>
    1274:	28 21 00 00 	lw r1,(r1+0)
    1278:	58 23 00 50 	sw (r1+80),r3
};
    127c:	c3 a0 00 00 	ret
	if(sel == 3) pwm0->duty3 = val;
    1280:	34 04 00 03 	mvi r4,3
    1284:	5c 44 00 08 	bne r2,r4,12a4 <_ZN3pwm8pwm_dutyEij+0x7c>
    1288:	28 24 00 00 	lw r4,(r1+0)
    128c:	58 83 00 2c 	sw (r4+44),r3
	if(sel == 7) pwm0->duty7 = val;
    1290:	34 04 00 07 	mvi r4,7
    1294:	5c 44 ff ec 	bne r2,r4,1244 <_ZN3pwm8pwm_dutyEij+0x1c>
    1298:	28 21 00 00 	lw r1,(r1+0)
    129c:	58 23 00 5c 	sw (r1+92),r3
};
    12a0:	c3 a0 00 00 	ret
	if(sel == 4) pwm0->duty4 = val;
    12a4:	34 04 00 04 	mvi r4,4
    12a8:	5c 44 ff e3 	bne r2,r4,1234 <_ZN3pwm8pwm_dutyEij+0xc>
    12ac:	28 21 00 00 	lw r1,(r1+0)
    12b0:	58 23 00 38 	sw (r1+56),r3
};
    12b4:	c3 a0 00 00 	ret

000012b8 <_ZN3pwm10pwm_periodEij>:

void pwm::pwm_period(int sel, uint32_t val){

	if(sel == 0) pwm0->period0 = val;
    12b8:	5c 40 00 08 	bne r2,r0,12d8 <_ZN3pwm10pwm_periodEij+0x20>
    12bc:	28 24 00 00 	lw r4,(r1+0)
    12c0:	58 83 00 04 	sw (r4+4),r3
	if(sel == 1) pwm0->period1 = val;
	if(sel == 2) pwm0->period2 = val;
	if(sel == 3) pwm0->period3 = val;
	if(sel == 4) pwm0->period4 = val;
	if(sel == 5) pwm0->period5 = val;
    12c4:	34 04 00 05 	mvi r4,5
    12c8:	5c 44 00 0d 	bne r2,r4,12fc <_ZN3pwm10pwm_periodEij+0x44>
    12cc:	28 21 00 00 	lw r1,(r1+0)
    12d0:	58 23 00 40 	sw (r1+64),r3
	if(sel == 6) pwm0->period6 = val;
	if(sel == 7) pwm0->period7 = val;

};
    12d4:	c3 a0 00 00 	ret
	if(sel == 1) pwm0->period1 = val;
    12d8:	34 04 00 01 	mvi r4,1
    12dc:	5c 44 00 04 	bne r2,r4,12ec <_ZN3pwm10pwm_periodEij+0x34>
    12e0:	28 24 00 00 	lw r4,(r1+0)
    12e4:	58 83 00 10 	sw (r4+16),r3
    12e8:	e3 ff ff f7 	bi 12c4 <_ZN3pwm10pwm_periodEij+0xc>
	if(sel == 2) pwm0->period2 = val;
    12ec:	34 04 00 02 	mvi r4,2
    12f0:	5c 44 00 08 	bne r2,r4,1310 <_ZN3pwm10pwm_periodEij+0x58>
    12f4:	28 24 00 00 	lw r4,(r1+0)
    12f8:	58 83 00 1c 	sw (r4+28),r3
	if(sel == 6) pwm0->period6 = val;
    12fc:	34 04 00 06 	mvi r4,6
    1300:	5c 44 00 08 	bne r2,r4,1320 <_ZN3pwm10pwm_periodEij+0x68>
    1304:	28 21 00 00 	lw r1,(r1+0)
    1308:	58 23 00 4c 	sw (r1+76),r3
};
    130c:	c3 a0 00 00 	ret
	if(sel == 3) pwm0->period3 = val;
    1310:	34 04 00 03 	mvi r4,3
    1314:	5c 44 00 08 	bne r2,r4,1334 <_ZN3pwm10pwm_periodEij+0x7c>
    1318:	28 24 00 00 	lw r4,(r1+0)
    131c:	58 83 00 28 	sw (r4+40),r3
	if(sel == 7) pwm0->period7 = val;
    1320:	34 04 00 07 	mvi r4,7
    1324:	5c 44 ff ec 	bne r2,r4,12d4 <_ZN3pwm10pwm_periodEij+0x1c>
    1328:	28 21 00 00 	lw r1,(r1+0)
    132c:	58 23 00 58 	sw (r1+88),r3
};
    1330:	c3 a0 00 00 	ret
	if(sel == 4) pwm0->period4 = val;
    1334:	34 04 00 04 	mvi r4,4
    1338:	5c 44 ff e3 	bne r2,r4,12c4 <_ZN3pwm10pwm_periodEij+0xc>
    133c:	28 21 00 00 	lw r1,(r1+0)
    1340:	58 23 00 34 	sw (r1+52),r3
};
    1344:	c3 a0 00 00 	ret

00001348 <_ZN3pwm9pwm_getenEj>:

uint32_t pwm::pwm_geten(uint32_t sel){
    1348:	b8 20 18 00 	mv r3,r1

	if(sel == 0) return pwm0->en0;
    134c:	44 40 00 11 	be r2,r0,1390 <_ZN3pwm9pwm_getenEj+0x48>
	if(sel == 1) return pwm0->en1;
    1350:	34 01 00 01 	mvi r1,1
    1354:	44 41 00 12 	be r2,r1,139c <_ZN3pwm9pwm_getenEj+0x54>
	if(sel == 2) return pwm0->en2;
    1358:	34 01 00 02 	mvi r1,2
    135c:	44 41 00 16 	be r2,r1,13b4 <_ZN3pwm9pwm_getenEj+0x6c>
	if(sel == 3) return pwm0->en3;
    1360:	34 01 00 03 	mvi r1,3
    1364:	44 41 00 11 	be r2,r1,13a8 <_ZN3pwm9pwm_getenEj+0x60>
	if(sel == 4) return pwm0->en4;
    1368:	34 01 00 04 	mvi r1,4
    136c:	44 41 00 15 	be r2,r1,13c0 <_ZN3pwm9pwm_getenEj+0x78>
	if(sel == 5) return pwm0->en5;
    1370:	34 01 00 05 	mvi r1,5
    1374:	44 41 00 19 	be r2,r1,13d8 <_ZN3pwm9pwm_getenEj+0x90>
	if(sel == 6) return pwm0->en6;
    1378:	34 01 00 06 	mvi r1,6
    137c:	44 41 00 1a 	be r2,r1,13e4 <_ZN3pwm9pwm_getenEj+0x9c>
	if(sel == 7) return pwm0->en7;
    1380:	34 04 00 07 	mvi r4,7
	return 0;
    1384:	34 01 00 00 	mvi r1,0
	if(sel == 7) return pwm0->en7;
    1388:	44 44 00 11 	be r2,r4,13cc <_ZN3pwm9pwm_getenEj+0x84>

};
    138c:	c3 a0 00 00 	ret
	if(sel == 0) return pwm0->en0;
    1390:	28 21 00 00 	lw r1,(r1+0)
    1394:	28 21 00 00 	lw r1,(r1+0)
};
    1398:	c3 a0 00 00 	ret
	if(sel == 1) return pwm0->en1;
    139c:	28 61 00 00 	lw r1,(r3+0)
    13a0:	28 21 00 0c 	lw r1,(r1+12)
};
    13a4:	c3 a0 00 00 	ret
	if(sel == 3) return pwm0->en3;
    13a8:	28 61 00 00 	lw r1,(r3+0)
    13ac:	28 21 00 24 	lw r1,(r1+36)
};
    13b0:	c3 a0 00 00 	ret
	if(sel == 2) return pwm0->en2;
    13b4:	28 61 00 00 	lw r1,(r3+0)
    13b8:	28 21 00 18 	lw r1,(r1+24)
};
    13bc:	c3 a0 00 00 	ret
	if(sel == 4) return pwm0->en4;
    13c0:	28 61 00 00 	lw r1,(r3+0)
    13c4:	28 21 00 30 	lw r1,(r1+48)
};
    13c8:	c3 a0 00 00 	ret
	if(sel == 7) return pwm0->en7;
    13cc:	28 61 00 00 	lw r1,(r3+0)
    13d0:	28 21 00 54 	lw r1,(r1+84)
};
    13d4:	c3 a0 00 00 	ret
	if(sel == 5) return pwm0->en5;
    13d8:	28 61 00 00 	lw r1,(r3+0)
    13dc:	28 21 00 3c 	lw r1,(r1+60)
};
    13e0:	c3 a0 00 00 	ret
	if(sel == 6) return pwm0->en6;
    13e4:	28 61 00 00 	lw r1,(r3+0)
    13e8:	28 21 00 48 	lw r1,(r1+72)
};
    13ec:	c3 a0 00 00 	ret

000013f0 <_ZN3pwm11pwm_getdutyEj>:

uint32_t pwm::pwm_getduty(uint32_t sel){
    13f0:	b8 20 18 00 	mv r3,r1

	if(sel == 0) return pwm0->duty0;
    13f4:	44 40 00 11 	be r2,r0,1438 <_ZN3pwm11pwm_getdutyEj+0x48>
	if(sel == 1) return pwm0->duty1;
    13f8:	34 01 00 01 	mvi r1,1
    13fc:	44 41 00 12 	be r2,r1,1444 <_ZN3pwm11pwm_getdutyEj+0x54>
	if(sel == 2) return pwm0->duty2;
    1400:	34 01 00 02 	mvi r1,2
    1404:	44 41 00 16 	be r2,r1,145c <_ZN3pwm11pwm_getdutyEj+0x6c>
	if(sel == 3) return pwm0->duty3;
    1408:	34 01 00 03 	mvi r1,3
    140c:	44 41 00 11 	be r2,r1,1450 <_ZN3pwm11pwm_getdutyEj+0x60>
	if(sel == 4) return pwm0->duty4;
    1410:	34 01 00 04 	mvi r1,4
    1414:	44 41 00 15 	be r2,r1,1468 <_ZN3pwm11pwm_getdutyEj+0x78>
	if(sel == 5) return pwm0->duty5;
    1418:	34 01 00 05 	mvi r1,5
    141c:	44 41 00 19 	be r2,r1,1480 <_ZN3pwm11pwm_getdutyEj+0x90>
	if(sel == 6) return pwm0->duty6;
    1420:	34 01 00 06 	mvi r1,6
    1424:	44 41 00 1a 	be r2,r1,148c <_ZN3pwm11pwm_getdutyEj+0x9c>
	if(sel == 7) return pwm0->duty7;
    1428:	34 04 00 07 	mvi r4,7
	return 0;
    142c:	34 01 00 00 	mvi r1,0
	if(sel == 7) return pwm0->duty7;
    1430:	44 44 00 11 	be r2,r4,1474 <_ZN3pwm11pwm_getdutyEj+0x84>
	
};
    1434:	c3 a0 00 00 	ret
	if(sel == 0) return pwm0->duty0;
    1438:	28 21 00 00 	lw r1,(r1+0)
    143c:	28 21 00 08 	lw r1,(r1+8)
};
    1440:	c3 a0 00 00 	ret
	if(sel == 1) return pwm0->duty1;
    1444:	28 61 00 00 	lw r1,(r3+0)
    1448:	28 21 00 14 	lw r1,(r1+20)
};
    144c:	c3 a0 00 00 	ret
	if(sel == 3) return pwm0->duty3;
    1450:	28 61 00 00 	lw r1,(r3+0)
    1454:	28 21 00 2c 	lw r1,(r1+44)
};
    1458:	c3 a0 00 00 	ret
	if(sel == 2) return pwm0->duty2;
    145c:	28 61 00 00 	lw r1,(r3+0)
    1460:	28 21 00 20 	lw r1,(r1+32)
};
    1464:	c3 a0 00 00 	ret
	if(sel == 4) return pwm0->duty4;
    1468:	28 61 00 00 	lw r1,(r3+0)
    146c:	28 21 00 38 	lw r1,(r1+56)
};
    1470:	c3 a0 00 00 	ret
	if(sel == 7) return pwm0->duty7;
    1474:	28 61 00 00 	lw r1,(r3+0)
    1478:	28 21 00 5c 	lw r1,(r1+92)
};
    147c:	c3 a0 00 00 	ret
	if(sel == 5) return pwm0->duty5;
    1480:	28 61 00 00 	lw r1,(r3+0)
    1484:	28 21 00 44 	lw r1,(r1+68)
};
    1488:	c3 a0 00 00 	ret
	if(sel == 6) return pwm0->duty6;
    148c:	28 61 00 00 	lw r1,(r3+0)
    1490:	28 21 00 50 	lw r1,(r1+80)
};
    1494:	c3 a0 00 00 	ret

00001498 <_ZN3pwm13pwm_getperiodEj>:

uint32_t pwm::pwm_getperiod(uint32_t sel){
    1498:	b8 20 18 00 	mv r3,r1

	if(sel == 0) return pwm0->period0;
    149c:	44 40 00 11 	be r2,r0,14e0 <_ZN3pwm13pwm_getperiodEj+0x48>
	if(sel == 1) return pwm0->period1;
    14a0:	34 01 00 01 	mvi r1,1
    14a4:	44 41 00 12 	be r2,r1,14ec <_ZN3pwm13pwm_getperiodEj+0x54>
	if(sel == 2) return pwm0->period2;
    14a8:	34 01 00 02 	mvi r1,2
    14ac:	44 41 00 16 	be r2,r1,1504 <_ZN3pwm13pwm_getperiodEj+0x6c>
	if(sel == 3) return pwm0->period3;
    14b0:	34 01 00 03 	mvi r1,3
    14b4:	44 41 00 11 	be r2,r1,14f8 <_ZN3pwm13pwm_getperiodEj+0x60>
	if(sel == 4) return pwm0->period4;
    14b8:	34 01 00 04 	mvi r1,4
    14bc:	44 41 00 15 	be r2,r1,1510 <_ZN3pwm13pwm_getperiodEj+0x78>
	if(sel == 5) return pwm0->period5;
    14c0:	34 01 00 05 	mvi r1,5
    14c4:	44 41 00 19 	be r2,r1,1528 <_ZN3pwm13pwm_getperiodEj+0x90>
	if(sel == 6) return pwm0->period6;
    14c8:	34 01 00 06 	mvi r1,6
    14cc:	44 41 00 1a 	be r2,r1,1534 <_ZN3pwm13pwm_getperiodEj+0x9c>
	if(sel == 7) return pwm0->period7;
    14d0:	34 04 00 07 	mvi r4,7
	return 0;
    14d4:	34 01 00 00 	mvi r1,0
	if(sel == 7) return pwm0->period7;
    14d8:	44 44 00 11 	be r2,r4,151c <_ZN3pwm13pwm_getperiodEj+0x84>
	
    14dc:	c3 a0 00 00 	ret
	if(sel == 0) return pwm0->period0;
    14e0:	28 21 00 00 	lw r1,(r1+0)
    14e4:	28 21 00 04 	lw r1,(r1+4)
    14e8:	c3 a0 00 00 	ret
	if(sel == 1) return pwm0->period1;
    14ec:	28 61 00 00 	lw r1,(r3+0)
    14f0:	28 21 00 10 	lw r1,(r1+16)
    14f4:	c3 a0 00 00 	ret
	if(sel == 3) return pwm0->period3;
    14f8:	28 61 00 00 	lw r1,(r3+0)
    14fc:	28 21 00 28 	lw r1,(r1+40)
    1500:	c3 a0 00 00 	ret
	if(sel == 2) return pwm0->period2;
    1504:	28 61 00 00 	lw r1,(r3+0)
    1508:	28 21 00 1c 	lw r1,(r1+28)
    150c:	c3 a0 00 00 	ret
	if(sel == 4) return pwm0->period4;
    1510:	28 61 00 00 	lw r1,(r3+0)
    1514:	28 21 00 34 	lw r1,(r1+52)
    1518:	c3 a0 00 00 	ret
	if(sel == 7) return pwm0->period7;
    151c:	28 61 00 00 	lw r1,(r3+0)
    1520:	28 21 00 58 	lw r1,(r1+88)
    1524:	c3 a0 00 00 	ret
	if(sel == 5) return pwm0->period5;
    1528:	28 61 00 00 	lw r1,(r3+0)
    152c:	28 21 00 40 	lw r1,(r1+64)
    1530:	c3 a0 00 00 	ret
	if(sel == 6) return pwm0->period6;
    1534:	28 61 00 00 	lw r1,(r3+0)
    1538:	28 21 00 4c 	lw r1,(r1+76)
    153c:	c3 a0 00 00 	ret

00001540 <_ZN3arm4initEv>:
#include "servos.h"

void arm::init(){
    1540:	37 9c ff f8 	addi sp,sp,-8
    1544:	5b 8b 00 08 	sw (sp+8),r11
    1548:	5b 9d 00 04 	sw (sp+4),ra
	pwm_duty(serv2,atr);
    154c:	28 23 00 18 	lw r3,(r1+24)
    1550:	28 22 00 08 	lw r2,(r1+8)
void arm::init(){
    1554:	b8 20 58 00 	mv r11,r1
	pwm_duty(serv2,atr);
    1558:	fb ff ff 34 	calli 1228 <_ZN3pwm8pwm_dutyEij>
	pause();
    155c:	b9 60 08 00 	mv r1,r11
    1560:	fb ff ff 07 	calli 117c <_ZN3pwm5pauseEv>
	pwm_duty(serv1,mid);
    1564:	29 63 00 14 	lw r3,(r11+20)
    1568:	29 62 00 04 	lw r2,(r11+4)
    156c:	b9 60 08 00 	mv r1,r11
    1570:	fb ff ff 2e 	calli 1228 <_ZN3pwm8pwm_dutyEij>
	pause();
    1574:	b9 60 08 00 	mv r1,r11
    1578:	fb ff ff 01 	calli 117c <_ZN3pwm5pauseEv>
	pwm_duty(serv2,ade);
    157c:	29 63 00 1c 	lw r3,(r11+28)
    1580:	29 62 00 08 	lw r2,(r11+8)
    1584:	b9 60 08 00 	mv r1,r11
    1588:	fb ff ff 28 	calli 1228 <_ZN3pwm8pwm_dutyEij>
	pause();
    158c:	b9 60 08 00 	mv r1,r11
    1590:	fb ff fe fb 	calli 117c <_ZN3pwm5pauseEv>
};
    1594:	2b 9d 00 04 	lw ra,(sp+4)
    1598:	2b 8b 00 08 	lw r11,(sp+8)
    159c:	37 9c 00 08 	addi sp,sp,8
    15a0:	c3 a0 00 00 	ret

000015a4 <_ZN3arm4homeEv>:

void arm::home(){
    15a4:	37 9c ff f8 	addi sp,sp,-8
    15a8:	5b 8b 00 08 	sw (sp+8),r11
    15ac:	5b 9d 00 04 	sw (sp+4),ra
	pwm_duty(serv2,atr);
    15b0:	28 23 00 18 	lw r3,(r1+24)
    15b4:	28 22 00 08 	lw r2,(r1+8)
void arm::home(){
    15b8:	b8 20 58 00 	mv r11,r1
	pwm_duty(serv2,atr);
    15bc:	fb ff ff 1b 	calli 1228 <_ZN3pwm8pwm_dutyEij>
	pause();
    15c0:	b9 60 08 00 	mv r1,r11
    15c4:	fb ff fe ee 	calli 117c <_ZN3pwm5pauseEv>
};
    15c8:	2b 9d 00 04 	lw ra,(sp+4)
    15cc:	2b 8b 00 08 	lw r11,(sp+8)
    15d0:	37 9c 00 08 	addi sp,sp,8
    15d4:	c3 a0 00 00 	ret

000015d8 <_ZN3arm7derechaEv>:

void arm::derecha(){
    15d8:	37 9c ff f8 	addi sp,sp,-8
    15dc:	5b 8b 00 08 	sw (sp+8),r11
    15e0:	5b 9d 00 04 	sw (sp+4),ra
	pwm_duty(serv1,der);
    15e4:	28 23 00 0c 	lw r3,(r1+12)
    15e8:	28 22 00 04 	lw r2,(r1+4)
void arm::derecha(){
    15ec:	b8 20 58 00 	mv r11,r1
	pwm_duty(serv1,der);
    15f0:	fb ff ff 0e 	calli 1228 <_ZN3pwm8pwm_dutyEij>
	pause();
    15f4:	b9 60 08 00 	mv r1,r11
    15f8:	fb ff fe e1 	calli 117c <_ZN3pwm5pauseEv>
	pwm_duty(serv2,atr);
    15fc:	29 63 00 18 	lw r3,(r11+24)
    1600:	29 62 00 08 	lw r2,(r11+8)
    1604:	b9 60 08 00 	mv r1,r11
    1608:	fb ff ff 08 	calli 1228 <_ZN3pwm8pwm_dutyEij>
	pause();
    160c:	b9 60 08 00 	mv r1,r11
    1610:	fb ff fe db 	calli 117c <_ZN3pwm5pauseEv>
	pwm_duty(serv1,mid);
    1614:	29 63 00 14 	lw r3,(r11+20)
    1618:	29 62 00 04 	lw r2,(r11+4)
    161c:	b9 60 08 00 	mv r1,r11
    1620:	fb ff ff 02 	calli 1228 <_ZN3pwm8pwm_dutyEij>
	pause();
    1624:	b9 60 08 00 	mv r1,r11
    1628:	fb ff fe d5 	calli 117c <_ZN3pwm5pauseEv>
	pwm_duty(serv2,ade);
    162c:	29 63 00 1c 	lw r3,(r11+28)
    1630:	29 62 00 08 	lw r2,(r11+8)
    1634:	b9 60 08 00 	mv r1,r11
    1638:	fb ff fe fc 	calli 1228 <_ZN3pwm8pwm_dutyEij>
	pause();
    163c:	b9 60 08 00 	mv r1,r11
    1640:	fb ff fe cf 	calli 117c <_ZN3pwm5pauseEv>
};
    1644:	2b 9d 00 04 	lw ra,(sp+4)
    1648:	2b 8b 00 08 	lw r11,(sp+8)
    164c:	37 9c 00 08 	addi sp,sp,8
    1650:	c3 a0 00 00 	ret

00001654 <_ZN3arm9izquierdaEv>:

void arm::izquierda(){
    1654:	37 9c ff f8 	addi sp,sp,-8
    1658:	5b 8b 00 08 	sw (sp+8),r11
    165c:	5b 9d 00 04 	sw (sp+4),ra
	pwm_duty(serv1,iz);
    1660:	28 23 00 10 	lw r3,(r1+16)
    1664:	28 22 00 04 	lw r2,(r1+4)
void arm::izquierda(){
    1668:	b8 20 58 00 	mv r11,r1
	pwm_duty(serv1,iz);
    166c:	fb ff fe ef 	calli 1228 <_ZN3pwm8pwm_dutyEij>
	pause();
    1670:	b9 60 08 00 	mv r1,r11
    1674:	fb ff fe c2 	calli 117c <_ZN3pwm5pauseEv>
	pwm_duty(serv2,atr);
    1678:	29 63 00 18 	lw r3,(r11+24)
    167c:	29 62 00 08 	lw r2,(r11+8)
    1680:	b9 60 08 00 	mv r1,r11
    1684:	fb ff fe e9 	calli 1228 <_ZN3pwm8pwm_dutyEij>
	pause();
    1688:	b9 60 08 00 	mv r1,r11
    168c:	fb ff fe bc 	calli 117c <_ZN3pwm5pauseEv>
	pwm_duty(serv1,mid);
    1690:	29 63 00 14 	lw r3,(r11+20)
    1694:	29 62 00 04 	lw r2,(r11+4)
    1698:	b9 60 08 00 	mv r1,r11
    169c:	fb ff fe e3 	calli 1228 <_ZN3pwm8pwm_dutyEij>
	pause();
    16a0:	b9 60 08 00 	mv r1,r11
    16a4:	fb ff fe b6 	calli 117c <_ZN3pwm5pauseEv>
	pwm_duty(serv2,ade);
    16a8:	29 63 00 1c 	lw r3,(r11+28)
    16ac:	29 62 00 08 	lw r2,(r11+8)
    16b0:	b9 60 08 00 	mv r1,r11
    16b4:	fb ff fe dd 	calli 1228 <_ZN3pwm8pwm_dutyEij>
	pause();
    16b8:	b9 60 08 00 	mv r1,r11
    16bc:	fb ff fe b0 	calli 117c <_ZN3pwm5pauseEv>
};
    16c0:	2b 9d 00 04 	lw ra,(sp+4)
    16c4:	2b 8b 00 08 	lw r11,(sp+8)
    16c8:	37 9c 00 08 	addi sp,sp,8
    16cc:	c3 a0 00 00 	ret

000016d0 <_ZN3arm8set_servEii>:

void arm::set_serv(int x,int y){
    16d0:	37 9c ff f8 	addi sp,sp,-8
    16d4:	5b 8b 00 08 	sw (sp+8),r11
    16d8:	5b 9d 00 04 	sw (sp+4),ra
	serv1 = x;
	serv2 = y;

	der = 25;
    16dc:	34 04 00 19 	mvi r4,25
	iz  = 5;
    16e0:	34 05 00 05 	mvi r5,5
	der = 25;
    16e4:	58 24 00 0c 	sw (r1+12),r4
	iz  = 5;
    16e8:	58 25 00 10 	sw (r1+16),r5
	mid = 13;

	atr = 25;
    16ec:	58 24 00 18 	sw (r1+24),r4
	mid = 13;
    16f0:	34 05 00 0d 	mvi r5,13
	ade = 18;
    16f4:	34 04 00 12 	mvi r4,18
	mid = 13;
    16f8:	58 25 00 14 	sw (r1+20),r5
	ade = 18;
    16fc:	58 24 00 1c 	sw (r1+28),r4
	serv1 = x;
    1700:	58 22 00 04 	sw (r1+4),r2
	serv2 = y;
    1704:	58 23 00 08 	sw (r1+8),r3

	pwm_period(serv1,200);
    1708:	34 03 00 c8 	mvi r3,200
void arm::set_serv(int x,int y){
    170c:	b8 20 58 00 	mv r11,r1
	pwm_period(serv1,200);
    1710:	fb ff fe ea 	calli 12b8 <_ZN3pwm10pwm_periodEij>
	pwm_period(serv2,200);
    1714:	29 62 00 08 	lw r2,(r11+8)
    1718:	b9 60 08 00 	mv r1,r11
    171c:	34 03 00 c8 	mvi r3,200
    1720:	fb ff fe e6 	calli 12b8 <_ZN3pwm10pwm_periodEij>
	pwm_duty(serv1,mid);
    1724:	29 63 00 14 	lw r3,(r11+20)
    1728:	29 62 00 04 	lw r2,(r11+4)
    172c:	b9 60 08 00 	mv r1,r11
    1730:	fb ff fe be 	calli 1228 <_ZN3pwm8pwm_dutyEij>
	pwm_duty(serv2,atr);
    1734:	29 63 00 18 	lw r3,(r11+24)
    1738:	29 62 00 08 	lw r2,(r11+8)
    173c:	b9 60 08 00 	mv r1,r11
    1740:	fb ff fe ba 	calli 1228 <_ZN3pwm8pwm_dutyEij>
	pwm_en(serv1,1);
    1744:	29 62 00 04 	lw r2,(r11+4)
    1748:	b9 60 08 00 	mv r1,r11
    174c:	34 03 00 01 	mvi r3,1
    1750:	fb ff fe 92 	calli 1198 <_ZN3pwm6pwm_enEij>
	pwm_en(serv2,1);
    1754:	29 62 00 08 	lw r2,(r11+8)
    1758:	34 03 00 01 	mvi r3,1
    175c:	b9 60 08 00 	mv r1,r11
    1760:	fb ff fe 8e 	calli 1198 <_ZN3pwm6pwm_enEij>
	pause();
    1764:	b9 60 08 00 	mv r1,r11
    1768:	fb ff fe 85 	calli 117c <_ZN3pwm5pauseEv>
};
    176c:	2b 9d 00 04 	lw ra,(sp+4)
    1770:	2b 8b 00 08 	lw r11,(sp+8)
    1774:	37 9c 00 08 	addi sp,sp,8
    1778:	c3 a0 00 00 	ret

0000177c <_ZN3arm5calibEci>:

void arm::calib(char dir,int val){
    177c:	20 42 00 ff 	andi r2,r2,0xff
	if(dir == 0x20){
    1780:	34 04 00 20 	mvi r4,32
    1784:	44 44 00 09 	be r2,r4,17a8 <_ZN3arm5calibEci+0x2c>
		der = val;
	}
	if(dir == 0x21){
    1788:	34 04 00 21 	mvi r4,33
    178c:	5c 44 00 03 	bne r2,r4,1798 <_ZN3arm5calibEci+0x1c>
		iz = val;
    1790:	58 23 00 10 	sw (r1+16),r3
		atr = val;
	}
	if(dir == 0x24){
		ade = val;
	}
};
    1794:	c3 a0 00 00 	ret
	if(dir == 0x22){
    1798:	34 04 00 22 	mvi r4,34
    179c:	5c 44 00 05 	bne r2,r4,17b0 <_ZN3arm5calibEci+0x34>
		mid = val;
    17a0:	58 23 00 14 	sw (r1+20),r3
};
    17a4:	c3 a0 00 00 	ret
		der = val;
    17a8:	58 23 00 0c 	sw (r1+12),r3
};
    17ac:	c3 a0 00 00 	ret
	if(dir == 0x23){
    17b0:	34 04 00 23 	mvi r4,35
    17b4:	5c 44 00 03 	bne r2,r4,17c0 <_ZN3arm5calibEci+0x44>
		atr = val;
    17b8:	58 23 00 18 	sw (r1+24),r3
};
    17bc:	c3 a0 00 00 	ret
	if(dir == 0x24){
    17c0:	34 04 00 24 	mvi r4,36
    17c4:	5c 44 ff f4 	bne r2,r4,1794 <_ZN3arm5calibEci+0x18>
		ade = val;
    17c8:	58 23 00 1c 	sw (r1+28),r3
};
    17cc:	e3 ff ff f2 	bi 1794 <_ZN3arm5calibEci+0x18>

000017d0 <_ZN3arm8derecha0Ev>:

void arm::derecha0(){
    17d0:	37 9c ff fc 	addi sp,sp,-4
    17d4:	5b 9d 00 04 	sw (sp+4),ra
	pwm_duty(serv1,der);
    17d8:	28 23 00 0c 	lw r3,(r1+12)
    17dc:	28 22 00 04 	lw r2,(r1+4)
    17e0:	fb ff fe 92 	calli 1228 <_ZN3pwm8pwm_dutyEij>
};
    17e4:	2b 9d 00 04 	lw ra,(sp+4)
    17e8:	37 9c 00 04 	addi sp,sp,4
    17ec:	c3 a0 00 00 	ret

000017f0 <_ZN3arm10izquierda0Ev>:


void arm::izquierda0(){
    17f0:	37 9c ff fc 	addi sp,sp,-4
    17f4:	5b 9d 00 04 	sw (sp+4),ra
	pwm_duty(serv1,iz);
    17f8:	28 23 00 10 	lw r3,(r1+16)
    17fc:	28 22 00 04 	lw r2,(r1+4)
    1800:	fb ff fe 8a 	calli 1228 <_ZN3pwm8pwm_dutyEij>
};
    1804:	2b 9d 00 04 	lw ra,(sp+4)
    1808:	37 9c 00 04 	addi sp,sp,4
    180c:	c3 a0 00 00 	ret

00001810 <_ZN3arm6medio0Ev>:


void arm::medio0(){
    1810:	37 9c ff fc 	addi sp,sp,-4
    1814:	5b 9d 00 04 	sw (sp+4),ra
	pwm_duty(serv1,mid);
    1818:	28 23 00 14 	lw r3,(r1+20)
    181c:	28 22 00 04 	lw r2,(r1+4)
    1820:	fb ff fe 82 	calli 1228 <_ZN3pwm8pwm_dutyEij>
};
    1824:	2b 9d 00 04 	lw ra,(sp+4)
    1828:	37 9c 00 04 	addi sp,sp,4
    182c:	c3 a0 00 00 	ret

00001830 <_ZN3arm6atras0Ev>:


void arm::atras0(){
    1830:	37 9c ff fc 	addi sp,sp,-4
    1834:	5b 9d 00 04 	sw (sp+4),ra
	pwm_duty(serv2,atr);
    1838:	28 23 00 18 	lw r3,(r1+24)
    183c:	28 22 00 08 	lw r2,(r1+8)
    1840:	fb ff fe 7a 	calli 1228 <_ZN3pwm8pwm_dutyEij>
};
    1844:	2b 9d 00 04 	lw ra,(sp+4)
    1848:	37 9c 00 04 	addi sp,sp,4
    184c:	c3 a0 00 00 	ret

00001850 <_ZN3arm9adelante0Ev>:


void arm::adelante0(){
    1850:	37 9c ff fc 	addi sp,sp,-4
    1854:	5b 9d 00 04 	sw (sp+4),ra
	pwm_duty(serv2,ade);
    1858:	28 23 00 1c 	lw r3,(r1+28)
    185c:	28 22 00 08 	lw r2,(r1+8)
    1860:	fb ff fe 72 	calli 1228 <_ZN3pwm8pwm_dutyEij>
};
    1864:	2b 9d 00 04 	lw ra,(sp+4)
    1868:	37 9c 00 04 	addi sp,sp,4
    186c:	c3 a0 00 00 	ret

00001870 <_ZN3cam5resetEv>:
#pragma GCC diagnostic ignored "-Wwrite-strings"
#include "cam.h"

void cam::reset(){
    1870:	37 9c ff f4 	addi sp,sp,-12
    1874:	5b 8b 00 0c 	sw (sp+12),r11
    1878:	5b 8c 00 08 	sw (sp+8),r12
    187c:	5b 9d 00 04 	sw (sp+4),ra

	char R1;
	char R2;

	for(int i = 0;i < 4;i++){
		uart1_putchar(RESET_CAMERA[i]);
    1880:	34 01 00 56 	mvi r1,86
    1884:	fb ff fe 0d 	calli 10b8 <uart1_putchar>
    1888:	34 01 00 00 	mvi r1,0
    188c:	fb ff fe 0b 	calli 10b8 <uart1_putchar>
    1890:	34 01 00 26 	mvi r1,38
    1894:	fb ff fe 09 	calli 10b8 <uart1_putchar>
    1898:	34 01 00 00 	mvi r1,0
    189c:	fb ff fe 07 	calli 10b8 <uart1_putchar>
	}

	R1 = uart1_getchar();
    18a0:	fb ff fd fc 	calli 1090 <uart1_getchar>
    18a4:	b8 20 60 00 	mv r12,r1
    18a8:	34 0b 00 46 	mvi r11,70
    18ac:	35 6b ff ff 	addi r11,r11,-1

	for(int i = 0;i < 70;i++){
		R2 = uart1_getchar();
    18b0:	fb ff fd f8 	calli 1090 <uart1_getchar>
	for(int i = 0;i < 70;i++){
    18b4:	5d 60 ff fe 	bne r11,r0,18ac <_ZN3cam5resetEv+0x3c>
	}

	if(R1 == 0x76 && R2 == 0x0a){
    18b8:	65 8c 00 76 	cmpei r12,r12,118
    18bc:	64 21 00 0a 	cmpei r1,r1,10
    18c0:	a1 81 08 00 	and r1,r12,r1
    18c4:	44 20 00 05 	be r1,r0,18d8 <_ZN3cam5resetEv+0x68>
		uart_putstr("Ok");
    18c8:	78 02 00 00 	mvhi r2,0x0
    18cc:	38 42 2c 3c 	ori r2,r2,0x2c3c
    18d0:	28 41 00 00 	lw r1,(r2+0)
    18d4:	fb ff fd e0 	calli 1054 <uart_putstr>
	}
	

};
    18d8:	2b 9d 00 04 	lw ra,(sp+4)
    18dc:	2b 8b 00 0c 	lw r11,(sp+12)
    18e0:	2b 8c 00 08 	lw r12,(sp+8)
    18e4:	37 9c 00 0c 	addi sp,sp,12
    18e8:	c3 a0 00 00 	ret

000018ec <_ZN3cam11takepictureEv>:

void cam::takepicture(){
    18ec:	37 9c ff e0 	addi sp,sp,-32
    18f0:	5b 8b 00 0c 	sw (sp+12),r11
    18f4:	5b 8c 00 08 	sw (sp+8),r12
    18f8:	5b 9d 00 04 	sw (sp+4),ra
    18fc:	78 01 00 00 	mvhi r1,0x0
    1900:	38 21 2c 40 	ori r1,r1,0x2c40
    1904:	28 2b 00 00 	lw r11,(r1+0)
    1908:	34 01 00 56 	mvi r1,86

	uint32_t Z [5];

	for(int i = 0;i < 5;i++){
		uart1_putchar(TAKE_PICTURE[i]);
    190c:	20 21 00 ff 	andi r1,r1,0xff
    1910:	35 6c 00 14 	addi r12,r11,20
    1914:	35 6b 00 04 	addi r11,r11,4
    1918:	fb ff fd e8 	calli 10b8 <uart1_putchar>
	for(int i = 0;i < 5;i++){
    191c:	45 6c 00 06 	be r11,r12,1934 <_ZN3cam11takepictureEv+0x48>
    1920:	29 61 00 00 	lw r1,(r11+0)
    1924:	35 6b 00 04 	addi r11,r11,4
		uart1_putchar(TAKE_PICTURE[i]);
    1928:	20 21 00 ff 	andi r1,r1,0xff
    192c:	fb ff fd e3 	calli 10b8 <uart1_putchar>
	for(int i = 0;i < 5;i++){
    1930:	5d 6c ff fc 	bne r11,r12,1920 <_ZN3cam11takepictureEv+0x34>
    1934:	37 8b 00 10 	addi r11,sp,16
    1938:	37 8c 00 24 	addi r12,sp,36
	}

	for(int i = 0;i < 5;i++){
		Z[i] = uart1_getchar();
    193c:	fb ff fd d5 	calli 1090 <uart1_getchar>
    1940:	59 61 00 00 	sw (r11+0),r1
    1944:	35 6b 00 04 	addi r11,r11,4
	for(int i = 0;i < 5;i++){
    1948:	5d 6c ff fd 	bne r11,r12,193c <_ZN3cam11takepictureEv+0x50>
	}


	if(Z[0] == 0x76 && Z[2] == 0x36){
    194c:	2b 82 00 10 	lw r2,(sp+16)
    1950:	34 01 00 76 	mvi r1,118
    1954:	44 41 00 06 	be r2,r1,196c <_ZN3cam11takepictureEv+0x80>
		uart_putstr("Ok");	}

};
    1958:	2b 9d 00 04 	lw ra,(sp+4)
    195c:	2b 8b 00 0c 	lw r11,(sp+12)
    1960:	2b 8c 00 08 	lw r12,(sp+8)
    1964:	37 9c 00 20 	addi sp,sp,32
    1968:	c3 a0 00 00 	ret
	if(Z[0] == 0x76 && Z[2] == 0x36){
    196c:	2b 82 00 18 	lw r2,(sp+24)
    1970:	34 01 00 36 	mvi r1,54
    1974:	5c 41 ff f9 	bne r2,r1,1958 <_ZN3cam11takepictureEv+0x6c>
		uart_putstr("Ok");	}
    1978:	78 02 00 00 	mvhi r2,0x0
    197c:	38 42 2c 44 	ori r2,r2,0x2c44
    1980:	28 41 00 00 	lw r1,(r2+0)
    1984:	fb ff fd b4 	calli 1054 <uart_putstr>
};
    1988:	e3 ff ff f4 	bi 1958 <_ZN3cam11takepictureEv+0x6c>

0000198c <_ZN3cam7getsizeEv>:

void cam::getsize(){
    198c:	37 9c ff cc 	addi sp,sp,-52
    1990:	5b 8b 00 10 	sw (sp+16),r11
    1994:	5b 8c 00 0c 	sw (sp+12),r12
    1998:	5b 8d 00 08 	sw (sp+8),r13
    199c:	5b 9d 00 04 	sw (sp+4),ra
    19a0:	78 02 00 00 	mvhi r2,0x0
    19a4:	38 42 2c 48 	ori r2,r2,0x2c48
    19a8:	28 4b 00 00 	lw r11,(r2+0)
    19ac:	b8 20 68 00 	mv r13,r1
    19b0:	34 01 00 56 	mvi r1,86
    19b4:	35 6c 00 14 	addi r12,r11,20

	uint32_t Z [9];

	for(int i = 0;i < 5;i++){
		uart1_putchar(GET_SIZE[i]);
    19b8:	20 21 00 ff 	andi r1,r1,0xff
    19bc:	35 6b 00 04 	addi r11,r11,4
    19c0:	fb ff fd be 	calli 10b8 <uart1_putchar>
	for(int i = 0;i < 5;i++){
    19c4:	45 6c 00 06 	be r11,r12,19dc <_ZN3cam7getsizeEv+0x50>
    19c8:	29 61 00 00 	lw r1,(r11+0)
    19cc:	35 6b 00 04 	addi r11,r11,4
		uart1_putchar(GET_SIZE[i]);
    19d0:	20 21 00 ff 	andi r1,r1,0xff
    19d4:	fb ff fd b9 	calli 10b8 <uart1_putchar>
	for(int i = 0;i < 5;i++){
    19d8:	5d 6c ff fc 	bne r11,r12,19c8 <_ZN3cam7getsizeEv+0x3c>
    19dc:	37 8b 00 14 	addi r11,sp,20
    19e0:	37 8c 00 38 	addi r12,sp,56
	}

	for(int i = 0;i < 9;i++){
		Z[i] = uart1_getchar();
    19e4:	fb ff fd ab 	calli 1090 <uart1_getchar>
    19e8:	59 61 00 00 	sw (r11+0),r1
    19ec:	35 6b 00 04 	addi r11,r11,4
	for(int i = 0;i < 9;i++){
    19f0:	5d 6c ff fd 	bne r11,r12,19e4 <_ZN3cam7getsizeEv+0x58>
	}

	if(Z[0] == 0x76 && Z[2] == 0x34){
    19f4:	2b 82 00 14 	lw r2,(sp+20)
    19f8:	34 01 00 76 	mvi r1,118
    19fc:	44 41 00 07 	be r2,r1,1a18 <_ZN3cam7getsizeEv+0x8c>
		xl = Z[8];

		uart_putchar(xh);
		uart_putchar(xl);
	}
};
    1a00:	2b 9d 00 04 	lw ra,(sp+4)
    1a04:	2b 8b 00 10 	lw r11,(sp+16)
    1a08:	2b 8c 00 0c 	lw r12,(sp+12)
    1a0c:	2b 8d 00 08 	lw r13,(sp+8)
    1a10:	37 9c 00 34 	addi sp,sp,52
    1a14:	c3 a0 00 00 	ret
	if(Z[0] == 0x76 && Z[2] == 0x34){
    1a18:	2b 82 00 1c 	lw r2,(sp+28)
    1a1c:	34 01 00 34 	mvi r1,52
    1a20:	5c 41 ff f8 	bne r2,r1,1a00 <_ZN3cam7getsizeEv+0x74>
		uart_putstr("Ok");
    1a24:	78 02 00 00 	mvhi r2,0x0
    1a28:	38 42 2c 4c 	ori r2,r2,0x2c4c
    1a2c:	28 41 00 00 	lw r1,(r2+0)
    1a30:	fb ff fd 89 	calli 1054 <uart_putstr>
		xh = Z[7];
    1a34:	2b 82 00 30 	lw r2,(sp+48)
		uart_putchar(xh);
    1a38:	20 41 00 ff 	andi r1,r2,0xff
		xh = Z[7];
    1a3c:	59 a2 00 00 	sw (r13+0),r2
		xl = Z[8];
    1a40:	2b 82 00 34 	lw r2,(sp+52)
    1a44:	59 a2 00 04 	sw (r13+4),r2
		uart_putchar(xh);
    1a48:	fb ff fd 79 	calli 102c <uart_putchar>
		uart_putchar(xl);
    1a4c:	41 a1 00 07 	lbu r1,(r13+7)
    1a50:	fb ff fd 77 	calli 102c <uart_putchar>
};
    1a54:	e3 ff ff eb 	bi 1a00 <_ZN3cam7getsizeEv+0x74>

00001a58 <_ZN3cam11sendpictureEv>:

void cam::sendpicture(){
    1a58:	37 9c ff a0 	addi sp,sp,-96
    1a5c:	5b 8b 00 18 	sw (sp+24),r11
    1a60:	5b 8c 00 14 	sw (sp+20),r12
    1a64:	5b 8d 00 10 	sw (sp+16),r13
    1a68:	5b 8e 00 0c 	sw (sp+12),r14
    1a6c:	5b 8f 00 08 	sw (sp+8),r15
    1a70:	5b 9d 00 04 	sw (sp+4),ra
    1a74:	78 02 00 00 	mvhi r2,0x0
    1a78:	38 42 2c 50 	ori r2,r2,0x2c50
    1a7c:	28 4b 00 00 	lw r11,(r2+0)
    1a80:	b8 20 68 00 	mv r13,r1
    1a84:	34 01 00 56 	mvi r1,86
    1a88:	35 6c 00 14 	addi r12,r11,20
	uint32_t X [9];
	char R1;
	//char R2;

	for(int i = 0;i < 5;i++){
		uart1_putchar(GET_SIZE[i]);
    1a8c:	20 21 00 ff 	andi r1,r1,0xff
    1a90:	35 6b 00 04 	addi r11,r11,4
    1a94:	fb ff fd 89 	calli 10b8 <uart1_putchar>
	for(int i = 0;i < 5;i++){
    1a98:	45 6c 00 06 	be r11,r12,1ab0 <_ZN3cam11sendpictureEv+0x58>
    1a9c:	29 61 00 00 	lw r1,(r11+0)
    1aa0:	35 6b 00 04 	addi r11,r11,4
		uart1_putchar(GET_SIZE[i]);
    1aa4:	20 21 00 ff 	andi r1,r1,0xff
    1aa8:	fb ff fd 84 	calli 10b8 <uart1_putchar>
	for(int i = 0;i < 5;i++){
    1aac:	5d 6c ff fc 	bne r11,r12,1a9c <_ZN3cam11sendpictureEv+0x44>
    1ab0:	37 8b 00 40 	addi r11,sp,64
    1ab4:	37 8c 00 64 	addi r12,sp,100
	}

	for(int i = 0;i < 9;i++){
		X[i] = uart1_getchar();
    1ab8:	fb ff fd 76 	calli 1090 <uart1_getchar>
    1abc:	59 61 00 00 	sw (r11+0),r1
    1ac0:	35 6b 00 04 	addi r11,r11,4
	for(int i = 0;i < 9;i++){
    1ac4:	5d 6c ff fd 	bne r11,r12,1ab8 <_ZN3cam11sendpictureEv+0x60>
	}

	if(X[0] == 0x76 && X[2] == 0x34){
    1ac8:	2b 82 00 40 	lw r2,(sp+64)
    1acc:	34 01 00 76 	mvi r1,118
    1ad0:	2b 8e 00 5c 	lw r14,(sp+92)
    1ad4:	2b 8f 00 60 	lw r15,(sp+96)
    1ad8:	44 41 00 2c 	be r2,r1,1b88 <_ZN3cam11sendpictureEv+0x130>
    1adc:	29 a1 00 00 	lw r1,(r13+0)
		xh = X[7];
		xl = X[8];
	}

	uart_putchar(xh);
    1ae0:	20 21 00 ff 	andi r1,r1,0xff
    1ae4:	fb ff fd 52 	calli 102c <uart_putchar>
    1ae8:	78 02 00 00 	mvhi r2,0x0
	uart_putchar(xl);
    1aec:	41 a1 00 07 	lbu r1,(r13+7)
    1af0:	38 42 2c 54 	ori r2,r2,0x2c54
    1af4:	28 4b 00 00 	lw r11,(r2+0)
    1af8:	fb ff fd 4d 	calli 102c <uart_putchar>

	fifo_reset();
    1afc:	fb ff fd 99 	calli 1160 <fifo_reset>
    1b00:	35 6c 00 30 	addi r12,r11,48
    1b04:	34 01 00 56 	mvi r1,86
    1b08:	e0 00 00 02 	bi 1b10 <_ZN3cam11sendpictureEv+0xb8>
    1b0c:	29 61 00 00 	lw r1,(r11+0)
    1b10:	35 6b 00 04 	addi r11,r11,4

	for(int i = 0;i < 12;i++){
		uart1_putchar(SEND_JPG[i]);
    1b14:	20 21 00 ff 	andi r1,r1,0xff
    1b18:	fb ff fd 68 	calli 10b8 <uart1_putchar>
	for(int i = 0;i < 12;i++){
    1b1c:	5d 8b ff fc 	bne r12,r11,1b0c <_ZN3cam11sendpictureEv+0xb4>

	}

	uart1_putchar(X[7]);
    1b20:	21 c1 00 ff 	andi r1,r14,0xff
    1b24:	fb ff fd 65 	calli 10b8 <uart1_putchar>
	uart1_putchar(X[8]);
    1b28:	21 e1 00 ff 	andi r1,r15,0xff
    1b2c:	fb ff fd 63 	calli 10b8 <uart1_putchar>
	uart1_putchar(0x00);
    1b30:	34 01 00 00 	mvi r1,0
    1b34:	fb ff fd 61 	calli 10b8 <uart1_putchar>
	uart1_putchar(0x0a);
    1b38:	34 01 00 0a 	mvi r1,10
    1b3c:	37 8d 00 1c 	addi r13,sp,28
    1b40:	fb ff fd 5e 	calli 10b8 <uart1_putchar>
    1b44:	37 8c 00 30 	addi r12,sp,48
    1b48:	b9 a0 58 00 	mv r11,r13

	for(int i = 0;i < 5;i++){
		Z[i] = uart1_getchar();
    1b4c:	fb ff fd 51 	calli 1090 <uart1_getchar>
    1b50:	59 61 00 00 	sw (r11+0),r1
    1b54:	35 6b 00 04 	addi r11,r11,4
	for(int i = 0;i < 5;i++){
    1b58:	5d 8b ff fd 	bne r12,r11,1b4c <_ZN3cam11sendpictureEv+0xf4>
	}

	if(Z[0] == 0x76 && Z[2] == 0x32){
    1b5c:	2b 82 00 1c 	lw r2,(sp+28)
    1b60:	34 01 00 76 	mvi r1,118
    1b64:	44 41 00 10 	be r2,r1,1ba4 <_ZN3cam11sendpictureEv+0x14c>
		uart_putstr("Sent");
		}
		
	}

};
    1b68:	2b 9d 00 04 	lw ra,(sp+4)
    1b6c:	2b 8b 00 18 	lw r11,(sp+24)
    1b70:	2b 8c 00 14 	lw r12,(sp+20)
    1b74:	2b 8d 00 10 	lw r13,(sp+16)
    1b78:	2b 8e 00 0c 	lw r14,(sp+12)
    1b7c:	2b 8f 00 08 	lw r15,(sp+8)
    1b80:	37 9c 00 60 	addi sp,sp,96
    1b84:	c3 a0 00 00 	ret
	if(X[0] == 0x76 && X[2] == 0x34){
    1b88:	2b 82 00 48 	lw r2,(sp+72)
    1b8c:	34 01 00 34 	mvi r1,52
    1b90:	5c 41 ff d3 	bne r2,r1,1adc <_ZN3cam11sendpictureEv+0x84>
		xh = X[7];
    1b94:	59 ae 00 00 	sw (r13+0),r14
		xl = X[8];
    1b98:	59 af 00 04 	sw (r13+4),r15
    1b9c:	b9 c0 08 00 	mv r1,r14
    1ba0:	e3 ff ff d0 	bi 1ae0 <_ZN3cam11sendpictureEv+0x88>
	if(Z[0] == 0x76 && Z[2] == 0x32){
    1ba4:	2b 82 00 24 	lw r2,(sp+36)
    1ba8:	34 01 00 32 	mvi r1,50
    1bac:	5c 41 ff ef 	bne r2,r1,1b68 <_ZN3cam11sendpictureEv+0x110>
		for(uint32_t i = 0;i < (X[7]*256 + X[8]);i++){
    1bb0:	3d cc 00 08 	sli r12,r14,8
    1bb4:	b5 8f 60 00 	add r12,r12,r15
    1bb8:	45 80 00 06 	be r12,r0,1bd0 <_ZN3cam11sendpictureEv+0x178>
    1bbc:	34 0e 00 00 	mvi r14,0
    1bc0:	35 ce 00 01 	addi r14,r14,1
			R1 = uart1_getchar();
    1bc4:	fb ff fd 33 	calli 1090 <uart1_getchar>
			uart_putchar(R1);
    1bc8:	fb ff fd 19 	calli 102c <uart_putchar>
		for(uint32_t i = 0;i < (X[7]*256 + X[8]);i++){
    1bcc:	5d 8e ff fd 	bne r12,r14,1bc0 <_ZN3cam11sendpictureEv+0x168>
			Z[i] = uart1_getchar();
    1bd0:	fb ff fd 30 	calli 1090 <uart1_getchar>
    1bd4:	59 a1 00 00 	sw (r13+0),r1
    1bd8:	35 ad 00 04 	addi r13,r13,4
		for(int i = 0;i < 5;i++){
    1bdc:	5d 6d ff fd 	bne r11,r13,1bd0 <_ZN3cam11sendpictureEv+0x178>
		if(Z[0] == 0x76 && Z[2] == 0x32){
    1be0:	2b 82 00 1c 	lw r2,(sp+28)
    1be4:	34 01 00 76 	mvi r1,118
    1be8:	5c 41 ff e0 	bne r2,r1,1b68 <_ZN3cam11sendpictureEv+0x110>
    1bec:	2b 82 00 24 	lw r2,(sp+36)
    1bf0:	34 01 00 32 	mvi r1,50
    1bf4:	5c 41 ff dd 	bne r2,r1,1b68 <_ZN3cam11sendpictureEv+0x110>
		uart_putstr("Sent");
    1bf8:	78 02 00 00 	mvhi r2,0x0
    1bfc:	38 42 2c 58 	ori r2,r2,0x2c58
    1c00:	28 41 00 00 	lw r1,(r2+0)
    1c04:	fb ff fd 14 	calli 1054 <uart_putstr>
};
    1c08:	e3 ff ff d8 	bi 1b68 <_ZN3cam11sendpictureEv+0x110>

00001c0c <_ZN3cam10stoptakingEv>:

void cam::stoptaking(){
    1c0c:	37 9c ff e0 	addi sp,sp,-32
    1c10:	5b 8b 00 0c 	sw (sp+12),r11
    1c14:	5b 8c 00 08 	sw (sp+8),r12
    1c18:	5b 9d 00 04 	sw (sp+4),ra
    1c1c:	78 01 00 00 	mvhi r1,0x0
    1c20:	38 21 2c 5c 	ori r1,r1,0x2c5c
    1c24:	28 2b 00 00 	lw r11,(r1+0)
    1c28:	34 01 00 56 	mvi r1,86

	uint32_t Z [5];

	for(int i = 0;i < 5;i++){
		uart1_putchar(STOP_TAKING_PICS[i]);
    1c2c:	20 21 00 ff 	andi r1,r1,0xff
    1c30:	35 6c 00 14 	addi r12,r11,20
    1c34:	35 6b 00 04 	addi r11,r11,4
    1c38:	fb ff fd 20 	calli 10b8 <uart1_putchar>
	for(int i = 0;i < 5;i++){
    1c3c:	45 6c 00 06 	be r11,r12,1c54 <_ZN3cam10stoptakingEv+0x48>
    1c40:	29 61 00 00 	lw r1,(r11+0)
    1c44:	35 6b 00 04 	addi r11,r11,4
		uart1_putchar(STOP_TAKING_PICS[i]);
    1c48:	20 21 00 ff 	andi r1,r1,0xff
    1c4c:	fb ff fd 1b 	calli 10b8 <uart1_putchar>
	for(int i = 0;i < 5;i++){
    1c50:	5d 6c ff fc 	bne r11,r12,1c40 <_ZN3cam10stoptakingEv+0x34>
    1c54:	37 8b 00 10 	addi r11,sp,16
    1c58:	37 8c 00 24 	addi r12,sp,36
	}

	for(int i = 0;i < 5;i++){
		Z[i] = uart1_getchar();
    1c5c:	fb ff fd 0d 	calli 1090 <uart1_getchar>
    1c60:	59 61 00 00 	sw (r11+0),r1
    1c64:	35 6b 00 04 	addi r11,r11,4
	for(int i = 0;i < 5;i++){
    1c68:	5d 6c ff fd 	bne r11,r12,1c5c <_ZN3cam10stoptakingEv+0x50>
	}


	if(Z[0] == 0x76 && Z[2] == 0x36){
    1c6c:	2b 82 00 10 	lw r2,(sp+16)
    1c70:	34 01 00 76 	mvi r1,118
    1c74:	44 41 00 06 	be r2,r1,1c8c <_ZN3cam10stoptakingEv+0x80>
		uart_putstr("Finish");
	}

};
    1c78:	2b 9d 00 04 	lw ra,(sp+4)
    1c7c:	2b 8b 00 0c 	lw r11,(sp+12)
    1c80:	2b 8c 00 08 	lw r12,(sp+8)
    1c84:	37 9c 00 20 	addi sp,sp,32
    1c88:	c3 a0 00 00 	ret
	if(Z[0] == 0x76 && Z[2] == 0x36){
    1c8c:	2b 82 00 18 	lw r2,(sp+24)
    1c90:	34 01 00 36 	mvi r1,54
    1c94:	5c 41 ff f9 	bne r2,r1,1c78 <_ZN3cam10stoptakingEv+0x6c>
		uart_putstr("Finish");
    1c98:	78 02 00 00 	mvhi r2,0x0
    1c9c:	38 42 2c 60 	ori r2,r2,0x2c60
    1ca0:	28 41 00 00 	lw r1,(r2+0)
    1ca4:	fb ff fc ec 	calli 1054 <uart_putstr>
};
    1ca8:	e3 ff ff f4 	bi 1c78 <_ZN3cam10stoptakingEv+0x6c>

00001cac <_ZN4face2R1E3armS0_S0_S0_>:

	Cao1 = Cao;
	Cao = Ca;
};

void face::R1(arm a, arm b, arm c, arm d){
    1cac:	37 9c ff fc 	addi sp,sp,-4
    1cb0:	5b 9d 00 04 	sw (sp+4),ra
	a.atras0();
    1cb4:	37 81 00 08 	addi r1,sp,8
    1cb8:	fb ff fe de 	calli 1830 <_ZN3arm6atras0Ev>
	c.atras0();
    1cbc:	37 81 00 48 	addi r1,sp,72
    1cc0:	fb ff fe dc 	calli 1830 <_ZN3arm6atras0Ev>
	msleep(1000);
    1cc4:	34 01 03 e8 	mvi r1,1000
    1cc8:	fb ff fc 9d 	calli f3c <msleep>
	b.derecha0();
    1ccc:	37 81 00 28 	addi r1,sp,40
    1cd0:	fb ff fe c0 	calli 17d0 <_ZN3arm8derecha0Ev>
	d.izquierda0();
    1cd4:	37 81 00 68 	addi r1,sp,104
    1cd8:	fb ff fe c6 	calli 17f0 <_ZN3arm10izquierda0Ev>
	msleep(1000);
    1cdc:	34 01 03 e8 	mvi r1,1000
    1ce0:	fb ff fc 97 	calli f3c <msleep>
	a.adelante0();
    1ce4:	37 81 00 08 	addi r1,sp,8
    1ce8:	fb ff fe da 	calli 1850 <_ZN3arm9adelante0Ev>
	c.adelante0();
    1cec:	37 81 00 48 	addi r1,sp,72
    1cf0:	fb ff fe d8 	calli 1850 <_ZN3arm9adelante0Ev>
	msleep(1000);
    1cf4:	34 01 03 e8 	mvi r1,1000
    1cf8:	fb ff fc 91 	calli f3c <msleep>
	b.atras0();
    1cfc:	37 81 00 28 	addi r1,sp,40
    1d00:	fb ff fe cc 	calli 1830 <_ZN3arm6atras0Ev>
	d.atras0();
    1d04:	37 81 00 68 	addi r1,sp,104
    1d08:	fb ff fe ca 	calli 1830 <_ZN3arm6atras0Ev>
	msleep(1000);
    1d0c:	34 01 03 e8 	mvi r1,1000
    1d10:	fb ff fc 8b 	calli f3c <msleep>
	b.medio0();
    1d14:	37 81 00 28 	addi r1,sp,40
    1d18:	fb ff fe be 	calli 1810 <_ZN3arm6medio0Ev>
	d.medio0();
    1d1c:	37 81 00 68 	addi r1,sp,104
    1d20:	fb ff fe bc 	calli 1810 <_ZN3arm6medio0Ev>
	msleep(1000);
    1d24:	34 01 03 e8 	mvi r1,1000
    1d28:	fb ff fc 85 	calli f3c <msleep>
	b.adelante0();
    1d2c:	37 81 00 28 	addi r1,sp,40
    1d30:	fb ff fe c8 	calli 1850 <_ZN3arm9adelante0Ev>
	d.adelante0();
    1d34:	37 81 00 68 	addi r1,sp,104
    1d38:	fb ff fe c6 	calli 1850 <_ZN3arm9adelante0Ev>
	msleep(1000);
    1d3c:	34 01 03 e8 	mvi r1,1000
    1d40:	fb ff fc 7f 	calli f3c <msleep>
};
    1d44:	2b 9d 00 04 	lw ra,(sp+4)
    1d48:	37 9c 00 04 	addi sp,sp,4
    1d4c:	c3 a0 00 00 	ret

00001d50 <_ZN4face2L1E3armS0_S0_S0_>:

void face::L1(arm a, arm b, arm c, arm d){
    1d50:	37 9c ff fc 	addi sp,sp,-4
    1d54:	5b 9d 00 04 	sw (sp+4),ra
	a.atras0();
    1d58:	37 81 00 08 	addi r1,sp,8
    1d5c:	fb ff fe b5 	calli 1830 <_ZN3arm6atras0Ev>
	c.atras0();
    1d60:	37 81 00 48 	addi r1,sp,72
    1d64:	fb ff fe b3 	calli 1830 <_ZN3arm6atras0Ev>
	msleep(1000);
    1d68:	34 01 03 e8 	mvi r1,1000
    1d6c:	fb ff fc 74 	calli f3c <msleep>
	b.izquierda0();
    1d70:	37 81 00 28 	addi r1,sp,40
    1d74:	fb ff fe 9f 	calli 17f0 <_ZN3arm10izquierda0Ev>
	d.derecha0();
    1d78:	37 81 00 68 	addi r1,sp,104
    1d7c:	fb ff fe 95 	calli 17d0 <_ZN3arm8derecha0Ev>
	msleep(1000);
    1d80:	34 01 03 e8 	mvi r1,1000
    1d84:	fb ff fc 6e 	calli f3c <msleep>
	a.adelante0();
    1d88:	37 81 00 08 	addi r1,sp,8
    1d8c:	fb ff fe b1 	calli 1850 <_ZN3arm9adelante0Ev>
	c.adelante0();
    1d90:	37 81 00 48 	addi r1,sp,72
    1d94:	fb ff fe af 	calli 1850 <_ZN3arm9adelante0Ev>
	msleep(1000);
    1d98:	34 01 03 e8 	mvi r1,1000
    1d9c:	fb ff fc 68 	calli f3c <msleep>
	b.atras0();
    1da0:	37 81 00 28 	addi r1,sp,40
    1da4:	fb ff fe a3 	calli 1830 <_ZN3arm6atras0Ev>
	d.atras0();
    1da8:	37 81 00 68 	addi r1,sp,104
    1dac:	fb ff fe a1 	calli 1830 <_ZN3arm6atras0Ev>
	msleep(1000);
    1db0:	34 01 03 e8 	mvi r1,1000
    1db4:	fb ff fc 62 	calli f3c <msleep>
	b.medio0();
    1db8:	37 81 00 28 	addi r1,sp,40
    1dbc:	fb ff fe 95 	calli 1810 <_ZN3arm6medio0Ev>
	d.medio0();
    1dc0:	37 81 00 68 	addi r1,sp,104
    1dc4:	fb ff fe 93 	calli 1810 <_ZN3arm6medio0Ev>
	msleep(1000);
    1dc8:	34 01 03 e8 	mvi r1,1000
    1dcc:	fb ff fc 5c 	calli f3c <msleep>
	b.adelante0();
    1dd0:	37 81 00 28 	addi r1,sp,40
    1dd4:	fb ff fe 9f 	calli 1850 <_ZN3arm9adelante0Ev>
	d.adelante0();
    1dd8:	37 81 00 68 	addi r1,sp,104
    1ddc:	fb ff fe 9d 	calli 1850 <_ZN3arm9adelante0Ev>
	msleep(1000);
    1de0:	34 01 03 e8 	mvi r1,1000
    1de4:	fb ff fc 56 	calli f3c <msleep>
};
    1de8:	2b 9d 00 04 	lw ra,(sp+4)
    1dec:	37 9c 00 04 	addi sp,sp,4
    1df0:	c3 a0 00 00 	ret

00001df4 <_ZN4face3R11E3armS0_S0_S0_>:

void face::R11(arm a, arm b, arm c, arm d){
    1df4:	37 9c ff fc 	addi sp,sp,-4
    1df8:	5b 9d 00 04 	sw (sp+4),ra
	b.atras0();
    1dfc:	37 81 00 28 	addi r1,sp,40
    1e00:	fb ff fe 8c 	calli 1830 <_ZN3arm6atras0Ev>
	d.atras0();
    1e04:	37 81 00 68 	addi r1,sp,104
    1e08:	fb ff fe 8a 	calli 1830 <_ZN3arm6atras0Ev>
	msleep(1000);
    1e0c:	34 01 03 e8 	mvi r1,1000
    1e10:	fb ff fc 4b 	calli f3c <msleep>
	a.derecha0();
    1e14:	37 81 00 08 	addi r1,sp,8
    1e18:	fb ff fe 6e 	calli 17d0 <_ZN3arm8derecha0Ev>
	c.izquierda0();
    1e1c:	37 81 00 48 	addi r1,sp,72
    1e20:	fb ff fe 74 	calli 17f0 <_ZN3arm10izquierda0Ev>
	msleep(1000);
    1e24:	34 01 03 e8 	mvi r1,1000
    1e28:	fb ff fc 45 	calli f3c <msleep>
	b.adelante0();
    1e2c:	37 81 00 28 	addi r1,sp,40
    1e30:	fb ff fe 88 	calli 1850 <_ZN3arm9adelante0Ev>
	d.adelante0();
    1e34:	37 81 00 68 	addi r1,sp,104
    1e38:	fb ff fe 86 	calli 1850 <_ZN3arm9adelante0Ev>
	msleep(1000);
    1e3c:	34 01 03 e8 	mvi r1,1000
    1e40:	fb ff fc 3f 	calli f3c <msleep>
	a.atras0();
    1e44:	37 81 00 08 	addi r1,sp,8
    1e48:	fb ff fe 7a 	calli 1830 <_ZN3arm6atras0Ev>
	c.atras0();
    1e4c:	37 81 00 48 	addi r1,sp,72
    1e50:	fb ff fe 78 	calli 1830 <_ZN3arm6atras0Ev>
	msleep(1000);
    1e54:	34 01 03 e8 	mvi r1,1000
    1e58:	fb ff fc 39 	calli f3c <msleep>
	a.medio0();
    1e5c:	37 81 00 08 	addi r1,sp,8
    1e60:	fb ff fe 6c 	calli 1810 <_ZN3arm6medio0Ev>
	c.medio0();
    1e64:	37 81 00 48 	addi r1,sp,72
    1e68:	fb ff fe 6a 	calli 1810 <_ZN3arm6medio0Ev>
	msleep(1000);
    1e6c:	34 01 03 e8 	mvi r1,1000
    1e70:	fb ff fc 33 	calli f3c <msleep>
	a.adelante0();
    1e74:	37 81 00 08 	addi r1,sp,8
    1e78:	fb ff fe 76 	calli 1850 <_ZN3arm9adelante0Ev>
	c.adelante0();
    1e7c:	37 81 00 48 	addi r1,sp,72
    1e80:	fb ff fe 74 	calli 1850 <_ZN3arm9adelante0Ev>
	msleep(1000);
    1e84:	34 01 03 e8 	mvi r1,1000
    1e88:	fb ff fc 2d 	calli f3c <msleep>
};
    1e8c:	2b 9d 00 04 	lw ra,(sp+4)
    1e90:	37 9c 00 04 	addi sp,sp,4
    1e94:	c3 a0 00 00 	ret

00001e98 <_ZN4face3L11E3armS0_S0_S0_>:

void face::L11(arm a, arm b, arm c, arm d){
    1e98:	37 9c ff fc 	addi sp,sp,-4
    1e9c:	5b 9d 00 04 	sw (sp+4),ra
	b.atras0();
    1ea0:	37 81 00 28 	addi r1,sp,40
    1ea4:	fb ff fe 63 	calli 1830 <_ZN3arm6atras0Ev>
	d.atras0();
    1ea8:	37 81 00 68 	addi r1,sp,104
    1eac:	fb ff fe 61 	calli 1830 <_ZN3arm6atras0Ev>
	msleep(1000);
    1eb0:	34 01 03 e8 	mvi r1,1000
    1eb4:	fb ff fc 22 	calli f3c <msleep>
	a.izquierda0();
    1eb8:	37 81 00 08 	addi r1,sp,8
    1ebc:	fb ff fe 4d 	calli 17f0 <_ZN3arm10izquierda0Ev>
	c.derecha0();
    1ec0:	37 81 00 48 	addi r1,sp,72
    1ec4:	fb ff fe 43 	calli 17d0 <_ZN3arm8derecha0Ev>
	msleep(1000);
    1ec8:	34 01 03 e8 	mvi r1,1000
    1ecc:	fb ff fc 1c 	calli f3c <msleep>
	b.adelante0();
    1ed0:	37 81 00 28 	addi r1,sp,40
    1ed4:	fb ff fe 5f 	calli 1850 <_ZN3arm9adelante0Ev>
	d.adelante0();
    1ed8:	37 81 00 68 	addi r1,sp,104
    1edc:	fb ff fe 5d 	calli 1850 <_ZN3arm9adelante0Ev>
	msleep(1000);
    1ee0:	34 01 03 e8 	mvi r1,1000
    1ee4:	fb ff fc 16 	calli f3c <msleep>
	a.atras0();
    1ee8:	37 81 00 08 	addi r1,sp,8
    1eec:	fb ff fe 51 	calli 1830 <_ZN3arm6atras0Ev>
	c.atras0();
    1ef0:	37 81 00 48 	addi r1,sp,72
    1ef4:	fb ff fe 4f 	calli 1830 <_ZN3arm6atras0Ev>
	msleep(1000);
    1ef8:	34 01 03 e8 	mvi r1,1000
    1efc:	fb ff fc 10 	calli f3c <msleep>
	a.medio0();
    1f00:	37 81 00 08 	addi r1,sp,8
    1f04:	fb ff fe 43 	calli 1810 <_ZN3arm6medio0Ev>
	c.medio0();
    1f08:	37 81 00 48 	addi r1,sp,72
    1f0c:	fb ff fe 41 	calli 1810 <_ZN3arm6medio0Ev>
	msleep(1000);
    1f10:	34 01 03 e8 	mvi r1,1000
    1f14:	fb ff fc 0a 	calli f3c <msleep>
	a.adelante0();
    1f18:	37 81 00 08 	addi r1,sp,8
    1f1c:	fb ff fe 4d 	calli 1850 <_ZN3arm9adelante0Ev>
	c.adelante0();
    1f20:	37 81 00 48 	addi r1,sp,72
    1f24:	fb ff fe 4b 	calli 1850 <_ZN3arm9adelante0Ev>
	msleep(1000);
    1f28:	34 01 03 e8 	mvi r1,1000
    1f2c:	fb ff fc 04 	calli f3c <msleep>
    1f30:	2b 9d 00 04 	lw ra,(sp+4)
    1f34:	37 9c 00 04 	addi sp,sp,4
    1f38:	c3 a0 00 00 	ret

00001f3c <_ZN4face4FaceE3armS0_S0_S0_j>:
void face::Face(arm a, arm b, arm c, arm d, uint32_t Ca){
    1f3c:	37 9c ff 6c 	addi sp,sp,-148
    1f40:	5b 8b 00 94 	sw (sp+148),r11
    1f44:	5b 8c 00 90 	sw (sp+144),r12
    1f48:	5b 8d 00 8c 	sw (sp+140),r13
    1f4c:	5b 8e 00 88 	sw (sp+136),r14
    1f50:	5b 9d 00 84 	sw (sp+132),ra
	if(Ca != Cao){
    1f54:	28 22 00 20 	lw r2,(r1+32)
void face::Face(arm a, arm b, arm c, arm d, uint32_t Ca){
    1f58:	2b 8c 01 18 	lw r12,(sp+280)
    1f5c:	b8 20 58 00 	mv r11,r1
	if(Ca != Cao){
    1f60:	b8 40 18 00 	mv r3,r2
    1f64:	44 4c 00 96 	be r2,r12,21bc <_ZN4face4FaceE3armS0_S0_S0_j+0x280>
		if(Ca < 5){
    1f68:	34 04 00 04 	mvi r4,4
    1f6c:	55 84 01 35 	bgu r12,r4,2440 <_ZN4face4FaceE3armS0_S0_S0_j+0x504>
			if(Cao < 5){
    1f70:	54 44 00 e5 	bgu r2,r4,2304 <_ZN4face4FaceE3armS0_S0_S0_j+0x3c8>
					for(uint32_t i=0; i<(Ca-Cao); i++){
    1f74:	34 0d 00 00 	mvi r13,0
				if(Ca > Cao){
    1f78:	50 4c 00 9a 	bgeu r2,r12,21e0 <_ZN4face4FaceE3armS0_S0_S0_j+0x2a4>
						R1(a,b,c,d);
    1f7c:	2b 81 00 f8 	lw r1,(sp+248)
					for(uint32_t i=0; i<(Ca-Cao); i++){
    1f80:	35 ad 00 01 	addi r13,r13,1
						R1(a,b,c,d);
    1f84:	5b 81 00 64 	sw (sp+100),r1
    1f88:	2b 81 00 fc 	lw r1,(sp+252)
    1f8c:	5b 81 00 68 	sw (sp+104),r1
    1f90:	2b 81 01 00 	lw r1,(sp+256)
    1f94:	5b 81 00 6c 	sw (sp+108),r1
    1f98:	2b 81 01 04 	lw r1,(sp+260)
    1f9c:	5b 81 00 70 	sw (sp+112),r1
    1fa0:	2b 81 01 08 	lw r1,(sp+264)
    1fa4:	5b 81 00 74 	sw (sp+116),r1
    1fa8:	2b 81 01 0c 	lw r1,(sp+268)
    1fac:	5b 81 00 78 	sw (sp+120),r1
    1fb0:	2b 81 01 10 	lw r1,(sp+272)
    1fb4:	5b 81 00 7c 	sw (sp+124),r1
    1fb8:	2b 81 01 14 	lw r1,(sp+276)
    1fbc:	5b 81 00 80 	sw (sp+128),r1
    1fc0:	2b 81 00 d8 	lw r1,(sp+216)
    1fc4:	5b 81 00 44 	sw (sp+68),r1
    1fc8:	2b 81 00 dc 	lw r1,(sp+220)
    1fcc:	5b 81 00 48 	sw (sp+72),r1
    1fd0:	2b 81 00 e0 	lw r1,(sp+224)
    1fd4:	5b 81 00 4c 	sw (sp+76),r1
    1fd8:	2b 81 00 e4 	lw r1,(sp+228)
    1fdc:	5b 81 00 50 	sw (sp+80),r1
    1fe0:	2b 81 00 e8 	lw r1,(sp+232)
    1fe4:	5b 81 00 54 	sw (sp+84),r1
    1fe8:	2b 81 00 ec 	lw r1,(sp+236)
    1fec:	5b 81 00 58 	sw (sp+88),r1
    1ff0:	2b 81 00 f0 	lw r1,(sp+240)
    1ff4:	5b 81 00 5c 	sw (sp+92),r1
    1ff8:	2b 81 00 f4 	lw r1,(sp+244)
    1ffc:	5b 81 00 60 	sw (sp+96),r1
    2000:	2b 82 00 b8 	lw r2,(sp+184)
    2004:	b9 60 08 00 	mv r1,r11
    2008:	5b 82 00 24 	sw (sp+36),r2
    200c:	2b 82 00 bc 	lw r2,(sp+188)
    2010:	5b 82 00 28 	sw (sp+40),r2
    2014:	2b 82 00 c0 	lw r2,(sp+192)
    2018:	5b 82 00 2c 	sw (sp+44),r2
    201c:	2b 82 00 c4 	lw r2,(sp+196)
    2020:	5b 82 00 30 	sw (sp+48),r2
    2024:	2b 82 00 c8 	lw r2,(sp+200)
    2028:	5b 82 00 34 	sw (sp+52),r2
    202c:	2b 82 00 cc 	lw r2,(sp+204)
    2030:	5b 82 00 38 	sw (sp+56),r2
    2034:	2b 82 00 d0 	lw r2,(sp+208)
    2038:	5b 82 00 3c 	sw (sp+60),r2
    203c:	2b 82 00 d4 	lw r2,(sp+212)
    2040:	5b 82 00 40 	sw (sp+64),r2
    2044:	2b 82 00 98 	lw r2,(sp+152)
    2048:	5b 82 00 04 	sw (sp+4),r2
    204c:	2b 82 00 9c 	lw r2,(sp+156)
    2050:	5b 82 00 08 	sw (sp+8),r2
    2054:	2b 82 00 a0 	lw r2,(sp+160)
    2058:	5b 82 00 0c 	sw (sp+12),r2
    205c:	2b 82 00 a4 	lw r2,(sp+164)
    2060:	5b 82 00 10 	sw (sp+16),r2
    2064:	2b 82 00 a8 	lw r2,(sp+168)
    2068:	5b 82 00 14 	sw (sp+20),r2
    206c:	2b 82 00 ac 	lw r2,(sp+172)
    2070:	5b 82 00 18 	sw (sp+24),r2
    2074:	2b 82 00 b0 	lw r2,(sp+176)
    2078:	5b 82 00 1c 	sw (sp+28),r2
    207c:	2b 82 00 b4 	lw r2,(sp+180)
    2080:	5b 82 00 20 	sw (sp+32),r2
    2084:	fb ff ff 0a 	calli 1cac <_ZN4face2R1E3armS0_S0_S0_>
					for(uint32_t i=0; i<(Ca-Cao); i++){
    2088:	29 62 00 20 	lw r2,(r11+32)
    208c:	c9 82 08 00 	sub r1,r12,r2
    2090:	b8 40 18 00 	mv r3,r2
    2094:	51 a1 00 9a 	bgeu r13,r1,22fc <_ZN4face4FaceE3armS0_S0_S0_j+0x3c0>
    2098:	e3 ff ff b9 	bi 1f7c <_ZN4face4FaceE3armS0_S0_S0_j+0x40>
					for(uint32_t i=0; i<(Cao1-Ca); i++){
    209c:	44 2c 00 47 	be r1,r12,21b8 <_ZN4face4FaceE3armS0_S0_S0_j+0x27c>
						L1(a,b,c,d);
    20a0:	2b 81 00 f8 	lw r1,(sp+248)
					for(uint32_t i=0; i<(Cao1-Ca); i++){
    20a4:	35 ad 00 01 	addi r13,r13,1
						L1(a,b,c,d);
    20a8:	5b 81 00 64 	sw (sp+100),r1
    20ac:	2b 81 00 fc 	lw r1,(sp+252)
    20b0:	5b 81 00 68 	sw (sp+104),r1
    20b4:	2b 81 01 00 	lw r1,(sp+256)
    20b8:	5b 81 00 6c 	sw (sp+108),r1
    20bc:	2b 81 01 04 	lw r1,(sp+260)
    20c0:	5b 81 00 70 	sw (sp+112),r1
    20c4:	2b 81 01 08 	lw r1,(sp+264)
    20c8:	5b 81 00 74 	sw (sp+116),r1
    20cc:	2b 81 01 0c 	lw r1,(sp+268)
    20d0:	5b 81 00 78 	sw (sp+120),r1
    20d4:	2b 81 01 10 	lw r1,(sp+272)
    20d8:	5b 81 00 7c 	sw (sp+124),r1
    20dc:	2b 81 01 14 	lw r1,(sp+276)
    20e0:	5b 81 00 80 	sw (sp+128),r1
    20e4:	2b 81 00 d8 	lw r1,(sp+216)
    20e8:	5b 81 00 44 	sw (sp+68),r1
    20ec:	2b 81 00 dc 	lw r1,(sp+220)
    20f0:	5b 81 00 48 	sw (sp+72),r1
    20f4:	2b 81 00 e0 	lw r1,(sp+224)
    20f8:	5b 81 00 4c 	sw (sp+76),r1
    20fc:	2b 81 00 e4 	lw r1,(sp+228)
    2100:	5b 81 00 50 	sw (sp+80),r1
    2104:	2b 81 00 e8 	lw r1,(sp+232)
    2108:	5b 81 00 54 	sw (sp+84),r1
    210c:	2b 81 00 ec 	lw r1,(sp+236)
    2110:	5b 81 00 58 	sw (sp+88),r1
    2114:	2b 81 00 f0 	lw r1,(sp+240)
    2118:	5b 81 00 5c 	sw (sp+92),r1
    211c:	2b 81 00 f4 	lw r1,(sp+244)
    2120:	5b 81 00 60 	sw (sp+96),r1
    2124:	2b 82 00 b8 	lw r2,(sp+184)
    2128:	b9 60 08 00 	mv r1,r11
    212c:	5b 82 00 24 	sw (sp+36),r2
    2130:	2b 82 00 bc 	lw r2,(sp+188)
    2134:	5b 82 00 28 	sw (sp+40),r2
    2138:	2b 82 00 c0 	lw r2,(sp+192)
    213c:	5b 82 00 2c 	sw (sp+44),r2
    2140:	2b 82 00 c4 	lw r2,(sp+196)
    2144:	5b 82 00 30 	sw (sp+48),r2
    2148:	2b 82 00 c8 	lw r2,(sp+200)
    214c:	5b 82 00 34 	sw (sp+52),r2
    2150:	2b 82 00 cc 	lw r2,(sp+204)
    2154:	5b 82 00 38 	sw (sp+56),r2
    2158:	2b 82 00 d0 	lw r2,(sp+208)
    215c:	5b 82 00 3c 	sw (sp+60),r2
    2160:	2b 82 00 d4 	lw r2,(sp+212)
    2164:	5b 82 00 40 	sw (sp+64),r2
    2168:	2b 82 00 98 	lw r2,(sp+152)
    216c:	5b 82 00 04 	sw (sp+4),r2
    2170:	2b 82 00 9c 	lw r2,(sp+156)
    2174:	5b 82 00 08 	sw (sp+8),r2
    2178:	2b 82 00 a0 	lw r2,(sp+160)
    217c:	5b 82 00 0c 	sw (sp+12),r2
    2180:	2b 82 00 a4 	lw r2,(sp+164)
    2184:	5b 82 00 10 	sw (sp+16),r2
    2188:	2b 82 00 a8 	lw r2,(sp+168)
    218c:	5b 82 00 14 	sw (sp+20),r2
    2190:	2b 82 00 ac 	lw r2,(sp+172)
    2194:	5b 82 00 18 	sw (sp+24),r2
    2198:	2b 82 00 b0 	lw r2,(sp+176)
    219c:	5b 82 00 1c 	sw (sp+28),r2
    21a0:	2b 82 00 b4 	lw r2,(sp+180)
    21a4:	5b 82 00 20 	sw (sp+32),r2
    21a8:	fb ff fe ea 	calli 1d50 <_ZN4face2L1E3armS0_S0_S0_>
					for(uint32_t i=0; i<(Cao1-Ca); i++){
    21ac:	29 61 00 24 	lw r1,(r11+36)
    21b0:	c8 2c 08 00 	sub r1,r1,r12
    21b4:	54 2d ff bb 	bgu r1,r13,20a0 <_ZN4face4FaceE3armS0_S0_S0_j+0x164>
    21b8:	29 63 00 20 	lw r3,(r11+32)
	Cao1 = Cao;
    21bc:	59 63 00 24 	sw (r11+36),r3
	Cao = Ca;
    21c0:	59 6c 00 20 	sw (r11+32),r12
};
    21c4:	2b 9d 00 84 	lw ra,(sp+132)
    21c8:	2b 8b 00 94 	lw r11,(sp+148)
    21cc:	2b 8c 00 90 	lw r12,(sp+144)
    21d0:	2b 8d 00 8c 	lw r13,(sp+140)
    21d4:	2b 8e 00 88 	lw r14,(sp+136)
    21d8:	37 9c 00 94 	addi sp,sp,148
    21dc:	c3 a0 00 00 	ret
						L1(a,b,c,d);
    21e0:	2b 81 00 f8 	lw r1,(sp+248)
					for(uint32_t i=0; i<(Cao-Ca); i++){
    21e4:	35 ad 00 01 	addi r13,r13,1
						L1(a,b,c,d);
    21e8:	5b 81 00 64 	sw (sp+100),r1
    21ec:	2b 81 00 fc 	lw r1,(sp+252)
    21f0:	5b 81 00 68 	sw (sp+104),r1
    21f4:	2b 81 01 00 	lw r1,(sp+256)
    21f8:	5b 81 00 6c 	sw (sp+108),r1
    21fc:	2b 81 01 04 	lw r1,(sp+260)
    2200:	5b 81 00 70 	sw (sp+112),r1
    2204:	2b 81 01 08 	lw r1,(sp+264)
    2208:	5b 81 00 74 	sw (sp+116),r1
    220c:	2b 81 01 0c 	lw r1,(sp+268)
    2210:	5b 81 00 78 	sw (sp+120),r1
    2214:	2b 81 01 10 	lw r1,(sp+272)
    2218:	5b 81 00 7c 	sw (sp+124),r1
    221c:	2b 81 01 14 	lw r1,(sp+276)
    2220:	5b 81 00 80 	sw (sp+128),r1
    2224:	2b 81 00 d8 	lw r1,(sp+216)
    2228:	5b 81 00 44 	sw (sp+68),r1
    222c:	2b 81 00 dc 	lw r1,(sp+220)
    2230:	5b 81 00 48 	sw (sp+72),r1
    2234:	2b 81 00 e0 	lw r1,(sp+224)
    2238:	5b 81 00 4c 	sw (sp+76),r1
    223c:	2b 81 00 e4 	lw r1,(sp+228)
    2240:	5b 81 00 50 	sw (sp+80),r1
    2244:	2b 81 00 e8 	lw r1,(sp+232)
    2248:	5b 81 00 54 	sw (sp+84),r1
    224c:	2b 81 00 ec 	lw r1,(sp+236)
    2250:	5b 81 00 58 	sw (sp+88),r1
    2254:	2b 81 00 f0 	lw r1,(sp+240)
    2258:	5b 81 00 5c 	sw (sp+92),r1
    225c:	2b 81 00 f4 	lw r1,(sp+244)
    2260:	5b 81 00 60 	sw (sp+96),r1
    2264:	2b 82 00 b8 	lw r2,(sp+184)
    2268:	b9 60 08 00 	mv r1,r11
    226c:	5b 82 00 24 	sw (sp+36),r2
    2270:	2b 82 00 bc 	lw r2,(sp+188)
    2274:	5b 82 00 28 	sw (sp+40),r2
    2278:	2b 82 00 c0 	lw r2,(sp+192)
    227c:	5b 82 00 2c 	sw (sp+44),r2
    2280:	2b 82 00 c4 	lw r2,(sp+196)
    2284:	5b 82 00 30 	sw (sp+48),r2
    2288:	2b 82 00 c8 	lw r2,(sp+200)
    228c:	5b 82 00 34 	sw (sp+52),r2
    2290:	2b 82 00 cc 	lw r2,(sp+204)
    2294:	5b 82 00 38 	sw (sp+56),r2
    2298:	2b 82 00 d0 	lw r2,(sp+208)
    229c:	5b 82 00 3c 	sw (sp+60),r2
    22a0:	2b 82 00 d4 	lw r2,(sp+212)
    22a4:	5b 82 00 40 	sw (sp+64),r2
    22a8:	2b 82 00 98 	lw r2,(sp+152)
    22ac:	5b 82 00 04 	sw (sp+4),r2
    22b0:	2b 82 00 9c 	lw r2,(sp+156)
    22b4:	5b 82 00 08 	sw (sp+8),r2
    22b8:	2b 82 00 a0 	lw r2,(sp+160)
    22bc:	5b 82 00 0c 	sw (sp+12),r2
    22c0:	2b 82 00 a4 	lw r2,(sp+164)
    22c4:	5b 82 00 10 	sw (sp+16),r2
    22c8:	2b 82 00 a8 	lw r2,(sp+168)
    22cc:	5b 82 00 14 	sw (sp+20),r2
    22d0:	2b 82 00 ac 	lw r2,(sp+172)
    22d4:	5b 82 00 18 	sw (sp+24),r2
    22d8:	2b 82 00 b0 	lw r2,(sp+176)
    22dc:	5b 82 00 1c 	sw (sp+28),r2
    22e0:	2b 82 00 b4 	lw r2,(sp+180)
    22e4:	5b 82 00 20 	sw (sp+32),r2
    22e8:	fb ff fe 9a 	calli 1d50 <_ZN4face2L1E3armS0_S0_S0_>
					for(uint32_t i=0; i<(Cao-Ca); i++){
    22ec:	29 62 00 20 	lw r2,(r11+32)
    22f0:	c8 4c 08 00 	sub r1,r2,r12
    22f4:	b8 40 18 00 	mv r3,r2
    22f8:	54 2d ff ba 	bgu r1,r13,21e0 <_ZN4face4FaceE3armS0_S0_S0_j+0x2a4>
			if(Cao >= 5){
    22fc:	34 01 00 04 	mvi r1,4
    2300:	50 22 ff af 	bgeu r1,r2,21bc <_ZN4face4FaceE3armS0_S0_S0_j+0x280>
				if(Cao == 6){
    2304:	34 01 00 06 	mvi r1,6
    2308:	44 41 00 d9 	be r2,r1,266c <_ZN4face4FaceE3armS0_S0_S0_j+0x730>
				if(Cao == 5){
    230c:	34 01 00 05 	mvi r1,5
    2310:	44 41 00 94 	be r2,r1,2560 <_ZN4face4FaceE3armS0_S0_S0_j+0x624>
				if(Ca > Cao1){
    2314:	29 61 00 24 	lw r1,(r11+36)
					for(uint32_t i=0; i<(Ca-Cao1); i++){
    2318:	34 0d 00 00 	mvi r13,0
				if(Ca > Cao1){
    231c:	50 2c ff 60 	bgeu r1,r12,209c <_ZN4face4FaceE3armS0_S0_S0_j+0x160>
						R1(a,b,c,d);
    2320:	2b 81 00 f8 	lw r1,(sp+248)
					for(uint32_t i=0; i<(Ca-Cao1); i++){
    2324:	35 ad 00 01 	addi r13,r13,1
						R1(a,b,c,d);
    2328:	5b 81 00 64 	sw (sp+100),r1
    232c:	2b 81 00 fc 	lw r1,(sp+252)
    2330:	5b 81 00 68 	sw (sp+104),r1
    2334:	2b 81 01 00 	lw r1,(sp+256)
    2338:	5b 81 00 6c 	sw (sp+108),r1
    233c:	2b 81 01 04 	lw r1,(sp+260)
    2340:	5b 81 00 70 	sw (sp+112),r1
    2344:	2b 81 01 08 	lw r1,(sp+264)
    2348:	5b 81 00 74 	sw (sp+116),r1
    234c:	2b 81 01 0c 	lw r1,(sp+268)
    2350:	5b 81 00 78 	sw (sp+120),r1
    2354:	2b 81 01 10 	lw r1,(sp+272)
    2358:	5b 81 00 7c 	sw (sp+124),r1
    235c:	2b 81 01 14 	lw r1,(sp+276)
    2360:	5b 81 00 80 	sw (sp+128),r1
    2364:	2b 81 00 d8 	lw r1,(sp+216)
    2368:	5b 81 00 44 	sw (sp+68),r1
    236c:	2b 81 00 dc 	lw r1,(sp+220)
    2370:	5b 81 00 48 	sw (sp+72),r1
    2374:	2b 81 00 e0 	lw r1,(sp+224)
    2378:	5b 81 00 4c 	sw (sp+76),r1
    237c:	2b 81 00 e4 	lw r1,(sp+228)
    2380:	5b 81 00 50 	sw (sp+80),r1
    2384:	2b 81 00 e8 	lw r1,(sp+232)
    2388:	5b 81 00 54 	sw (sp+84),r1
    238c:	2b 81 00 ec 	lw r1,(sp+236)
    2390:	5b 81 00 58 	sw (sp+88),r1
    2394:	2b 81 00 f0 	lw r1,(sp+240)
    2398:	5b 81 00 5c 	sw (sp+92),r1
    239c:	2b 81 00 f4 	lw r1,(sp+244)
    23a0:	5b 81 00 60 	sw (sp+96),r1
    23a4:	2b 82 00 b8 	lw r2,(sp+184)
    23a8:	b9 60 08 00 	mv r1,r11
    23ac:	5b 82 00 24 	sw (sp+36),r2
    23b0:	2b 82 00 bc 	lw r2,(sp+188)
    23b4:	5b 82 00 28 	sw (sp+40),r2
    23b8:	2b 82 00 c0 	lw r2,(sp+192)
    23bc:	5b 82 00 2c 	sw (sp+44),r2
    23c0:	2b 82 00 c4 	lw r2,(sp+196)
    23c4:	5b 82 00 30 	sw (sp+48),r2
    23c8:	2b 82 00 c8 	lw r2,(sp+200)
    23cc:	5b 82 00 34 	sw (sp+52),r2
    23d0:	2b 82 00 cc 	lw r2,(sp+204)
    23d4:	5b 82 00 38 	sw (sp+56),r2
    23d8:	2b 82 00 d0 	lw r2,(sp+208)
    23dc:	5b 82 00 3c 	sw (sp+60),r2
    23e0:	2b 82 00 d4 	lw r2,(sp+212)
    23e4:	5b 82 00 40 	sw (sp+64),r2
    23e8:	2b 82 00 98 	lw r2,(sp+152)
    23ec:	5b 82 00 04 	sw (sp+4),r2
    23f0:	2b 82 00 9c 	lw r2,(sp+156)
    23f4:	5b 82 00 08 	sw (sp+8),r2
    23f8:	2b 82 00 a0 	lw r2,(sp+160)
    23fc:	5b 82 00 0c 	sw (sp+12),r2
    2400:	2b 82 00 a4 	lw r2,(sp+164)
    2404:	5b 82 00 10 	sw (sp+16),r2
    2408:	2b 82 00 a8 	lw r2,(sp+168)
    240c:	5b 82 00 14 	sw (sp+20),r2
    2410:	2b 82 00 ac 	lw r2,(sp+172)
    2414:	5b 82 00 18 	sw (sp+24),r2
    2418:	2b 82 00 b0 	lw r2,(sp+176)
    241c:	5b 82 00 1c 	sw (sp+28),r2
    2420:	2b 82 00 b4 	lw r2,(sp+180)
    2424:	5b 82 00 20 	sw (sp+32),r2
    2428:	fb ff fe 21 	calli 1cac <_ZN4face2R1E3armS0_S0_S0_>
					for(uint32_t i=0; i<(Ca-Cao1); i++){
    242c:	29 61 00 24 	lw r1,(r11+36)
    2430:	c9 81 08 00 	sub r1,r12,r1
    2434:	54 2d ff bb 	bgu r1,r13,2320 <_ZN4face4FaceE3armS0_S0_S0_j+0x3e4>
    2438:	29 63 00 20 	lw r3,(r11+32)
    243c:	e3 ff ff 60 	bi 21bc <_ZN4face4FaceE3armS0_S0_S0_j+0x280>
			if(Cao < 5){
    2440:	50 82 00 cf 	bgeu r4,r2,277c <_ZN4face4FaceE3armS0_S0_S0_j+0x840>
					for(uint32_t i=0; i<(Cao1-Ca); i++){
    2444:	34 0d 00 02 	mvi r13,2
    2448:	34 0e 00 01 	mvi r14,1
					R11(a,b,c,d);
    244c:	2b 81 00 f8 	lw r1,(sp+248)
    2450:	5b 81 00 64 	sw (sp+100),r1
    2454:	2b 81 00 fc 	lw r1,(sp+252)
    2458:	5b 81 00 68 	sw (sp+104),r1
    245c:	2b 81 01 00 	lw r1,(sp+256)
    2460:	5b 81 00 6c 	sw (sp+108),r1
    2464:	2b 81 01 04 	lw r1,(sp+260)
    2468:	5b 81 00 70 	sw (sp+112),r1
    246c:	2b 81 01 08 	lw r1,(sp+264)
    2470:	5b 81 00 74 	sw (sp+116),r1
    2474:	2b 81 01 0c 	lw r1,(sp+268)
    2478:	5b 81 00 78 	sw (sp+120),r1
    247c:	2b 81 01 10 	lw r1,(sp+272)
    2480:	5b 81 00 7c 	sw (sp+124),r1
    2484:	2b 81 01 14 	lw r1,(sp+276)
    2488:	5b 81 00 80 	sw (sp+128),r1
    248c:	2b 81 00 d8 	lw r1,(sp+216)
    2490:	5b 81 00 44 	sw (sp+68),r1
    2494:	2b 81 00 dc 	lw r1,(sp+220)
    2498:	5b 81 00 48 	sw (sp+72),r1
    249c:	2b 81 00 e0 	lw r1,(sp+224)
    24a0:	5b 81 00 4c 	sw (sp+76),r1
    24a4:	2b 81 00 e4 	lw r1,(sp+228)
    24a8:	5b 81 00 50 	sw (sp+80),r1
    24ac:	2b 81 00 e8 	lw r1,(sp+232)
    24b0:	5b 81 00 54 	sw (sp+84),r1
    24b4:	2b 81 00 ec 	lw r1,(sp+236)
    24b8:	5b 81 00 58 	sw (sp+88),r1
    24bc:	2b 81 00 f0 	lw r1,(sp+240)
    24c0:	5b 81 00 5c 	sw (sp+92),r1
    24c4:	2b 81 00 f4 	lw r1,(sp+244)
    24c8:	5b 81 00 60 	sw (sp+96),r1
    24cc:	2b 82 00 b8 	lw r2,(sp+184)
    24d0:	b9 60 08 00 	mv r1,r11
    24d4:	5b 82 00 24 	sw (sp+36),r2
    24d8:	2b 82 00 bc 	lw r2,(sp+188)
    24dc:	5b 82 00 28 	sw (sp+40),r2
    24e0:	2b 82 00 c0 	lw r2,(sp+192)
    24e4:	5b 82 00 2c 	sw (sp+44),r2
    24e8:	2b 82 00 c4 	lw r2,(sp+196)
    24ec:	5b 82 00 30 	sw (sp+48),r2
    24f0:	2b 82 00 c8 	lw r2,(sp+200)
    24f4:	5b 82 00 34 	sw (sp+52),r2
    24f8:	2b 82 00 cc 	lw r2,(sp+204)
    24fc:	5b 82 00 38 	sw (sp+56),r2
    2500:	2b 82 00 d0 	lw r2,(sp+208)
    2504:	5b 82 00 3c 	sw (sp+60),r2
    2508:	2b 82 00 d4 	lw r2,(sp+212)
    250c:	5b 82 00 40 	sw (sp+64),r2
    2510:	2b 82 00 98 	lw r2,(sp+152)
    2514:	5b 82 00 04 	sw (sp+4),r2
    2518:	2b 82 00 9c 	lw r2,(sp+156)
    251c:	5b 82 00 08 	sw (sp+8),r2
    2520:	2b 82 00 a0 	lw r2,(sp+160)
    2524:	5b 82 00 0c 	sw (sp+12),r2
    2528:	2b 82 00 a4 	lw r2,(sp+164)
    252c:	5b 82 00 10 	sw (sp+16),r2
    2530:	2b 82 00 a8 	lw r2,(sp+168)
    2534:	5b 82 00 14 	sw (sp+20),r2
    2538:	2b 82 00 ac 	lw r2,(sp+172)
    253c:	5b 82 00 18 	sw (sp+24),r2
    2540:	2b 82 00 b0 	lw r2,(sp+176)
    2544:	5b 82 00 1c 	sw (sp+28),r2
    2548:	2b 82 00 b4 	lw r2,(sp+180)
    254c:	5b 82 00 20 	sw (sp+32),r2
    2550:	fb ff fe 29 	calli 1df4 <_ZN4face3R11E3armS0_S0_S0_>
				for(uint32_t i = 0; i<2 ; i++){
    2554:	45 ae ff 19 	be r13,r14,21b8 <_ZN4face4FaceE3armS0_S0_S0_j+0x27c>
    2558:	34 0d 00 01 	mvi r13,1
    255c:	e3 ff ff bc 	bi 244c <_ZN4face4FaceE3armS0_S0_S0_j+0x510>
					L11(a,b,c,d);
    2560:	2b 81 00 f8 	lw r1,(sp+248)
    2564:	5b 81 00 64 	sw (sp+100),r1
    2568:	2b 81 00 fc 	lw r1,(sp+252)
    256c:	5b 81 00 68 	sw (sp+104),r1
    2570:	2b 81 01 00 	lw r1,(sp+256)
    2574:	5b 81 00 6c 	sw (sp+108),r1
    2578:	2b 81 01 04 	lw r1,(sp+260)
    257c:	5b 81 00 70 	sw (sp+112),r1
    2580:	2b 81 01 08 	lw r1,(sp+264)
    2584:	5b 81 00 74 	sw (sp+116),r1
    2588:	2b 81 01 0c 	lw r1,(sp+268)
    258c:	5b 81 00 78 	sw (sp+120),r1
    2590:	2b 81 01 10 	lw r1,(sp+272)
    2594:	5b 81 00 7c 	sw (sp+124),r1
    2598:	2b 81 01 14 	lw r1,(sp+276)
    259c:	5b 81 00 80 	sw (sp+128),r1
    25a0:	2b 81 00 d8 	lw r1,(sp+216)
    25a4:	5b 81 00 44 	sw (sp+68),r1
    25a8:	2b 81 00 dc 	lw r1,(sp+220)
    25ac:	5b 81 00 48 	sw (sp+72),r1
    25b0:	2b 81 00 e0 	lw r1,(sp+224)
    25b4:	5b 81 00 4c 	sw (sp+76),r1
    25b8:	2b 81 00 e4 	lw r1,(sp+228)
    25bc:	5b 81 00 50 	sw (sp+80),r1
    25c0:	2b 81 00 e8 	lw r1,(sp+232)
    25c4:	5b 81 00 54 	sw (sp+84),r1
    25c8:	2b 81 00 ec 	lw r1,(sp+236)
    25cc:	5b 81 00 58 	sw (sp+88),r1
    25d0:	2b 81 00 f0 	lw r1,(sp+240)
    25d4:	5b 81 00 5c 	sw (sp+92),r1
    25d8:	2b 81 00 f4 	lw r1,(sp+244)
    25dc:	5b 81 00 60 	sw (sp+96),r1
    25e0:	2b 82 00 b8 	lw r2,(sp+184)
    25e4:	b9 60 08 00 	mv r1,r11
    25e8:	5b 82 00 24 	sw (sp+36),r2
    25ec:	2b 82 00 bc 	lw r2,(sp+188)
    25f0:	5b 82 00 28 	sw (sp+40),r2
    25f4:	2b 82 00 c0 	lw r2,(sp+192)
    25f8:	5b 82 00 2c 	sw (sp+44),r2
    25fc:	2b 82 00 c4 	lw r2,(sp+196)
    2600:	5b 82 00 30 	sw (sp+48),r2
    2604:	2b 82 00 c8 	lw r2,(sp+200)
    2608:	5b 82 00 34 	sw (sp+52),r2
    260c:	2b 82 00 cc 	lw r2,(sp+204)
    2610:	5b 82 00 38 	sw (sp+56),r2
    2614:	2b 82 00 d0 	lw r2,(sp+208)
    2618:	5b 82 00 3c 	sw (sp+60),r2
    261c:	2b 82 00 d4 	lw r2,(sp+212)
    2620:	5b 82 00 40 	sw (sp+64),r2
    2624:	2b 82 00 98 	lw r2,(sp+152)
    2628:	5b 82 00 04 	sw (sp+4),r2
    262c:	2b 82 00 9c 	lw r2,(sp+156)
    2630:	5b 82 00 08 	sw (sp+8),r2
    2634:	2b 82 00 a0 	lw r2,(sp+160)
    2638:	5b 82 00 0c 	sw (sp+12),r2
    263c:	2b 82 00 a4 	lw r2,(sp+164)
    2640:	5b 82 00 10 	sw (sp+16),r2
    2644:	2b 82 00 a8 	lw r2,(sp+168)
    2648:	5b 82 00 14 	sw (sp+20),r2
    264c:	2b 82 00 ac 	lw r2,(sp+172)
    2650:	5b 82 00 18 	sw (sp+24),r2
    2654:	2b 82 00 b0 	lw r2,(sp+176)
    2658:	5b 82 00 1c 	sw (sp+28),r2
    265c:	2b 82 00 b4 	lw r2,(sp+180)
    2660:	5b 82 00 20 	sw (sp+32),r2
    2664:	fb ff fe 0d 	calli 1e98 <_ZN4face3L11E3armS0_S0_S0_>
    2668:	e3 ff ff 2b 	bi 2314 <_ZN4face4FaceE3armS0_S0_S0_j+0x3d8>
					R11(a,b,c,d);
    266c:	2b 81 00 f8 	lw r1,(sp+248)
    2670:	5b 81 00 64 	sw (sp+100),r1
    2674:	2b 81 00 fc 	lw r1,(sp+252)
    2678:	5b 81 00 68 	sw (sp+104),r1
    267c:	2b 81 01 00 	lw r1,(sp+256)
    2680:	5b 81 00 6c 	sw (sp+108),r1
    2684:	2b 81 01 04 	lw r1,(sp+260)
    2688:	5b 81 00 70 	sw (sp+112),r1
    268c:	2b 81 01 08 	lw r1,(sp+264)
    2690:	5b 81 00 74 	sw (sp+116),r1
    2694:	2b 81 01 0c 	lw r1,(sp+268)
    2698:	5b 81 00 78 	sw (sp+120),r1
    269c:	2b 81 01 10 	lw r1,(sp+272)
    26a0:	5b 81 00 7c 	sw (sp+124),r1
    26a4:	2b 81 01 14 	lw r1,(sp+276)
    26a8:	5b 81 00 80 	sw (sp+128),r1
    26ac:	2b 81 00 d8 	lw r1,(sp+216)
    26b0:	5b 81 00 44 	sw (sp+68),r1
    26b4:	2b 81 00 dc 	lw r1,(sp+220)
    26b8:	5b 81 00 48 	sw (sp+72),r1
    26bc:	2b 81 00 e0 	lw r1,(sp+224)
    26c0:	5b 81 00 4c 	sw (sp+76),r1
    26c4:	2b 81 00 e4 	lw r1,(sp+228)
    26c8:	5b 81 00 50 	sw (sp+80),r1
    26cc:	2b 81 00 e8 	lw r1,(sp+232)
    26d0:	5b 81 00 54 	sw (sp+84),r1
    26d4:	2b 81 00 ec 	lw r1,(sp+236)
    26d8:	5b 81 00 58 	sw (sp+88),r1
    26dc:	2b 81 00 f0 	lw r1,(sp+240)
    26e0:	5b 81 00 5c 	sw (sp+92),r1
    26e4:	2b 81 00 f4 	lw r1,(sp+244)
    26e8:	5b 81 00 60 	sw (sp+96),r1
    26ec:	2b 82 00 b8 	lw r2,(sp+184)
    26f0:	b9 60 08 00 	mv r1,r11
    26f4:	5b 82 00 24 	sw (sp+36),r2
    26f8:	2b 82 00 bc 	lw r2,(sp+188)
    26fc:	5b 82 00 28 	sw (sp+40),r2
    2700:	2b 82 00 c0 	lw r2,(sp+192)
    2704:	5b 82 00 2c 	sw (sp+44),r2
    2708:	2b 82 00 c4 	lw r2,(sp+196)
    270c:	5b 82 00 30 	sw (sp+48),r2
    2710:	2b 82 00 c8 	lw r2,(sp+200)
    2714:	5b 82 00 34 	sw (sp+52),r2
    2718:	2b 82 00 cc 	lw r2,(sp+204)
    271c:	5b 82 00 38 	sw (sp+56),r2
    2720:	2b 82 00 d0 	lw r2,(sp+208)
    2724:	5b 82 00 3c 	sw (sp+60),r2
    2728:	2b 82 00 d4 	lw r2,(sp+212)
    272c:	5b 82 00 40 	sw (sp+64),r2
    2730:	2b 82 00 98 	lw r2,(sp+152)
    2734:	5b 82 00 04 	sw (sp+4),r2
    2738:	2b 82 00 9c 	lw r2,(sp+156)
    273c:	5b 82 00 08 	sw (sp+8),r2
    2740:	2b 82 00 a0 	lw r2,(sp+160)
    2744:	5b 82 00 0c 	sw (sp+12),r2
    2748:	2b 82 00 a4 	lw r2,(sp+164)
    274c:	5b 82 00 10 	sw (sp+16),r2
    2750:	2b 82 00 a8 	lw r2,(sp+168)
    2754:	5b 82 00 14 	sw (sp+20),r2
    2758:	2b 82 00 ac 	lw r2,(sp+172)
    275c:	5b 82 00 18 	sw (sp+24),r2
    2760:	2b 82 00 b0 	lw r2,(sp+176)
    2764:	5b 82 00 1c 	sw (sp+28),r2
    2768:	2b 82 00 b4 	lw r2,(sp+180)
    276c:	5b 82 00 20 	sw (sp+32),r2
    2770:	fb ff fd a1 	calli 1df4 <_ZN4face3R11E3armS0_S0_S0_>
    2774:	29 62 00 20 	lw r2,(r11+32)
    2778:	e3 ff fe e5 	bi 230c <_ZN4face4FaceE3armS0_S0_S0_j+0x3d0>
				if(Ca == 5){
    277c:	34 02 00 05 	mvi r2,5
    2780:	45 82 00 48 	be r12,r2,28a0 <_ZN4face4FaceE3armS0_S0_S0_j+0x964>
				if(Ca == 6){
    2784:	34 02 00 06 	mvi r2,6
    2788:	5d 82 fe 8d 	bne r12,r2,21bc <_ZN4face4FaceE3armS0_S0_S0_j+0x280>
					L11(a,b,c,d);
    278c:	2b 82 00 f8 	lw r2,(sp+248)
    2790:	5b 82 00 64 	sw (sp+100),r2
    2794:	2b 82 00 fc 	lw r2,(sp+252)
    2798:	5b 82 00 68 	sw (sp+104),r2
    279c:	2b 82 01 00 	lw r2,(sp+256)
    27a0:	5b 82 00 6c 	sw (sp+108),r2
    27a4:	2b 82 01 04 	lw r2,(sp+260)
    27a8:	5b 82 00 70 	sw (sp+112),r2
    27ac:	2b 82 01 08 	lw r2,(sp+264)
    27b0:	5b 82 00 74 	sw (sp+116),r2
    27b4:	2b 82 01 0c 	lw r2,(sp+268)
    27b8:	5b 82 00 78 	sw (sp+120),r2
    27bc:	2b 82 01 10 	lw r2,(sp+272)
    27c0:	5b 82 00 7c 	sw (sp+124),r2
    27c4:	2b 82 01 14 	lw r2,(sp+276)
    27c8:	5b 82 00 80 	sw (sp+128),r2
    27cc:	2b 82 00 d8 	lw r2,(sp+216)
    27d0:	5b 82 00 44 	sw (sp+68),r2
    27d4:	2b 82 00 dc 	lw r2,(sp+220)
    27d8:	5b 82 00 48 	sw (sp+72),r2
    27dc:	2b 82 00 e0 	lw r2,(sp+224)
    27e0:	5b 82 00 4c 	sw (sp+76),r2
    27e4:	2b 82 00 e4 	lw r2,(sp+228)
    27e8:	5b 82 00 50 	sw (sp+80),r2
    27ec:	2b 82 00 e8 	lw r2,(sp+232)
    27f0:	5b 82 00 54 	sw (sp+84),r2
    27f4:	2b 82 00 ec 	lw r2,(sp+236)
    27f8:	5b 82 00 58 	sw (sp+88),r2
    27fc:	2b 82 00 f0 	lw r2,(sp+240)
    2800:	5b 82 00 5c 	sw (sp+92),r2
    2804:	2b 82 00 f4 	lw r2,(sp+244)
    2808:	5b 82 00 60 	sw (sp+96),r2
    280c:	2b 82 00 b8 	lw r2,(sp+184)
    2810:	5b 82 00 24 	sw (sp+36),r2
    2814:	2b 82 00 bc 	lw r2,(sp+188)
    2818:	5b 82 00 28 	sw (sp+40),r2
    281c:	2b 82 00 c0 	lw r2,(sp+192)
    2820:	5b 82 00 2c 	sw (sp+44),r2
    2824:	2b 82 00 c4 	lw r2,(sp+196)
    2828:	5b 82 00 30 	sw (sp+48),r2
    282c:	2b 82 00 c8 	lw r2,(sp+200)
    2830:	5b 82 00 34 	sw (sp+52),r2
    2834:	2b 82 00 cc 	lw r2,(sp+204)
    2838:	5b 82 00 38 	sw (sp+56),r2
    283c:	2b 82 00 d0 	lw r2,(sp+208)
    2840:	5b 82 00 3c 	sw (sp+60),r2
    2844:	2b 82 00 d4 	lw r2,(sp+212)
    2848:	5b 82 00 40 	sw (sp+64),r2
    284c:	2b 82 00 98 	lw r2,(sp+152)
    2850:	5b 82 00 04 	sw (sp+4),r2
    2854:	2b 82 00 9c 	lw r2,(sp+156)
    2858:	5b 82 00 08 	sw (sp+8),r2
    285c:	2b 82 00 a0 	lw r2,(sp+160)
    2860:	5b 82 00 0c 	sw (sp+12),r2
    2864:	2b 82 00 a4 	lw r2,(sp+164)
    2868:	5b 82 00 10 	sw (sp+16),r2
    286c:	2b 82 00 a8 	lw r2,(sp+168)
    2870:	5b 82 00 14 	sw (sp+20),r2
    2874:	2b 82 00 ac 	lw r2,(sp+172)
    2878:	5b 82 00 18 	sw (sp+24),r2
    287c:	2b 82 00 b0 	lw r2,(sp+176)
    2880:	5b 82 00 1c 	sw (sp+28),r2
    2884:	2b 82 00 b4 	lw r2,(sp+180)
    2888:	5b 82 00 20 	sw (sp+32),r2
    288c:	fb ff fd 83 	calli 1e98 <_ZN4face3L11E3armS0_S0_S0_>
			if(Cao >= 5){
    2890:	29 63 00 20 	lw r3,(r11+32)
    2894:	34 01 00 04 	mvi r1,4
    2898:	54 61 fe eb 	bgu r3,r1,2444 <_ZN4face4FaceE3armS0_S0_S0_j+0x508>
    289c:	e3 ff fe 48 	bi 21bc <_ZN4face4FaceE3armS0_S0_S0_j+0x280>
					R11(a,b,c,d);
    28a0:	2b 82 00 f8 	lw r2,(sp+248)
    28a4:	5b 82 00 64 	sw (sp+100),r2
    28a8:	2b 82 00 fc 	lw r2,(sp+252)
    28ac:	5b 82 00 68 	sw (sp+104),r2
    28b0:	2b 82 01 00 	lw r2,(sp+256)
    28b4:	5b 82 00 6c 	sw (sp+108),r2
    28b8:	2b 82 01 04 	lw r2,(sp+260)
    28bc:	5b 82 00 70 	sw (sp+112),r2
    28c0:	2b 82 01 08 	lw r2,(sp+264)
    28c4:	5b 82 00 74 	sw (sp+116),r2
    28c8:	2b 82 01 0c 	lw r2,(sp+268)
    28cc:	5b 82 00 78 	sw (sp+120),r2
    28d0:	2b 82 01 10 	lw r2,(sp+272)
    28d4:	5b 82 00 7c 	sw (sp+124),r2
    28d8:	2b 82 01 14 	lw r2,(sp+276)
    28dc:	5b 82 00 80 	sw (sp+128),r2
    28e0:	2b 82 00 d8 	lw r2,(sp+216)
    28e4:	5b 82 00 44 	sw (sp+68),r2
    28e8:	2b 82 00 dc 	lw r2,(sp+220)
    28ec:	5b 82 00 48 	sw (sp+72),r2
    28f0:	2b 82 00 e0 	lw r2,(sp+224)
    28f4:	5b 82 00 4c 	sw (sp+76),r2
    28f8:	2b 82 00 e4 	lw r2,(sp+228)
    28fc:	5b 82 00 50 	sw (sp+80),r2
    2900:	2b 82 00 e8 	lw r2,(sp+232)
    2904:	5b 82 00 54 	sw (sp+84),r2
    2908:	2b 82 00 ec 	lw r2,(sp+236)
    290c:	5b 82 00 58 	sw (sp+88),r2
    2910:	2b 82 00 f0 	lw r2,(sp+240)
    2914:	5b 82 00 5c 	sw (sp+92),r2
    2918:	2b 82 00 f4 	lw r2,(sp+244)
    291c:	5b 82 00 60 	sw (sp+96),r2
    2920:	2b 82 00 b8 	lw r2,(sp+184)
    2924:	5b 82 00 24 	sw (sp+36),r2
    2928:	2b 82 00 bc 	lw r2,(sp+188)
    292c:	5b 82 00 28 	sw (sp+40),r2
    2930:	2b 82 00 c0 	lw r2,(sp+192)
    2934:	5b 82 00 2c 	sw (sp+44),r2
    2938:	2b 82 00 c4 	lw r2,(sp+196)
    293c:	5b 82 00 30 	sw (sp+48),r2
    2940:	2b 82 00 c8 	lw r2,(sp+200)
    2944:	5b 82 00 34 	sw (sp+52),r2
    2948:	2b 82 00 cc 	lw r2,(sp+204)
    294c:	5b 82 00 38 	sw (sp+56),r2
    2950:	2b 82 00 d0 	lw r2,(sp+208)
    2954:	5b 82 00 3c 	sw (sp+60),r2
    2958:	2b 82 00 d4 	lw r2,(sp+212)
    295c:	5b 82 00 40 	sw (sp+64),r2
    2960:	2b 82 00 98 	lw r2,(sp+152)
    2964:	5b 82 00 04 	sw (sp+4),r2
    2968:	2b 82 00 9c 	lw r2,(sp+156)
    296c:	5b 82 00 08 	sw (sp+8),r2
    2970:	2b 82 00 a0 	lw r2,(sp+160)
    2974:	5b 82 00 0c 	sw (sp+12),r2
    2978:	2b 82 00 a4 	lw r2,(sp+164)
    297c:	5b 82 00 10 	sw (sp+16),r2
    2980:	2b 82 00 a8 	lw r2,(sp+168)
    2984:	5b 82 00 14 	sw (sp+20),r2
    2988:	2b 82 00 ac 	lw r2,(sp+172)
    298c:	5b 82 00 18 	sw (sp+24),r2
    2990:	2b 82 00 b0 	lw r2,(sp+176)
    2994:	5b 82 00 1c 	sw (sp+28),r2
    2998:	2b 82 00 b4 	lw r2,(sp+180)
    299c:	5b 82 00 20 	sw (sp+32),r2
    29a0:	fb ff fd 15 	calli 1df4 <_ZN4face3R11E3armS0_S0_S0_>
    29a4:	e3 ff ff bb 	bi 2890 <_ZN4face4FaceE3armS0_S0_S0_j+0x954>
