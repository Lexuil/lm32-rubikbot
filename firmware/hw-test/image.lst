
image:     formato del fichero elf32-lm32

Secciones:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000dcc  00000000  00000000  00000054  2**2
                  CONTENTS, ALLOC, LOAD, CODE
  1 .rodata       00000068  00000dcc  00000dcc  00000e20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         00000010  00000e34  00000e34  00000e88  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000084  00000e44  00000e44  00000e98  2**2
                  ALLOC
  4 .debug_frame  00000218  00000000  00000000  00000e98  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d6c  00000000  00000000  000010b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000044a  00000000  00000000  00001e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges 00000040  00000000  00000000  00002266  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000088  00000000  00000000  000022a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000b51  00000000  00000000  0000232e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000476  00000000  00000000  00002e7f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .comment      00000011  00000000  00000000  000032f5  2**0
                  CONTENTS, READONLY
 12 .debug_loc    000006ca  00000000  00000000  00003306  2**0
                  CONTENTS, READONLY, DEBUGGING

Desensamblado de la secci√≥n .text:

00000000 <_ftext>:
   0:	98 00 00 00 	xor r0,r0,r0
   4:	d0 00 00 00 	wcsr IE,r0
   8:	78 01 00 00 	mvhi r1,0x0
   c:	38 21 00 00 	ori r1,r1,0x0
  10:	d0 e1 00 00 	wcsr EBA,r1
  14:	f8 00 00 3b 	calli 100 <_crt0>
  18:	34 00 00 00 	nop
  1c:	34 00 00 00 	nop

00000020 <_breakpoint_handler>:
  20:	34 00 00 00 	nop
  24:	34 00 00 00 	nop
  28:	34 00 00 00 	nop
  2c:	34 00 00 00 	nop
  30:	34 00 00 00 	nop
  34:	34 00 00 00 	nop
  38:	34 00 00 00 	nop
  3c:	34 00 00 00 	nop

00000040 <_ibuserror_handler>:
  40:	34 00 00 00 	nop
  44:	34 00 00 00 	nop
  48:	34 00 00 00 	nop
  4c:	34 00 00 00 	nop
  50:	34 00 00 00 	nop
  54:	34 00 00 00 	nop
  58:	34 00 00 00 	nop
  5c:	34 00 00 00 	nop

00000060 <_watchpoint_handler>:
  60:	34 00 00 00 	nop
  64:	34 00 00 00 	nop
  68:	34 00 00 00 	nop
  6c:	34 00 00 00 	nop
  70:	34 00 00 00 	nop
  74:	34 00 00 00 	nop
  78:	34 00 00 00 	nop
  7c:	34 00 00 00 	nop

00000080 <_dbuserror_handler>:
  80:	34 00 00 00 	nop
  84:	34 00 00 00 	nop
  88:	34 00 00 00 	nop
  8c:	34 00 00 00 	nop
  90:	34 00 00 00 	nop
  94:	34 00 00 00 	nop
  98:	34 00 00 00 	nop
  9c:	34 00 00 00 	nop

000000a0 <_divzero_handler>:
  a0:	34 00 00 00 	nop
  a4:	34 00 00 00 	nop
  a8:	34 00 00 00 	nop
  ac:	34 00 00 00 	nop
  b0:	34 00 00 00 	nop
  b4:	34 00 00 00 	nop
  b8:	34 00 00 00 	nop
  bc:	34 00 00 00 	nop

000000c0 <_interrupt_handler>:
  c0:	5b 9d 00 00 	sw (sp+0),ra
  c4:	f8 00 00 2c 	calli 174 <_save_all>
  c8:	90 40 08 00 	rcsr r1,IP
  cc:	f8 00 00 1d 	calli 140 <irq_handler>
  d0:	78 01 ff ff 	mvhi r1,0xffff
  d4:	38 21 ff ff 	ori r1,r1,0xffff
  d8:	d0 41 00 00 	wcsr IP,r1
  dc:	e0 00 00 39 	bi 1c0 <_restore_all_and_eret>

000000e0 <_scall_handler>:
  e0:	34 00 00 00 	nop
  e4:	34 00 00 00 	nop
  e8:	34 00 00 00 	nop
  ec:	34 00 00 00 	nop
  f0:	34 00 00 00 	nop
  f4:	34 00 00 00 	nop
  f8:	34 00 00 00 	nop
  fc:	34 00 00 00 	nop

00000100 <_crt0>:
 100:	78 1c 00 00 	mvhi sp,0x0
 104:	3b 9c 0f fc 	ori sp,sp,0xffc
 108:	78 1a 00 00 	mvhi gp,0x0
 10c:	3b 5a 0e 50 	ori gp,gp,0xe50
 110:	78 01 00 00 	mvhi r1,0x0
 114:	38 21 0e 44 	ori r1,r1,0xe44
 118:	78 03 00 00 	mvhi r3,0x0
 11c:	38 63 0e c8 	ori r3,r3,0xec8

00000120 <.clearBSS>:
 120:	44 23 00 04 	be r1,r3,130 <.callMain>
 124:	58 20 00 00 	sw (r1+0),r0
 128:	34 21 00 04 	addi r1,r1,4
 12c:	e3 ff ff fd 	bi 120 <.clearBSS>

00000130 <.callMain>:
 130:	34 01 00 00 	mvi r1,0
 134:	34 02 00 00 	mvi r2,0
 138:	34 03 00 00 	mvi r3,0
 13c:	f8 00 00 34 	calli 20c <main>

00000140 <irq_handler>:
 140:	c3 a0 00 00 	ret

00000144 <irq_enable>:
 144:	34 01 00 01 	mvi r1,1
 148:	d0 01 00 00 	wcsr IE,r1
 14c:	c3 a0 00 00 	ret

00000150 <irq_disable>:
 150:	34 01 00 00 	mvi r1,0
 154:	d0 01 00 00 	wcsr IE,r1
 158:	c3 a0 00 00 	ret

0000015c <irq_set_mask>:
 15c:	d0 21 00 00 	wcsr IM,r1
 160:	c3 a0 00 00 	ret

00000164 <irq_get_mask>:
 164:	90 20 08 00 	rcsr r1,IM
 168:	c3 a0 00 00 	ret

0000016c <jump>:
 16c:	c0 20 00 00 	b r1

00000170 <halt>:
 170:	e0 00 00 00 	bi 170 <halt>

00000174 <_save_all>:
 174:	37 9c ff 80 	addi sp,sp,-128
 178:	5b 81 00 04 	sw (sp+4),r1
 17c:	5b 82 00 08 	sw (sp+8),r2
 180:	5b 83 00 0c 	sw (sp+12),r3
 184:	5b 84 00 10 	sw (sp+16),r4
 188:	5b 85 00 14 	sw (sp+20),r5
 18c:	5b 86 00 18 	sw (sp+24),r6
 190:	5b 87 00 1c 	sw (sp+28),r7
 194:	5b 88 00 20 	sw (sp+32),r8
 198:	5b 89 00 24 	sw (sp+36),r9
 19c:	5b 8a 00 28 	sw (sp+40),r10
 1a0:	5b 9e 00 78 	sw (sp+120),ea
 1a4:	5b 9f 00 7c 	sw (sp+124),ba
 1a8:	2b 81 00 80 	lw r1,(sp+128)
 1ac:	5b 81 00 74 	sw (sp+116),r1
 1b0:	bb 80 08 00 	mv r1,sp
 1b4:	34 21 00 80 	addi r1,r1,128
 1b8:	5b 81 00 70 	sw (sp+112),r1
 1bc:	c3 a0 00 00 	ret

000001c0 <_restore_all_and_eret>:
 1c0:	2b 81 00 04 	lw r1,(sp+4)
 1c4:	2b 82 00 08 	lw r2,(sp+8)
 1c8:	2b 83 00 0c 	lw r3,(sp+12)
 1cc:	2b 84 00 10 	lw r4,(sp+16)
 1d0:	2b 85 00 14 	lw r5,(sp+20)
 1d4:	2b 86 00 18 	lw r6,(sp+24)
 1d8:	2b 87 00 1c 	lw r7,(sp+28)
 1dc:	2b 88 00 20 	lw r8,(sp+32)
 1e0:	2b 89 00 24 	lw r9,(sp+36)
 1e4:	2b 8a 00 28 	lw r10,(sp+40)
 1e8:	2b 9d 00 74 	lw ra,(sp+116)
 1ec:	2b 9e 00 78 	lw ea,(sp+120)
 1f0:	2b 9f 00 7c 	lw ba,(sp+124)
 1f4:	2b 9c 00 70 	lw sp,(sp+112)
 1f8:	c3 c0 00 00 	eret

000001fc <get_sp>:
 1fc:	bb 80 08 00 	mv r1,sp
 200:	c3 a0 00 00 	ret

00000204 <get_gp>:
 204:	bb 40 08 00 	mv r1,gp
 208:	c3 a0 00 00 	ret

0000020c <main>:

#include "soc-hw.h"

int main(){
 20c:	37 9c ff f4 	addi sp,sp,-12
 210:	5b 9d 00 04 	sw (sp+4),ra

	arm arm1;

	arm1.set_serv(0,2);
 214:	34 03 00 02 	mvi r3,2
 218:	34 02 00 00 	mvi r2,0
 21c:	37 81 00 08 	addi r1,sp,8
 220:	f8 00 02 ce 	calli d58 <_ZN3arm8set_servEii>

	arm1.home();
 224:	37 81 00 08 	addi r1,sp,8
 228:	f8 00 02 1a 	calli a90 <_ZN3arm4homeEv>

	arm1.derecha();
 22c:	37 81 00 08 	addi r1,sp,8
 230:	f8 00 02 42 	calli b38 <_ZN3arm7derechaEv>
	arm1.izquierda();
 234:	37 81 00 08 	addi r1,sp,8
 238:	f8 00 02 84 	calli c48 <_ZN3arm9izquierdaEv>
		pwm_duty(0,IZ);
		pwm_duty(2,IZ);
		msleep(1000);
	}
		*/
}
 23c:	34 01 00 00 	mvi r1,0
 240:	2b 9d 00 04 	lw ra,(sp+4)
 244:	37 9c 00 0c 	addi sp,sp,12
 248:	c3 a0 00 00 	ret

0000024c <_Z7tic_isrv>:

uint32_t tic_msec;

void tic_isr()
{
	tic_msec++;
 24c:	78 01 00 00 	mvhi r1,0x0
 250:	38 21 0d cc 	ori r1,r1,0xdcc
 254:	28 22 00 00 	lw r2,(r1+0)
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
 258:	78 04 00 00 	mvhi r4,0x0
 25c:	38 84 0d d0 	ori r4,r4,0xdd0
 260:	28 83 00 00 	lw r3,(r4+0)
	tic_msec++;
 264:	28 41 00 00 	lw r1,(r2+0)
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
 268:	28 63 00 00 	lw r3,(r3+0)
	tic_msec++;
 26c:	34 21 00 01 	addi r1,r1,1
 270:	58 41 00 00 	sw (r2+0),r1
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
 274:	34 01 00 0e 	mvi r1,14
 278:	58 61 00 00 	sw (r3+0),r1
}
 27c:	c3 a0 00 00 	ret

00000280 <_Z8isr_nullv>:
 280:	c3 a0 00 00 	ret

00000284 <_Z11irq_handlerj>:
{
 284:	37 9c ff f0 	addi sp,sp,-16
 288:	5b 8b 00 10 	sw (sp+16),r11
 28c:	5b 8c 00 0c 	sw (sp+12),r12
 290:	5b 8d 00 08 	sw (sp+8),r13
 294:	5b 9d 00 04 	sw (sp+4),ra
 298:	78 02 00 00 	mvhi r2,0x0
 29c:	38 42 0d d4 	ori r2,r2,0xdd4
 2a0:	28 4b 00 00 	lw r11,(r2+0)
 2a4:	b8 20 60 00 	mv r12,r1
 2a8:	35 6d 00 80 	addi r13,r11,128
		if (pending & 0x01) (*isr_table[i])();
 2ac:	21 81 00 01 	andi r1,r12,0x1
 2b0:	44 20 00 03 	be r1,r0,2bc <_Z11irq_handlerj+0x38>
 2b4:	29 61 00 00 	lw r1,(r11+0)
 2b8:	d8 20 00 00 	call r1
 2bc:	35 6b 00 04 	addi r11,r11,4
		pending >>= 1;
 2c0:	01 8c 00 01 	srui r12,r12,1
	for(i=0; i<32; i++) {
 2c4:	5d ab ff fa 	bne r13,r11,2ac <_Z11irq_handlerj+0x28>
}
 2c8:	2b 9d 00 04 	lw ra,(sp+4)
 2cc:	2b 8b 00 10 	lw r11,(sp+16)
 2d0:	2b 8c 00 0c 	lw r12,(sp+12)
 2d4:	2b 8d 00 08 	lw r13,(sp+8)
 2d8:	37 9c 00 10 	addi sp,sp,16
 2dc:	c3 a0 00 00 	ret

000002e0 <_Z8isr_initv>:
{
 2e0:	78 02 00 00 	mvhi r2,0x0
 2e4:	38 42 0d d8 	ori r2,r2,0xdd8
 2e8:	28 41 00 00 	lw r1,(r2+0)
 2ec:	78 02 00 00 	mvhi r2,0x0
 2f0:	38 42 0d dc 	ori r2,r2,0xddc
 2f4:	28 43 00 00 	lw r3,(r2+0)
 2f8:	34 22 00 80 	addi r2,r1,128
		isr_table[i] = &isr_null;
 2fc:	58 23 00 00 	sw (r1+0),r3
 300:	34 21 00 04 	addi r1,r1,4
	for(i=0; i<32; i++)
 304:	5c 22 ff fe 	bne r1,r2,2fc <_Z8isr_initv+0x1c>
}
 308:	c3 a0 00 00 	ret

0000030c <_Z12isr_registeriPFvvE>:
	isr_table[irq] = isr;
 30c:	78 04 00 00 	mvhi r4,0x0
 310:	38 84 0d e0 	ori r4,r4,0xde0
 314:	3c 23 00 02 	sli r3,r1,2
 318:	28 81 00 00 	lw r1,(r4+0)
 31c:	b4 23 08 00 	add r1,r1,r3
 320:	58 22 00 00 	sw (r1+0),r2
}
 324:	c3 a0 00 00 	ret

00000328 <_Z14isr_unregisteri>:
	isr_table[irq] = &isr_null;
 328:	78 03 00 00 	mvhi r3,0x0
 32c:	38 63 0d e4 	ori r3,r3,0xde4
 330:	3c 22 00 02 	sli r2,r1,2
 334:	28 61 00 00 	lw r1,(r3+0)
 338:	78 03 00 00 	mvhi r3,0x0
 33c:	38 63 0d e8 	ori r3,r3,0xde8
 340:	b4 22 08 00 	add r1,r1,r2
 344:	28 62 00 00 	lw r2,(r3+0)
 348:	58 22 00 00 	sw (r1+0),r2
}
 34c:	c3 a0 00 00 	ret

00000350 <_Z6msleepj>:
	timer0->compare1 = (FCPU/1000)*msec;
 350:	78 03 00 00 	mvhi r3,0x0
 354:	38 02 c3 50 	mvu r2,0xc350
 358:	38 63 0d ec 	ori r3,r3,0xdec
 35c:	88 22 08 00 	mul r1,r1,r2
 360:	28 62 00 00 	lw r2,(r3+0)
 364:	28 42 00 00 	lw r2,(r2+0)
 368:	58 41 00 10 	sw (r2+16),r1
	timer0->counter1 = 0;
 36c:	58 40 00 14 	sw (r2+20),r0
	timer0->tcr1 = TIMER_EN;
 370:	34 01 00 08 	mvi r1,8
 374:	58 41 00 0c 	sw (r2+12),r1
 		tcr = timer0->tcr1;
 378:	28 41 00 0c 	lw r1,(r2+12)
 	} while ( ! (tcr & TIMER_TRIG) );
 37c:	20 21 00 01 	andi r1,r1,0x1
 380:	44 20 ff fe 	be r1,r0,378 <_Z6msleepj+0x28>
}
 384:	c3 a0 00 00 	ret

00000388 <_Z6nsleepj>:
	timer0->compare1 = (FCPU/1000000)*nsec;
 388:	78 03 00 00 	mvhi r3,0x0
 38c:	38 63 0d f0 	ori r3,r3,0xdf0
 390:	28 62 00 00 	lw r2,(r3+0)
 394:	08 21 00 32 	muli r1,r1,50
 398:	28 42 00 00 	lw r2,(r2+0)
 39c:	58 41 00 10 	sw (r2+16),r1
	timer0->counter1 = 0;
 3a0:	58 40 00 14 	sw (r2+20),r0
	timer0->tcr1 = TIMER_EN;
 3a4:	34 01 00 08 	mvi r1,8
 3a8:	58 41 00 0c 	sw (r2+12),r1
 		tcr = timer0->tcr1;
 3ac:	28 41 00 0c 	lw r1,(r2+12)
 	} while ( ! (tcr & TIMER_TRIG) );
 3b0:	20 21 00 01 	andi r1,r1,0x1
 3b4:	44 20 ff fe 	be r1,r0,3ac <_Z6nsleepj+0x24>
}
 3b8:	c3 a0 00 00 	ret

000003bc <_Z8tic_initv>:
void tic_init()
{
	tic_msec = 0;

	// Setup timer0.0
	timer0->compare0 = (FCPU/10000);
 3bc:	78 02 00 00 	mvhi r2,0x0
 3c0:	38 42 0d f4 	ori r2,r2,0xdf4
 3c4:	28 41 00 00 	lw r1,(r2+0)
	tic_msec = 0;
 3c8:	78 03 00 00 	mvhi r3,0x0
	timer0->compare0 = (FCPU/10000);
 3cc:	34 02 13 88 	mvi r2,5000
 3d0:	28 21 00 00 	lw r1,(r1+0)
	tic_msec = 0;
 3d4:	38 63 0d f8 	ori r3,r3,0xdf8
	timer0->compare0 = (FCPU/10000);
 3d8:	58 22 00 04 	sw (r1+4),r2
	tic_msec = 0;
 3dc:	28 62 00 00 	lw r2,(r3+0)
	timer0->counter0 = 0;
 3e0:	58 20 00 08 	sw (r1+8),r0
	isr_table[irq] = isr;
 3e4:	78 03 00 00 	mvhi r3,0x0
	tic_msec = 0;
 3e8:	58 40 00 00 	sw (r2+0),r0
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
 3ec:	34 02 00 0e 	mvi r2,14
 3f0:	58 22 00 00 	sw (r1+0),r2
	isr_table[irq] = isr;
 3f4:	78 02 00 00 	mvhi r2,0x0
 3f8:	38 42 0d fc 	ori r2,r2,0xdfc
 3fc:	38 63 0e 00 	ori r3,r3,0xe00
 400:	28 41 00 00 	lw r1,(r2+0)
 404:	28 62 00 00 	lw r2,(r3+0)
 408:	58 22 00 04 	sw (r1+4),r2

	isr_register(1, &tic_isr);
}
 40c:	c3 a0 00 00 	ret

00000410 <_Z9uart_initv>:
	//uart0->lcr = 0x03;  // Line Control Register:    8N1
	//uart0->mcr = 0x00;  // Modem Control Register

	// Setup Divisor register (Fclk / Baud)
	//uart0->div = (FCPU/(57600*16));
}
 410:	c3 a0 00 00 	ret

00000414 <_Z12uart_getcharv>:

char uart_getchar()
{   
	while (! (uart0->ucr & UART_DR)) ;
 414:	78 02 00 00 	mvhi r2,0x0
 418:	38 42 0e 04 	ori r2,r2,0xe04
 41c:	28 41 00 00 	lw r1,(r2+0)
 420:	28 22 00 00 	lw r2,(r1+0)
 424:	28 41 00 00 	lw r1,(r2+0)
 428:	20 21 00 01 	andi r1,r1,0x1
 42c:	44 20 ff fe 	be r1,r0,424 <_Z12uart_getcharv+0x10>
	return uart0->rxtx;
 430:	28 41 00 04 	lw r1,(r2+4)
}
 434:	20 21 00 ff 	andi r1,r1,0xff
 438:	c3 a0 00 00 	ret

0000043c <_Z12uart_putcharc>:

void uart_putchar(char c)
{
	while (uart0->ucr & UART_BUSY) ;
 43c:	78 03 00 00 	mvhi r3,0x0
 440:	38 63 0e 08 	ori r3,r3,0xe08
 444:	28 62 00 00 	lw r2,(r3+0)
{
 448:	20 21 00 ff 	andi r1,r1,0xff
	while (uart0->ucr & UART_BUSY) ;
 44c:	28 43 00 00 	lw r3,(r2+0)
 450:	28 62 00 00 	lw r2,(r3+0)
 454:	20 42 00 10 	andi r2,r2,0x10
 458:	5c 40 ff fe 	bne r2,r0,450 <_Z12uart_putcharc+0x14>
	uart0->rxtx = c;
 45c:	58 61 00 04 	sw (r3+4),r1
}
 460:	c3 a0 00 00 	ret

00000464 <_Z11uart_putstrPc>:

void uart_putstr(char *str)
{
	char *c = str;
	while(*c) {
 464:	40 24 00 00 	lbu r4,(r1+0)
 468:	44 80 00 0c 	be r4,r0,498 <_Z11uart_putstrPc+0x34>
	while (uart0->ucr & UART_BUSY) ;
 46c:	78 03 00 00 	mvhi r3,0x0
 470:	38 63 0e 0c 	ori r3,r3,0xe0c
 474:	28 62 00 00 	lw r2,(r3+0)
 478:	28 43 00 00 	lw r3,(r2+0)
 47c:	28 62 00 00 	lw r2,(r3+0)
 480:	20 42 00 10 	andi r2,r2,0x10
 484:	5c 40 ff fe 	bne r2,r0,47c <_Z11uart_putstrPc+0x18>
	uart0->rxtx = c;
 488:	58 64 00 04 	sw (r3+4),r4
		uart_putchar(*c);
		c++;
 48c:	34 21 00 01 	addi r1,r1,1
	while(*c) {
 490:	40 24 00 00 	lbu r4,(r1+0)
 494:	5c 80 ff fa 	bne r4,r0,47c <_Z11uart_putstrPc+0x18>
	}
}
 498:	c3 a0 00 00 	ret

0000049c <_Z6pwm_enij>:
 * PWM Functions
 */

void pwm_en(int sel, uint32_t val){

	if(sel == 0) pwm0->en0 = val;
 49c:	5c 20 00 0e 	bne r1,r0,4d4 <_Z6pwm_enij+0x38>
 4a0:	78 04 00 00 	mvhi r4,0x0
 4a4:	38 84 0e 10 	ori r4,r4,0xe10
 4a8:	28 83 00 00 	lw r3,(r4+0)
 4ac:	28 63 00 00 	lw r3,(r3+0)
 4b0:	58 62 00 00 	sw (r3+0),r2
	if(sel == 1) pwm0->en1 = val;
	if(sel == 2) pwm0->en2 = val;
	if(sel == 3) pwm0->en3 = val;
	if(sel == 4) pwm0->en4 = val;
	if(sel == 5) pwm0->en5 = val;
 4b4:	34 03 00 05 	mvi r3,5
 4b8:	5c 23 00 16 	bne r1,r3,510 <_Z6pwm_enij+0x74>
 4bc:	78 04 00 00 	mvhi r4,0x0
 4c0:	38 84 0e 10 	ori r4,r4,0xe10
 4c4:	28 81 00 00 	lw r1,(r4+0)
 4c8:	28 21 00 00 	lw r1,(r1+0)
 4cc:	58 22 00 3c 	sw (r1+60),r2
	if(sel == 6) pwm0->en6 = val;
	if(sel == 7) pwm0->en7 = val;

}
 4d0:	c3 a0 00 00 	ret
	if(sel == 1) pwm0->en1 = val;
 4d4:	34 03 00 01 	mvi r3,1
 4d8:	5c 23 00 07 	bne r1,r3,4f4 <_Z6pwm_enij+0x58>
 4dc:	78 04 00 00 	mvhi r4,0x0
 4e0:	38 84 0e 10 	ori r4,r4,0xe10
 4e4:	28 83 00 00 	lw r3,(r4+0)
 4e8:	28 63 00 00 	lw r3,(r3+0)
 4ec:	58 62 00 0c 	sw (r3+12),r2
 4f0:	e3 ff ff f1 	bi 4b4 <_Z6pwm_enij+0x18>
	if(sel == 2) pwm0->en2 = val;
 4f4:	34 03 00 02 	mvi r3,2
 4f8:	5c 23 00 0e 	bne r1,r3,530 <_Z6pwm_enij+0x94>
 4fc:	78 04 00 00 	mvhi r4,0x0
 500:	38 84 0e 10 	ori r4,r4,0xe10
 504:	28 83 00 00 	lw r3,(r4+0)
 508:	28 63 00 00 	lw r3,(r3+0)
 50c:	58 62 00 18 	sw (r3+24),r2
	if(sel == 6) pwm0->en6 = val;
 510:	34 03 00 06 	mvi r3,6
 514:	5c 23 00 0e 	bne r1,r3,54c <_Z6pwm_enij+0xb0>
 518:	78 03 00 00 	mvhi r3,0x0
 51c:	38 63 0e 10 	ori r3,r3,0xe10
 520:	28 61 00 00 	lw r1,(r3+0)
 524:	28 21 00 00 	lw r1,(r1+0)
 528:	58 22 00 48 	sw (r1+72),r2
}
 52c:	c3 a0 00 00 	ret
	if(sel == 3) pwm0->en3 = val;
 530:	34 03 00 03 	mvi r3,3
 534:	5c 23 00 0e 	bne r1,r3,56c <_Z6pwm_enij+0xd0>
 538:	78 04 00 00 	mvhi r4,0x0
 53c:	38 84 0e 10 	ori r4,r4,0xe10
 540:	28 83 00 00 	lw r3,(r4+0)
 544:	28 63 00 00 	lw r3,(r3+0)
 548:	58 62 00 24 	sw (r3+36),r2
	if(sel == 7) pwm0->en7 = val;
 54c:	34 03 00 07 	mvi r3,7
 550:	5c 23 ff e0 	bne r1,r3,4d0 <_Z6pwm_enij+0x34>
 554:	78 04 00 00 	mvhi r4,0x0
 558:	38 84 0e 10 	ori r4,r4,0xe10
 55c:	28 81 00 00 	lw r1,(r4+0)
 560:	28 21 00 00 	lw r1,(r1+0)
 564:	58 22 00 54 	sw (r1+84),r2
}
 568:	c3 a0 00 00 	ret
	if(sel == 4) pwm0->en4 = val;
 56c:	34 03 00 04 	mvi r3,4
 570:	5c 23 ff d1 	bne r1,r3,4b4 <_Z6pwm_enij+0x18>
 574:	78 03 00 00 	mvhi r3,0x0
 578:	38 63 0e 10 	ori r3,r3,0xe10
 57c:	28 61 00 00 	lw r1,(r3+0)
 580:	28 21 00 00 	lw r1,(r1+0)
 584:	58 22 00 30 	sw (r1+48),r2
}
 588:	c3 a0 00 00 	ret

0000058c <_Z8pwm_dutyij>:

void pwm_duty(int sel, uint32_t val){

	if(sel == 0) pwm0->duty0 = val;
 58c:	5c 20 00 0e 	bne r1,r0,5c4 <_Z8pwm_dutyij+0x38>
 590:	78 04 00 00 	mvhi r4,0x0
 594:	38 84 0e 14 	ori r4,r4,0xe14
 598:	28 83 00 00 	lw r3,(r4+0)
 59c:	28 63 00 00 	lw r3,(r3+0)
 5a0:	58 62 00 08 	sw (r3+8),r2
	if(sel == 1) pwm0->duty1 = val;
	if(sel == 2) pwm0->duty2 = val;
	if(sel == 3) pwm0->duty3 = val;
	if(sel == 4) pwm0->duty4 = val;
	if(sel == 5) pwm0->duty5 = val;
 5a4:	34 03 00 05 	mvi r3,5
 5a8:	5c 23 00 16 	bne r1,r3,600 <_Z8pwm_dutyij+0x74>
 5ac:	78 04 00 00 	mvhi r4,0x0
 5b0:	38 84 0e 14 	ori r4,r4,0xe14
 5b4:	28 81 00 00 	lw r1,(r4+0)
 5b8:	28 21 00 00 	lw r1,(r1+0)
 5bc:	58 22 00 44 	sw (r1+68),r2
	if(sel == 6) pwm0->duty6 = val;
	if(sel == 7) pwm0->duty7 = val;

}
 5c0:	c3 a0 00 00 	ret
	if(sel == 1) pwm0->duty1 = val;
 5c4:	34 03 00 01 	mvi r3,1
 5c8:	5c 23 00 07 	bne r1,r3,5e4 <_Z8pwm_dutyij+0x58>
 5cc:	78 04 00 00 	mvhi r4,0x0
 5d0:	38 84 0e 14 	ori r4,r4,0xe14
 5d4:	28 83 00 00 	lw r3,(r4+0)
 5d8:	28 63 00 00 	lw r3,(r3+0)
 5dc:	58 62 00 14 	sw (r3+20),r2
 5e0:	e3 ff ff f1 	bi 5a4 <_Z8pwm_dutyij+0x18>
	if(sel == 2) pwm0->duty2 = val;
 5e4:	34 03 00 02 	mvi r3,2
 5e8:	5c 23 00 0e 	bne r1,r3,620 <_Z8pwm_dutyij+0x94>
 5ec:	78 04 00 00 	mvhi r4,0x0
 5f0:	38 84 0e 14 	ori r4,r4,0xe14
 5f4:	28 83 00 00 	lw r3,(r4+0)
 5f8:	28 63 00 00 	lw r3,(r3+0)
 5fc:	58 62 00 20 	sw (r3+32),r2
	if(sel == 6) pwm0->duty6 = val;
 600:	34 03 00 06 	mvi r3,6
 604:	5c 23 00 0e 	bne r1,r3,63c <_Z8pwm_dutyij+0xb0>
 608:	78 03 00 00 	mvhi r3,0x0
 60c:	38 63 0e 14 	ori r3,r3,0xe14
 610:	28 61 00 00 	lw r1,(r3+0)
 614:	28 21 00 00 	lw r1,(r1+0)
 618:	58 22 00 50 	sw (r1+80),r2
}
 61c:	c3 a0 00 00 	ret
	if(sel == 3) pwm0->duty3 = val;
 620:	34 03 00 03 	mvi r3,3
 624:	5c 23 00 0e 	bne r1,r3,65c <_Z8pwm_dutyij+0xd0>
 628:	78 04 00 00 	mvhi r4,0x0
 62c:	38 84 0e 14 	ori r4,r4,0xe14
 630:	28 83 00 00 	lw r3,(r4+0)
 634:	28 63 00 00 	lw r3,(r3+0)
 638:	58 62 00 2c 	sw (r3+44),r2
	if(sel == 7) pwm0->duty7 = val;
 63c:	34 03 00 07 	mvi r3,7
 640:	5c 23 ff e0 	bne r1,r3,5c0 <_Z8pwm_dutyij+0x34>
 644:	78 04 00 00 	mvhi r4,0x0
 648:	38 84 0e 14 	ori r4,r4,0xe14
 64c:	28 81 00 00 	lw r1,(r4+0)
 650:	28 21 00 00 	lw r1,(r1+0)
 654:	58 22 00 5c 	sw (r1+92),r2
}
 658:	c3 a0 00 00 	ret
	if(sel == 4) pwm0->duty4 = val;
 65c:	34 03 00 04 	mvi r3,4
 660:	5c 23 ff d1 	bne r1,r3,5a4 <_Z8pwm_dutyij+0x18>
 664:	78 03 00 00 	mvhi r3,0x0
 668:	38 63 0e 14 	ori r3,r3,0xe14
 66c:	28 61 00 00 	lw r1,(r3+0)
 670:	28 21 00 00 	lw r1,(r1+0)
 674:	58 22 00 38 	sw (r1+56),r2
}
 678:	c3 a0 00 00 	ret

0000067c <_Z10pwm_periodij>:

void pwm_period(int sel, uint32_t val){

	if(sel == 0) pwm0->period0 = val;
 67c:	5c 20 00 0e 	bne r1,r0,6b4 <_Z10pwm_periodij+0x38>
 680:	78 04 00 00 	mvhi r4,0x0
 684:	38 84 0e 18 	ori r4,r4,0xe18
 688:	28 83 00 00 	lw r3,(r4+0)
 68c:	28 63 00 00 	lw r3,(r3+0)
 690:	58 62 00 04 	sw (r3+4),r2
	if(sel == 1) pwm0->period1 = val;
	if(sel == 2) pwm0->period2 = val;
	if(sel == 3) pwm0->period3 = val;
	if(sel == 4) pwm0->period4 = val;
	if(sel == 5) pwm0->period5 = val;
 694:	34 03 00 05 	mvi r3,5
 698:	5c 23 00 16 	bne r1,r3,6f0 <_Z10pwm_periodij+0x74>
 69c:	78 04 00 00 	mvhi r4,0x0
 6a0:	38 84 0e 18 	ori r4,r4,0xe18
 6a4:	28 81 00 00 	lw r1,(r4+0)
 6a8:	28 21 00 00 	lw r1,(r1+0)
 6ac:	58 22 00 40 	sw (r1+64),r2
	if(sel == 6) pwm0->period6 = val;
	if(sel == 7) pwm0->period7 = val;

}
 6b0:	c3 a0 00 00 	ret
	if(sel == 1) pwm0->period1 = val;
 6b4:	34 03 00 01 	mvi r3,1
 6b8:	5c 23 00 07 	bne r1,r3,6d4 <_Z10pwm_periodij+0x58>
 6bc:	78 04 00 00 	mvhi r4,0x0
 6c0:	38 84 0e 18 	ori r4,r4,0xe18
 6c4:	28 83 00 00 	lw r3,(r4+0)
 6c8:	28 63 00 00 	lw r3,(r3+0)
 6cc:	58 62 00 10 	sw (r3+16),r2
 6d0:	e3 ff ff f1 	bi 694 <_Z10pwm_periodij+0x18>
	if(sel == 2) pwm0->period2 = val;
 6d4:	34 03 00 02 	mvi r3,2
 6d8:	5c 23 00 0e 	bne r1,r3,710 <_Z10pwm_periodij+0x94>
 6dc:	78 04 00 00 	mvhi r4,0x0
 6e0:	38 84 0e 18 	ori r4,r4,0xe18
 6e4:	28 83 00 00 	lw r3,(r4+0)
 6e8:	28 63 00 00 	lw r3,(r3+0)
 6ec:	58 62 00 1c 	sw (r3+28),r2
	if(sel == 6) pwm0->period6 = val;
 6f0:	34 03 00 06 	mvi r3,6
 6f4:	5c 23 00 0e 	bne r1,r3,72c <_Z10pwm_periodij+0xb0>
 6f8:	78 03 00 00 	mvhi r3,0x0
 6fc:	38 63 0e 18 	ori r3,r3,0xe18
 700:	28 61 00 00 	lw r1,(r3+0)
 704:	28 21 00 00 	lw r1,(r1+0)
 708:	58 22 00 4c 	sw (r1+76),r2
}
 70c:	c3 a0 00 00 	ret
	if(sel == 3) pwm0->period3 = val;
 710:	34 03 00 03 	mvi r3,3
 714:	5c 23 00 0e 	bne r1,r3,74c <_Z10pwm_periodij+0xd0>
 718:	78 04 00 00 	mvhi r4,0x0
 71c:	38 84 0e 18 	ori r4,r4,0xe18
 720:	28 83 00 00 	lw r3,(r4+0)
 724:	28 63 00 00 	lw r3,(r3+0)
 728:	58 62 00 28 	sw (r3+40),r2
	if(sel == 7) pwm0->period7 = val;
 72c:	34 03 00 07 	mvi r3,7
 730:	5c 23 ff e0 	bne r1,r3,6b0 <_Z10pwm_periodij+0x34>
 734:	78 04 00 00 	mvhi r4,0x0
 738:	38 84 0e 18 	ori r4,r4,0xe18
 73c:	28 81 00 00 	lw r1,(r4+0)
 740:	28 21 00 00 	lw r1,(r1+0)
 744:	58 22 00 58 	sw (r1+88),r2
}
 748:	c3 a0 00 00 	ret
	if(sel == 4) pwm0->period4 = val;
 74c:	34 03 00 04 	mvi r3,4
 750:	5c 23 ff d1 	bne r1,r3,694 <_Z10pwm_periodij+0x18>
 754:	78 03 00 00 	mvhi r3,0x0
 758:	38 63 0e 18 	ori r3,r3,0xe18
 75c:	28 61 00 00 	lw r1,(r3+0)
 760:	28 21 00 00 	lw r1,(r1+0)
 764:	58 22 00 34 	sw (r1+52),r2
}
 768:	c3 a0 00 00 	ret

0000076c <_Z9pwm_getenj>:

uint32_t pwm_geten(uint32_t sel){

	if(sel == 0) return pwm0->en0;
 76c:	44 20 00 16 	be r1,r0,7c4 <_Z9pwm_getenj+0x58>
	if(sel == 1) return pwm0->en1;
 770:	34 02 00 01 	mvi r2,1
 774:	44 22 00 1b 	be r1,r2,7e0 <_Z9pwm_getenj+0x74>
	if(sel == 2) return pwm0->en2;
 778:	34 02 00 02 	mvi r2,2
 77c:	44 22 00 26 	be r1,r2,814 <_Z9pwm_getenj+0xa8>
	if(sel == 3) return pwm0->en3;
 780:	34 02 00 03 	mvi r2,3
 784:	44 22 00 1e 	be r1,r2,7fc <_Z9pwm_getenj+0x90>
	if(sel == 4) return pwm0->en4;
 788:	34 02 00 04 	mvi r2,4
 78c:	44 22 00 29 	be r1,r2,830 <_Z9pwm_getenj+0xc4>
	if(sel == 5) return pwm0->en5;
 790:	34 02 00 05 	mvi r2,5
 794:	44 22 00 2d 	be r1,r2,848 <_Z9pwm_getenj+0xdc>
	if(sel == 6) return pwm0->en6;
 798:	34 02 00 06 	mvi r2,6
 79c:	44 22 00 31 	be r1,r2,860 <_Z9pwm_getenj+0xf4>
	if(sel == 7) return pwm0->en7;
 7a0:	34 03 00 07 	mvi r3,7
	return 0;
 7a4:	34 02 00 00 	mvi r2,0
	if(sel == 7) return pwm0->en7;
 7a8:	5c 23 00 0c 	bne r1,r3,7d8 <_Z9pwm_getenj+0x6c>
 7ac:	78 02 00 00 	mvhi r2,0x0
 7b0:	38 42 0e 1c 	ori r2,r2,0xe1c
 7b4:	28 41 00 00 	lw r1,(r2+0)
 7b8:	28 21 00 00 	lw r1,(r1+0)
 7bc:	28 22 00 54 	lw r2,(r1+84)
 7c0:	e0 00 00 06 	bi 7d8 <_Z9pwm_getenj+0x6c>
	if(sel == 0) return pwm0->en0;
 7c4:	78 02 00 00 	mvhi r2,0x0
 7c8:	38 42 0e 1c 	ori r2,r2,0xe1c
 7cc:	28 41 00 00 	lw r1,(r2+0)
 7d0:	28 21 00 00 	lw r1,(r1+0)
 7d4:	28 22 00 00 	lw r2,(r1+0)

}
 7d8:	b8 40 08 00 	mv r1,r2
 7dc:	c3 a0 00 00 	ret
	if(sel == 1) return pwm0->en1;
 7e0:	78 02 00 00 	mvhi r2,0x0
 7e4:	38 42 0e 1c 	ori r2,r2,0xe1c
 7e8:	28 41 00 00 	lw r1,(r2+0)
 7ec:	28 21 00 00 	lw r1,(r1+0)
 7f0:	28 22 00 0c 	lw r2,(r1+12)
}
 7f4:	b8 40 08 00 	mv r1,r2
 7f8:	c3 a0 00 00 	ret
	if(sel == 3) return pwm0->en3;
 7fc:	78 02 00 00 	mvhi r2,0x0
 800:	38 42 0e 1c 	ori r2,r2,0xe1c
 804:	28 41 00 00 	lw r1,(r2+0)
 808:	28 21 00 00 	lw r1,(r1+0)
 80c:	28 22 00 24 	lw r2,(r1+36)
 810:	e3 ff ff f2 	bi 7d8 <_Z9pwm_getenj+0x6c>
	if(sel == 2) return pwm0->en2;
 814:	78 02 00 00 	mvhi r2,0x0
 818:	38 42 0e 1c 	ori r2,r2,0xe1c
 81c:	28 41 00 00 	lw r1,(r2+0)
 820:	28 21 00 00 	lw r1,(r1+0)
 824:	28 22 00 18 	lw r2,(r1+24)
}
 828:	b8 40 08 00 	mv r1,r2
 82c:	c3 a0 00 00 	ret
	if(sel == 4) return pwm0->en4;
 830:	78 02 00 00 	mvhi r2,0x0
 834:	38 42 0e 1c 	ori r2,r2,0xe1c
 838:	28 41 00 00 	lw r1,(r2+0)
 83c:	28 21 00 00 	lw r1,(r1+0)
 840:	28 22 00 30 	lw r2,(r1+48)
 844:	e3 ff ff e5 	bi 7d8 <_Z9pwm_getenj+0x6c>
	if(sel == 5) return pwm0->en5;
 848:	78 02 00 00 	mvhi r2,0x0
 84c:	38 42 0e 1c 	ori r2,r2,0xe1c
 850:	28 41 00 00 	lw r1,(r2+0)
 854:	28 21 00 00 	lw r1,(r1+0)
 858:	28 22 00 3c 	lw r2,(r1+60)
 85c:	e3 ff ff df 	bi 7d8 <_Z9pwm_getenj+0x6c>
	if(sel == 6) return pwm0->en6;
 860:	78 02 00 00 	mvhi r2,0x0
 864:	38 42 0e 1c 	ori r2,r2,0xe1c
 868:	28 41 00 00 	lw r1,(r2+0)
 86c:	28 21 00 00 	lw r1,(r1+0)
 870:	28 22 00 48 	lw r2,(r1+72)
 874:	e3 ff ff d9 	bi 7d8 <_Z9pwm_getenj+0x6c>

00000878 <_Z11pwm_getdutyj>:

uint32_t pwm_getduty(uint32_t sel){

	if(sel == 0) return pwm0->duty0;
 878:	44 20 00 16 	be r1,r0,8d0 <_Z11pwm_getdutyj+0x58>
	if(sel == 1) return pwm0->duty1;
 87c:	34 02 00 01 	mvi r2,1
 880:	44 22 00 1b 	be r1,r2,8ec <_Z11pwm_getdutyj+0x74>
	if(sel == 2) return pwm0->duty2;
 884:	34 02 00 02 	mvi r2,2
 888:	44 22 00 26 	be r1,r2,920 <_Z11pwm_getdutyj+0xa8>
	if(sel == 3) return pwm0->duty3;
 88c:	34 02 00 03 	mvi r2,3
 890:	44 22 00 1e 	be r1,r2,908 <_Z11pwm_getdutyj+0x90>
	if(sel == 4) return pwm0->duty4;
 894:	34 02 00 04 	mvi r2,4
 898:	44 22 00 29 	be r1,r2,93c <_Z11pwm_getdutyj+0xc4>
	if(sel == 5) return pwm0->duty5;
 89c:	34 02 00 05 	mvi r2,5
 8a0:	44 22 00 2d 	be r1,r2,954 <_Z11pwm_getdutyj+0xdc>
	if(sel == 6) return pwm0->duty6;
 8a4:	34 02 00 06 	mvi r2,6
 8a8:	44 22 00 31 	be r1,r2,96c <_Z11pwm_getdutyj+0xf4>
	if(sel == 7) return pwm0->duty7;
 8ac:	34 03 00 07 	mvi r3,7
	return 0;
 8b0:	34 02 00 00 	mvi r2,0
	if(sel == 7) return pwm0->duty7;
 8b4:	5c 23 00 0c 	bne r1,r3,8e4 <_Z11pwm_getdutyj+0x6c>
 8b8:	78 02 00 00 	mvhi r2,0x0
 8bc:	38 42 0e 20 	ori r2,r2,0xe20
 8c0:	28 41 00 00 	lw r1,(r2+0)
 8c4:	28 21 00 00 	lw r1,(r1+0)
 8c8:	28 22 00 5c 	lw r2,(r1+92)
 8cc:	e0 00 00 06 	bi 8e4 <_Z11pwm_getdutyj+0x6c>
	if(sel == 0) return pwm0->duty0;
 8d0:	78 02 00 00 	mvhi r2,0x0
 8d4:	38 42 0e 20 	ori r2,r2,0xe20
 8d8:	28 41 00 00 	lw r1,(r2+0)
 8dc:	28 21 00 00 	lw r1,(r1+0)
 8e0:	28 22 00 08 	lw r2,(r1+8)
	
}
 8e4:	b8 40 08 00 	mv r1,r2
 8e8:	c3 a0 00 00 	ret
	if(sel == 1) return pwm0->duty1;
 8ec:	78 02 00 00 	mvhi r2,0x0
 8f0:	38 42 0e 20 	ori r2,r2,0xe20
 8f4:	28 41 00 00 	lw r1,(r2+0)
 8f8:	28 21 00 00 	lw r1,(r1+0)
 8fc:	28 22 00 14 	lw r2,(r1+20)
}
 900:	b8 40 08 00 	mv r1,r2
 904:	c3 a0 00 00 	ret
	if(sel == 3) return pwm0->duty3;
 908:	78 02 00 00 	mvhi r2,0x0
 90c:	38 42 0e 20 	ori r2,r2,0xe20
 910:	28 41 00 00 	lw r1,(r2+0)
 914:	28 21 00 00 	lw r1,(r1+0)
 918:	28 22 00 2c 	lw r2,(r1+44)
 91c:	e3 ff ff f2 	bi 8e4 <_Z11pwm_getdutyj+0x6c>
	if(sel == 2) return pwm0->duty2;
 920:	78 02 00 00 	mvhi r2,0x0
 924:	38 42 0e 20 	ori r2,r2,0xe20
 928:	28 41 00 00 	lw r1,(r2+0)
 92c:	28 21 00 00 	lw r1,(r1+0)
 930:	28 22 00 20 	lw r2,(r1+32)
}
 934:	b8 40 08 00 	mv r1,r2
 938:	c3 a0 00 00 	ret
	if(sel == 4) return pwm0->duty4;
 93c:	78 02 00 00 	mvhi r2,0x0
 940:	38 42 0e 20 	ori r2,r2,0xe20
 944:	28 41 00 00 	lw r1,(r2+0)
 948:	28 21 00 00 	lw r1,(r1+0)
 94c:	28 22 00 38 	lw r2,(r1+56)
 950:	e3 ff ff e5 	bi 8e4 <_Z11pwm_getdutyj+0x6c>
	if(sel == 5) return pwm0->duty5;
 954:	78 02 00 00 	mvhi r2,0x0
 958:	38 42 0e 20 	ori r2,r2,0xe20
 95c:	28 41 00 00 	lw r1,(r2+0)
 960:	28 21 00 00 	lw r1,(r1+0)
 964:	28 22 00 44 	lw r2,(r1+68)
 968:	e3 ff ff df 	bi 8e4 <_Z11pwm_getdutyj+0x6c>
	if(sel == 6) return pwm0->duty6;
 96c:	78 02 00 00 	mvhi r2,0x0
 970:	38 42 0e 20 	ori r2,r2,0xe20
 974:	28 41 00 00 	lw r1,(r2+0)
 978:	28 21 00 00 	lw r1,(r1+0)
 97c:	28 22 00 50 	lw r2,(r1+80)
 980:	e3 ff ff d9 	bi 8e4 <_Z11pwm_getdutyj+0x6c>

00000984 <_Z13pwm_getperiodj>:

uint32_t pwm_getperiod(uint32_t sel){

	if(sel == 0) return pwm0->period0;
 984:	44 20 00 16 	be r1,r0,9dc <_Z13pwm_getperiodj+0x58>
	if(sel == 1) return pwm0->period1;
 988:	34 02 00 01 	mvi r2,1
 98c:	44 22 00 1b 	be r1,r2,9f8 <_Z13pwm_getperiodj+0x74>
	if(sel == 2) return pwm0->period2;
 990:	34 02 00 02 	mvi r2,2
 994:	44 22 00 26 	be r1,r2,a2c <_Z13pwm_getperiodj+0xa8>
	if(sel == 3) return pwm0->period3;
 998:	34 02 00 03 	mvi r2,3
 99c:	44 22 00 1e 	be r1,r2,a14 <_Z13pwm_getperiodj+0x90>
	if(sel == 4) return pwm0->period4;
 9a0:	34 02 00 04 	mvi r2,4
 9a4:	44 22 00 29 	be r1,r2,a48 <_Z13pwm_getperiodj+0xc4>
	if(sel == 5) return pwm0->period5;
 9a8:	34 02 00 05 	mvi r2,5
 9ac:	44 22 00 2d 	be r1,r2,a60 <_Z13pwm_getperiodj+0xdc>
	if(sel == 6) return pwm0->period6;
 9b0:	34 02 00 06 	mvi r2,6
 9b4:	44 22 00 31 	be r1,r2,a78 <_Z13pwm_getperiodj+0xf4>
	if(sel == 7) return pwm0->period7;
 9b8:	34 03 00 07 	mvi r3,7
	return 0;
 9bc:	34 02 00 00 	mvi r2,0
	if(sel == 7) return pwm0->period7;
 9c0:	5c 23 00 0c 	bne r1,r3,9f0 <_Z13pwm_getperiodj+0x6c>
 9c4:	78 02 00 00 	mvhi r2,0x0
 9c8:	38 42 0e 24 	ori r2,r2,0xe24
 9cc:	28 41 00 00 	lw r1,(r2+0)
 9d0:	28 21 00 00 	lw r1,(r1+0)
 9d4:	28 22 00 58 	lw r2,(r1+88)
 9d8:	e0 00 00 06 	bi 9f0 <_Z13pwm_getperiodj+0x6c>
	if(sel == 0) return pwm0->period0;
 9dc:	78 02 00 00 	mvhi r2,0x0
 9e0:	38 42 0e 24 	ori r2,r2,0xe24
 9e4:	28 41 00 00 	lw r1,(r2+0)
 9e8:	28 21 00 00 	lw r1,(r1+0)
 9ec:	28 22 00 04 	lw r2,(r1+4)
	
}
 9f0:	b8 40 08 00 	mv r1,r2
 9f4:	c3 a0 00 00 	ret
	if(sel == 1) return pwm0->period1;
 9f8:	78 02 00 00 	mvhi r2,0x0
 9fc:	38 42 0e 24 	ori r2,r2,0xe24
 a00:	28 41 00 00 	lw r1,(r2+0)
 a04:	28 21 00 00 	lw r1,(r1+0)
 a08:	28 22 00 10 	lw r2,(r1+16)
}
 a0c:	b8 40 08 00 	mv r1,r2
 a10:	c3 a0 00 00 	ret
	if(sel == 3) return pwm0->period3;
 a14:	78 02 00 00 	mvhi r2,0x0
 a18:	38 42 0e 24 	ori r2,r2,0xe24
 a1c:	28 41 00 00 	lw r1,(r2+0)
 a20:	28 21 00 00 	lw r1,(r1+0)
 a24:	28 22 00 28 	lw r2,(r1+40)
 a28:	e3 ff ff f2 	bi 9f0 <_Z13pwm_getperiodj+0x6c>
	if(sel == 2) return pwm0->period2;
 a2c:	78 02 00 00 	mvhi r2,0x0
 a30:	38 42 0e 24 	ori r2,r2,0xe24
 a34:	28 41 00 00 	lw r1,(r2+0)
 a38:	28 21 00 00 	lw r1,(r1+0)
 a3c:	28 22 00 1c 	lw r2,(r1+28)
}
 a40:	b8 40 08 00 	mv r1,r2
 a44:	c3 a0 00 00 	ret
	if(sel == 4) return pwm0->period4;
 a48:	78 02 00 00 	mvhi r2,0x0
 a4c:	38 42 0e 24 	ori r2,r2,0xe24
 a50:	28 41 00 00 	lw r1,(r2+0)
 a54:	28 21 00 00 	lw r1,(r1+0)
 a58:	28 22 00 34 	lw r2,(r1+52)
 a5c:	e3 ff ff e5 	bi 9f0 <_Z13pwm_getperiodj+0x6c>
	if(sel == 5) return pwm0->period5;
 a60:	78 02 00 00 	mvhi r2,0x0
 a64:	38 42 0e 24 	ori r2,r2,0xe24
 a68:	28 41 00 00 	lw r1,(r2+0)
 a6c:	28 21 00 00 	lw r1,(r1+0)
 a70:	28 22 00 40 	lw r2,(r1+64)
 a74:	e3 ff ff df 	bi 9f0 <_Z13pwm_getperiodj+0x6c>
	if(sel == 6) return pwm0->period6;
 a78:	78 02 00 00 	mvhi r2,0x0
 a7c:	38 42 0e 24 	ori r2,r2,0xe24
 a80:	28 41 00 00 	lw r1,(r2+0)
 a84:	28 21 00 00 	lw r1,(r1+0)
 a88:	28 22 00 4c 	lw r2,(r1+76)
 a8c:	e3 ff ff d9 	bi 9f0 <_Z13pwm_getperiodj+0x6c>

00000a90 <_ZN3arm4homeEv>:

/***************************************************************************
 * ARM Functions
 */

void arm::home(){
 a90:	37 9c ff f4 	addi sp,sp,-12
 a94:	5b 8b 00 0c 	sw (sp+12),r11
 a98:	5b 8c 00 08 	sw (sp+8),r12
 a9c:	5b 9d 00 04 	sw (sp+4),ra
	timer0->compare1 = (FCPU/1000)*msec;
 aa0:	78 02 00 00 	mvhi r2,0x0
 aa4:	38 42 0e 28 	ori r2,r2,0xe28
void arm::home(){
 aa8:	b8 20 58 00 	mv r11,r1
	pwm_duty(serv2,DER);
 aac:	28 21 00 04 	lw r1,(r1+4)
	timer0->compare1 = (FCPU/1000)*msec;
 ab0:	28 4c 00 00 	lw r12,(r2+0)
	pwm_duty(serv2,DER);
 ab4:	34 02 00 19 	mvi r2,25
 ab8:	fb ff fe b5 	calli 58c <_Z8pwm_dutyij>
	timer0->compare1 = (FCPU/1000)*msec;
 abc:	29 82 00 00 	lw r2,(r12+0)
 ac0:	38 01 f0 80 	mvu r1,0xf080
 ac4:	78 21 02 fa 	orhi r1,r1,0x2fa
 ac8:	58 41 00 10 	sw (r2+16),r1
	timer0->counter1 = 0;
 acc:	58 40 00 14 	sw (r2+20),r0
	timer0->tcr1 = TIMER_EN;
 ad0:	34 01 00 08 	mvi r1,8
 ad4:	58 41 00 0c 	sw (r2+12),r1
 		tcr = timer0->tcr1;
 ad8:	28 41 00 0c 	lw r1,(r2+12)
 	} while ( ! (tcr & TIMER_TRIG) );
 adc:	20 21 00 01 	andi r1,r1,0x1
 ae0:	44 20 ff fe 	be r1,r0,ad8 <_ZN3arm4homeEv+0x48>
	msleep(1000);
	pwm_duty(serv1,MID);
 ae4:	29 61 00 00 	lw r1,(r11+0)
 ae8:	34 02 00 0f 	mvi r2,15
 aec:	fb ff fe a8 	calli 58c <_Z8pwm_dutyij>
	timer0->compare1 = (FCPU/1000)*msec;
 af0:	29 82 00 00 	lw r2,(r12+0)
 af4:	38 01 f0 80 	mvu r1,0xf080
 af8:	78 21 02 fa 	orhi r1,r1,0x2fa
 afc:	58 41 00 10 	sw (r2+16),r1
	timer0->counter1 = 0;
 b00:	58 40 00 14 	sw (r2+20),r0
	timer0->tcr1 = TIMER_EN;
 b04:	34 01 00 08 	mvi r1,8
 b08:	58 41 00 0c 	sw (r2+12),r1
 		tcr = timer0->tcr1;
 b0c:	28 41 00 0c 	lw r1,(r2+12)
 	} while ( ! (tcr & TIMER_TRIG) );
 b10:	20 21 00 01 	andi r1,r1,0x1
 b14:	44 20 ff fe 	be r1,r0,b0c <_ZN3arm4homeEv+0x7c>
	msleep(1000);
	pwm_duty(serv2,IZ);
 b18:	29 61 00 04 	lw r1,(r11+4)
 b1c:	34 02 00 05 	mvi r2,5
 b20:	fb ff fe 9b 	calli 58c <_Z8pwm_dutyij>
}
 b24:	2b 9d 00 04 	lw ra,(sp+4)
 b28:	2b 8b 00 0c 	lw r11,(sp+12)
 b2c:	2b 8c 00 08 	lw r12,(sp+8)
 b30:	37 9c 00 0c 	addi sp,sp,12
 b34:	c3 a0 00 00 	ret

00000b38 <_ZN3arm7derechaEv>:

void arm::derecha(){
 b38:	37 9c ff f4 	addi sp,sp,-12
 b3c:	5b 8b 00 0c 	sw (sp+12),r11
 b40:	5b 8c 00 08 	sw (sp+8),r12
 b44:	5b 9d 00 04 	sw (sp+4),ra
	timer0->compare1 = (FCPU/1000)*msec;
 b48:	78 02 00 00 	mvhi r2,0x0
 b4c:	38 42 0e 2c 	ori r2,r2,0xe2c
void arm::derecha(){
 b50:	b8 20 58 00 	mv r11,r1
	pwm_duty(serv1,MID);
 b54:	28 21 00 00 	lw r1,(r1+0)
	timer0->compare1 = (FCPU/1000)*msec;
 b58:	28 4c 00 00 	lw r12,(r2+0)
	pwm_duty(serv1,MID);
 b5c:	34 02 00 0f 	mvi r2,15
 b60:	fb ff fe 8b 	calli 58c <_Z8pwm_dutyij>
	timer0->compare1 = (FCPU/1000)*msec;
 b64:	29 82 00 00 	lw r2,(r12+0)
 b68:	38 01 f0 80 	mvu r1,0xf080
 b6c:	78 21 02 fa 	orhi r1,r1,0x2fa
 b70:	58 41 00 10 	sw (r2+16),r1
	timer0->counter1 = 0;
 b74:	58 40 00 14 	sw (r2+20),r0
	timer0->tcr1 = TIMER_EN;
 b78:	34 01 00 08 	mvi r1,8
 b7c:	58 41 00 0c 	sw (r2+12),r1
 		tcr = timer0->tcr1;
 b80:	28 41 00 0c 	lw r1,(r2+12)
 	} while ( ! (tcr & TIMER_TRIG) );
 b84:	20 21 00 01 	andi r1,r1,0x1
 b88:	44 20 ff fe 	be r1,r0,b80 <_ZN3arm7derechaEv+0x48>
	msleep(1000);
	pwm_duty(serv1,DER);
 b8c:	29 61 00 00 	lw r1,(r11+0)
 b90:	34 02 00 19 	mvi r2,25
 b94:	fb ff fe 7e 	calli 58c <_Z8pwm_dutyij>
	timer0->compare1 = (FCPU/1000)*msec;
 b98:	29 82 00 00 	lw r2,(r12+0)
 b9c:	38 01 f0 80 	mvu r1,0xf080
 ba0:	78 21 02 fa 	orhi r1,r1,0x2fa
 ba4:	58 41 00 10 	sw (r2+16),r1
	timer0->counter1 = 0;
 ba8:	58 40 00 14 	sw (r2+20),r0
	timer0->tcr1 = TIMER_EN;
 bac:	34 01 00 08 	mvi r1,8
 bb0:	58 41 00 0c 	sw (r2+12),r1
 		tcr = timer0->tcr1;
 bb4:	28 41 00 0c 	lw r1,(r2+12)
 	} while ( ! (tcr & TIMER_TRIG) );
 bb8:	20 21 00 01 	andi r1,r1,0x1
 bbc:	44 20 ff fe 	be r1,r0,bb4 <_ZN3arm7derechaEv+0x7c>
	msleep(1000);
	pwm_duty(serv2,IZ);
 bc0:	29 61 00 04 	lw r1,(r11+4)
 bc4:	34 02 00 05 	mvi r2,5
 bc8:	fb ff fe 71 	calli 58c <_Z8pwm_dutyij>
	timer0->compare1 = (FCPU/1000)*msec;
 bcc:	29 82 00 00 	lw r2,(r12+0)
 bd0:	38 01 f0 80 	mvu r1,0xf080
 bd4:	78 21 02 fa 	orhi r1,r1,0x2fa
 bd8:	58 41 00 10 	sw (r2+16),r1
	timer0->counter1 = 0;
 bdc:	58 40 00 14 	sw (r2+20),r0
	timer0->tcr1 = TIMER_EN;
 be0:	34 01 00 08 	mvi r1,8
 be4:	58 41 00 0c 	sw (r2+12),r1
 		tcr = timer0->tcr1;
 be8:	28 41 00 0c 	lw r1,(r2+12)
 	} while ( ! (tcr & TIMER_TRIG) );
 bec:	20 21 00 01 	andi r1,r1,0x1
 bf0:	44 20 ff fe 	be r1,r0,be8 <_ZN3arm7derechaEv+0xb0>
	msleep(1000);
	pwm_duty(serv1,MID);
 bf4:	29 61 00 00 	lw r1,(r11+0)
 bf8:	34 02 00 0f 	mvi r2,15
 bfc:	fb ff fe 64 	calli 58c <_Z8pwm_dutyij>
	timer0->compare1 = (FCPU/1000)*msec;
 c00:	29 82 00 00 	lw r2,(r12+0)
 c04:	38 01 f0 80 	mvu r1,0xf080
 c08:	78 21 02 fa 	orhi r1,r1,0x2fa
 c0c:	58 41 00 10 	sw (r2+16),r1
	timer0->counter1 = 0;
 c10:	58 40 00 14 	sw (r2+20),r0
	timer0->tcr1 = TIMER_EN;
 c14:	34 01 00 08 	mvi r1,8
 c18:	58 41 00 0c 	sw (r2+12),r1
 		tcr = timer0->tcr1;
 c1c:	28 41 00 0c 	lw r1,(r2+12)
 	} while ( ! (tcr & TIMER_TRIG) );
 c20:	20 21 00 01 	andi r1,r1,0x1
 c24:	44 20 ff fe 	be r1,r0,c1c <_ZN3arm7derechaEv+0xe4>
	msleep(1000);
	pwm_duty(serv2,DER);
 c28:	29 61 00 04 	lw r1,(r11+4)
 c2c:	34 02 00 19 	mvi r2,25
 c30:	fb ff fe 57 	calli 58c <_Z8pwm_dutyij>
}
 c34:	2b 9d 00 04 	lw ra,(sp+4)
 c38:	2b 8b 00 0c 	lw r11,(sp+12)
 c3c:	2b 8c 00 08 	lw r12,(sp+8)
 c40:	37 9c 00 0c 	addi sp,sp,12
 c44:	c3 a0 00 00 	ret

00000c48 <_ZN3arm9izquierdaEv>:
void arm::izquierda(){
 c48:	37 9c ff f4 	addi sp,sp,-12
 c4c:	5b 8b 00 0c 	sw (sp+12),r11
 c50:	5b 8c 00 08 	sw (sp+8),r12
 c54:	5b 9d 00 04 	sw (sp+4),ra
	timer0->compare1 = (FCPU/1000)*msec;
 c58:	78 02 00 00 	mvhi r2,0x0
 c5c:	38 42 0e 30 	ori r2,r2,0xe30
void arm::izquierda(){
 c60:	b8 20 58 00 	mv r11,r1
	pwm_duty(serv1,MID);
 c64:	28 21 00 00 	lw r1,(r1+0)
	timer0->compare1 = (FCPU/1000)*msec;
 c68:	28 4c 00 00 	lw r12,(r2+0)
	pwm_duty(serv1,MID);
 c6c:	34 02 00 0f 	mvi r2,15
 c70:	fb ff fe 47 	calli 58c <_Z8pwm_dutyij>
	timer0->compare1 = (FCPU/1000)*msec;
 c74:	29 82 00 00 	lw r2,(r12+0)
 c78:	38 01 f0 80 	mvu r1,0xf080
 c7c:	78 21 02 fa 	orhi r1,r1,0x2fa
 c80:	58 41 00 10 	sw (r2+16),r1
	timer0->counter1 = 0;
 c84:	58 40 00 14 	sw (r2+20),r0
	timer0->tcr1 = TIMER_EN;
 c88:	34 01 00 08 	mvi r1,8
 c8c:	58 41 00 0c 	sw (r2+12),r1
 		tcr = timer0->tcr1;
 c90:	28 41 00 0c 	lw r1,(r2+12)
 	} while ( ! (tcr & TIMER_TRIG) );
 c94:	20 21 00 01 	andi r1,r1,0x1
 c98:	44 20 ff fe 	be r1,r0,c90 <_ZN3arm9izquierdaEv+0x48>
	msleep(1000);
	pwm_duty(serv1,IZ);
 c9c:	29 61 00 00 	lw r1,(r11+0)
 ca0:	34 02 00 05 	mvi r2,5
 ca4:	fb ff fe 3a 	calli 58c <_Z8pwm_dutyij>
	timer0->compare1 = (FCPU/1000)*msec;
 ca8:	29 82 00 00 	lw r2,(r12+0)
 cac:	38 01 f0 80 	mvu r1,0xf080
 cb0:	78 21 02 fa 	orhi r1,r1,0x2fa
 cb4:	58 41 00 10 	sw (r2+16),r1
	timer0->counter1 = 0;
 cb8:	58 40 00 14 	sw (r2+20),r0
	timer0->tcr1 = TIMER_EN;
 cbc:	34 01 00 08 	mvi r1,8
 cc0:	58 41 00 0c 	sw (r2+12),r1
 		tcr = timer0->tcr1;
 cc4:	28 41 00 0c 	lw r1,(r2+12)
 	} while ( ! (tcr & TIMER_TRIG) );
 cc8:	20 21 00 01 	andi r1,r1,0x1
 ccc:	44 20 ff fe 	be r1,r0,cc4 <_ZN3arm9izquierdaEv+0x7c>
	msleep(1000);
	pwm_duty(serv2,IZ);
 cd0:	29 61 00 04 	lw r1,(r11+4)
 cd4:	34 02 00 05 	mvi r2,5
 cd8:	fb ff fe 2d 	calli 58c <_Z8pwm_dutyij>
	timer0->compare1 = (FCPU/1000)*msec;
 cdc:	29 82 00 00 	lw r2,(r12+0)
 ce0:	38 01 f0 80 	mvu r1,0xf080
 ce4:	78 21 02 fa 	orhi r1,r1,0x2fa
 ce8:	58 41 00 10 	sw (r2+16),r1
	timer0->counter1 = 0;
 cec:	58 40 00 14 	sw (r2+20),r0
	timer0->tcr1 = TIMER_EN;
 cf0:	34 01 00 08 	mvi r1,8
 cf4:	58 41 00 0c 	sw (r2+12),r1
 		tcr = timer0->tcr1;
 cf8:	28 41 00 0c 	lw r1,(r2+12)
 	} while ( ! (tcr & TIMER_TRIG) );
 cfc:	20 21 00 01 	andi r1,r1,0x1
 d00:	44 20 ff fe 	be r1,r0,cf8 <_ZN3arm9izquierdaEv+0xb0>
	msleep(1000);
	pwm_duty(serv1,MID);
 d04:	29 61 00 00 	lw r1,(r11+0)
 d08:	34 02 00 0f 	mvi r2,15
 d0c:	fb ff fe 20 	calli 58c <_Z8pwm_dutyij>
	timer0->compare1 = (FCPU/1000)*msec;
 d10:	29 82 00 00 	lw r2,(r12+0)
 d14:	38 01 f0 80 	mvu r1,0xf080
 d18:	78 21 02 fa 	orhi r1,r1,0x2fa
 d1c:	58 41 00 10 	sw (r2+16),r1
	timer0->counter1 = 0;
 d20:	58 40 00 14 	sw (r2+20),r0
	timer0->tcr1 = TIMER_EN;
 d24:	34 01 00 08 	mvi r1,8
 d28:	58 41 00 0c 	sw (r2+12),r1
 		tcr = timer0->tcr1;
 d2c:	28 41 00 0c 	lw r1,(r2+12)
 	} while ( ! (tcr & TIMER_TRIG) );
 d30:	20 21 00 01 	andi r1,r1,0x1
 d34:	44 20 ff fe 	be r1,r0,d2c <_ZN3arm9izquierdaEv+0xe4>
	msleep(1000);
	pwm_duty(serv2,DER);
 d38:	29 61 00 04 	lw r1,(r11+4)
 d3c:	34 02 00 19 	mvi r2,25
 d40:	fb ff fe 13 	calli 58c <_Z8pwm_dutyij>
}
 d44:	2b 9d 00 04 	lw ra,(sp+4)
 d48:	2b 8b 00 0c 	lw r11,(sp+12)
 d4c:	2b 8c 00 08 	lw r12,(sp+8)
 d50:	37 9c 00 0c 	addi sp,sp,12
 d54:	c3 a0 00 00 	ret

00000d58 <_ZN3arm8set_servEii>:

void arm::set_serv(int x,int y){
 d58:	37 9c ff f8 	addi sp,sp,-8
 d5c:	5b 8b 00 08 	sw (sp+8),r11
 d60:	5b 9d 00 04 	sw (sp+4),ra
 d64:	b8 40 20 00 	mv r4,r2
	serv1 = x;
	serv2 = y;
 d68:	58 23 00 04 	sw (r1+4),r3
void arm::set_serv(int x,int y){
 d6c:	b8 20 58 00 	mv r11,r1
	serv1 = x;
 d70:	59 64 00 00 	sw (r11+0),r4
	pwm_period(serv1,200);
 d74:	b8 80 08 00 	mv r1,r4
 d78:	34 02 00 c8 	mvi r2,200
 d7c:	fb ff fe 40 	calli 67c <_Z10pwm_periodij>
	pwm_period(serv2,200);
 d80:	29 61 00 04 	lw r1,(r11+4)
 d84:	34 02 00 c8 	mvi r2,200
 d88:	fb ff fe 3d 	calli 67c <_Z10pwm_periodij>
	pwm_duty(serv1,MID);
 d8c:	29 61 00 00 	lw r1,(r11+0)
 d90:	34 02 00 0f 	mvi r2,15
 d94:	fb ff fd fe 	calli 58c <_Z8pwm_dutyij>
	pwm_duty(serv2,IZ);
 d98:	29 61 00 04 	lw r1,(r11+4)
 d9c:	34 02 00 05 	mvi r2,5
 da0:	fb ff fd fb 	calli 58c <_Z8pwm_dutyij>
	pwm_en(serv1,1);
 da4:	29 61 00 00 	lw r1,(r11+0)
 da8:	34 02 00 01 	mvi r2,1
 dac:	fb ff fd bc 	calli 49c <_Z6pwm_enij>
	pwm_en(serv2,1);
 db0:	29 61 00 04 	lw r1,(r11+4)
 db4:	34 02 00 01 	mvi r2,1
 db8:	fb ff fd b9 	calli 49c <_Z6pwm_enij>
 dbc:	2b 9d 00 04 	lw ra,(sp+4)
 dc0:	2b 8b 00 08 	lw r11,(sp+8)
 dc4:	37 9c 00 08 	addi sp,sp,8
 dc8:	c3 a0 00 00 	ret
