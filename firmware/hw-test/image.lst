
image:     formato del fichero elf32-lm32

Secciones:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000023b8  00000000  00000000  00000054  2**2
                  CONTENTS, ALLOC, LOAD, CODE
  1 .rodata       000001fc  000023b8  000023b8  0000240c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         0000001c  000025b4  000025b4  00002608  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000000a8  000025d0  000025d0  00002624  2**2
                  ALLOC
  4 .debug_frame  0000057c  00000000  00000000  00002624  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000314e  00000000  00000000  00002ba0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000982  00000000  00000000  00005cee  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_loc    00000966  00000000  00000000  00006670  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_aranges 000000a8  00000000  00000000  00006fd6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000098  00000000  00000000  0000707e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   0000199e  00000000  00000000  00007116  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000076f  00000000  00000000  00008ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .comment      00000011  00000000  00000000  00009223  2**0
                  CONTENTS, READONLY

Desensamblado de la secci√≥n .text:

00000000 <_ftext>:
       0:	98 00 00 00 	xor r0,r0,r0
       4:	d0 00 00 00 	wcsr IE,r0
       8:	78 01 00 00 	mvhi r1,0x0
       c:	38 21 00 00 	ori r1,r1,0x0
      10:	d0 e1 00 00 	wcsr EBA,r1
      14:	f8 00 00 3b 	calli 100 <_crt0>
      18:	34 00 00 00 	nop
      1c:	34 00 00 00 	nop

00000020 <_breakpoint_handler>:
      20:	34 00 00 00 	nop
      24:	34 00 00 00 	nop
      28:	34 00 00 00 	nop
      2c:	34 00 00 00 	nop
      30:	34 00 00 00 	nop
      34:	34 00 00 00 	nop
      38:	34 00 00 00 	nop
      3c:	34 00 00 00 	nop

00000040 <_ibuserror_handler>:
      40:	34 00 00 00 	nop
      44:	34 00 00 00 	nop
      48:	34 00 00 00 	nop
      4c:	34 00 00 00 	nop
      50:	34 00 00 00 	nop
      54:	34 00 00 00 	nop
      58:	34 00 00 00 	nop
      5c:	34 00 00 00 	nop

00000060 <_watchpoint_handler>:
      60:	34 00 00 00 	nop
      64:	34 00 00 00 	nop
      68:	34 00 00 00 	nop
      6c:	34 00 00 00 	nop
      70:	34 00 00 00 	nop
      74:	34 00 00 00 	nop
      78:	34 00 00 00 	nop
      7c:	34 00 00 00 	nop

00000080 <_dbuserror_handler>:
      80:	34 00 00 00 	nop
      84:	34 00 00 00 	nop
      88:	34 00 00 00 	nop
      8c:	34 00 00 00 	nop
      90:	34 00 00 00 	nop
      94:	34 00 00 00 	nop
      98:	34 00 00 00 	nop
      9c:	34 00 00 00 	nop

000000a0 <_divzero_handler>:
      a0:	34 00 00 00 	nop
      a4:	34 00 00 00 	nop
      a8:	34 00 00 00 	nop
      ac:	34 00 00 00 	nop
      b0:	34 00 00 00 	nop
      b4:	34 00 00 00 	nop
      b8:	34 00 00 00 	nop
      bc:	34 00 00 00 	nop

000000c0 <_interrupt_handler>:
      c0:	5b 9d 00 00 	sw (sp+0),ra
      c4:	f8 00 00 2b 	calli 170 <_save_all>
      c8:	90 40 08 00 	rcsr r1,IP
      cc:	f8 00 05 23 	calli 1558 <irq_handler>
      d0:	78 01 ff ff 	mvhi r1,0xffff
      d4:	38 21 ff ff 	ori r1,r1,0xffff
      d8:	d0 41 00 00 	wcsr IP,r1
      dc:	e0 00 00 38 	bi 1bc <_restore_all_and_eret>

000000e0 <_scall_handler>:
      e0:	34 00 00 00 	nop
      e4:	34 00 00 00 	nop
      e8:	34 00 00 00 	nop
      ec:	34 00 00 00 	nop
      f0:	34 00 00 00 	nop
      f4:	34 00 00 00 	nop
      f8:	34 00 00 00 	nop
      fc:	34 00 00 00 	nop

00000100 <_crt0>:
     100:	78 1c 00 00 	mvhi sp,0x0
     104:	3b 9c ff fc 	ori sp,sp,0xfffc
     108:	78 1a 00 00 	mvhi gp,0x0
     10c:	3b 5a 25 d0 	ori gp,gp,0x25d0
     110:	78 01 00 00 	mvhi r1,0x0
     114:	38 21 25 d0 	ori r1,r1,0x25d0
     118:	78 03 00 00 	mvhi r3,0x0
     11c:	38 63 26 78 	ori r3,r3,0x2678

00000120 <.clearBSS>:
     120:	44 23 00 04 	be r1,r3,130 <.callMain>
     124:	58 20 00 00 	sw (r1+0),r0
     128:	34 21 00 04 	addi r1,r1,4
     12c:	e3 ff ff fd 	bi 120 <.clearBSS>

00000130 <.callMain>:
     130:	34 01 00 00 	mvi r1,0
     134:	34 02 00 00 	mvi r2,0
     138:	34 03 00 00 	mvi r3,0
     13c:	f8 00 03 8e 	calli f74 <main>

00000140 <irq_enable>:
     140:	34 01 00 01 	mvi r1,1
     144:	d0 01 00 00 	wcsr IE,r1
     148:	c3 a0 00 00 	ret

0000014c <irq_disable>:
     14c:	34 01 00 00 	mvi r1,0
     150:	d0 01 00 00 	wcsr IE,r1
     154:	c3 a0 00 00 	ret

00000158 <irq_set_mask>:
     158:	d0 21 00 00 	wcsr IM,r1
     15c:	c3 a0 00 00 	ret

00000160 <irq_get_mask>:
     160:	90 20 08 00 	rcsr r1,IM
     164:	c3 a0 00 00 	ret

00000168 <jump>:
     168:	c0 20 00 00 	b r1

0000016c <halt>:
     16c:	e0 00 00 00 	bi 16c <halt>

00000170 <_save_all>:
     170:	37 9c ff 80 	addi sp,sp,-128
     174:	5b 81 00 04 	sw (sp+4),r1
     178:	5b 82 00 08 	sw (sp+8),r2
     17c:	5b 83 00 0c 	sw (sp+12),r3
     180:	5b 84 00 10 	sw (sp+16),r4
     184:	5b 85 00 14 	sw (sp+20),r5
     188:	5b 86 00 18 	sw (sp+24),r6
     18c:	5b 87 00 1c 	sw (sp+28),r7
     190:	5b 88 00 20 	sw (sp+32),r8
     194:	5b 89 00 24 	sw (sp+36),r9
     198:	5b 8a 00 28 	sw (sp+40),r10
     19c:	5b 9e 00 78 	sw (sp+120),ea
     1a0:	5b 9f 00 7c 	sw (sp+124),ba
     1a4:	2b 81 00 80 	lw r1,(sp+128)
     1a8:	5b 81 00 74 	sw (sp+116),r1
     1ac:	bb 80 08 00 	mv r1,sp
     1b0:	34 21 00 80 	addi r1,r1,128
     1b4:	5b 81 00 70 	sw (sp+112),r1
     1b8:	c3 a0 00 00 	ret

000001bc <_restore_all_and_eret>:
     1bc:	2b 81 00 04 	lw r1,(sp+4)
     1c0:	2b 82 00 08 	lw r2,(sp+8)
     1c4:	2b 83 00 0c 	lw r3,(sp+12)
     1c8:	2b 84 00 10 	lw r4,(sp+16)
     1cc:	2b 85 00 14 	lw r5,(sp+20)
     1d0:	2b 86 00 18 	lw r6,(sp+24)
     1d4:	2b 87 00 1c 	lw r7,(sp+28)
     1d8:	2b 88 00 20 	lw r8,(sp+32)
     1dc:	2b 89 00 24 	lw r9,(sp+36)
     1e0:	2b 8a 00 28 	lw r10,(sp+40)
     1e4:	2b 9d 00 74 	lw ra,(sp+116)
     1e8:	2b 9e 00 78 	lw ea,(sp+120)
     1ec:	2b 9f 00 7c 	lw ba,(sp+124)
     1f0:	2b 9c 00 70 	lw sp,(sp+112)
     1f4:	c3 c0 00 00 	eret

000001f8 <get_sp>:
     1f8:	bb 80 08 00 	mv r1,sp
     1fc:	c3 a0 00 00 	ret

00000200 <get_gp>:
     200:	bb 40 08 00 	mv r1,gp
     204:	c3 a0 00 00 	ret

00000208 <_Z11instruccion3armc>:
int inst;
int dir;
int val;


void instruccion(arm y,char x){
     208:	37 9c ff dc 	addi sp,sp,-36
     20c:	5b 9d 00 04 	sw (sp+4),ra
     210:	43 89 00 2b 	lbu r9,(sp+43)
     214:	5b 81 00 08 	sw (sp+8),r1
     218:	5b 82 00 0c 	sw (sp+12),r2
     21c:	5b 83 00 10 	sw (sp+16),r3
     220:	5b 84 00 14 	sw (sp+20),r4
     224:	5b 85 00 18 	sw (sp+24),r5
     228:	5b 86 00 1c 	sw (sp+28),r6
     22c:	5b 87 00 20 	sw (sp+32),r7
     230:	5b 88 00 24 	sw (sp+36),r8
	switch(x){
     234:	34 01 00 10 	mvi r1,16
     238:	45 21 00 0a 	be r9,r1,260 <_Z11instruccion3armc+0x58>
     23c:	34 01 00 11 	mvi r1,17
     240:	5d 21 00 05 	bne r9,r1,254 <_Z11instruccion3armc+0x4c>
			y.derecha();
			uart_putchar('d');
			break;

		case 0x11:
			y.izquierda();
     244:	37 81 00 08 	addi r1,sp,8
     248:	f8 00 06 bd 	calli 1d3c <_ZN3arm9izquierdaEv>
			uart_putchar('z');
     24c:	34 01 00 7a 	mvi r1,122
     250:	f8 00 05 31 	calli 1714 <uart_putchar>
			break;
	}
}
     254:	2b 9d 00 04 	lw ra,(sp+4)
     258:	37 9c 00 24 	addi sp,sp,36
     25c:	c3 a0 00 00 	ret
			y.derecha();
     260:	37 81 00 08 	addi r1,sp,8
     264:	f8 00 06 97 	calli 1cc0 <_ZN3arm7derechaEv>
			uart_putchar('d');
     268:	34 01 00 64 	mvi r1,100
     26c:	f8 00 05 2a 	calli 1714 <uart_putchar>
}
     270:	2b 9d 00 04 	lw ra,(sp+4)
     274:	37 9c 00 24 	addi sp,sp,36
     278:	c3 a0 00 00 	ret

0000027c <_Z12read_commandv>:

uint32_t command_array [5];

uint8_t read_command(){
     27c:	37 9c ff f4 	addi sp,sp,-12
     280:	5b 8b 00 0c 	sw (sp+12),r11
     284:	5b 8c 00 08 	sw (sp+8),r12
     288:	5b 9d 00 04 	sw (sp+4),ra
     28c:	78 01 00 00 	mvhi r1,0x0
     290:	38 21 23 b8 	ori r1,r1,0x23b8
     294:	28 2c 00 00 	lw r12,(r1+0)

		uint8_t cm;
		uint8_t i=0;
     298:	34 0b 00 00 	mvi r11,0
        while ( (cm != 0xf0) && (i<5) ){
        	cm = uart_getchar();
        	command_array[i]=cm;
        	i++;
     29c:	35 6b 00 01 	addi r11,r11,1
        	cm = uart_getchar();
     2a0:	f8 00 05 13 	calli 16ec <uart_getchar>
        	i++;
     2a4:	21 6b 00 ff 	andi r11,r11,0xff
        while ( (cm != 0xf0) && (i<5) ){
     2a8:	64 23 00 f0 	cmpei r3,r1,240
     2ac:	75 62 00 04 	cmpgui r2,r11,0x4
        	command_array[i]=cm;
     2b0:	59 81 00 00 	sw (r12+0),r1
        while ( (cm != 0xf0) && (i<5) ){
     2b4:	b8 62 10 00 	or r2,r3,r2
     2b8:	35 8c 00 04 	addi r12,r12,4
     2bc:	44 40 ff f8 	be r2,r0,29c <_Z12read_commandv+0x20>

        }
        if (cm == 0xf0 )
        	return 1;
        return 0;			
}
     2c0:	b8 60 08 00 	mv r1,r3
     2c4:	2b 9d 00 04 	lw ra,(sp+4)
     2c8:	2b 8b 00 0c 	lw r11,(sp+12)
     2cc:	2b 8c 00 08 	lw r12,(sp+8)
     2d0:	37 9c 00 0c 	addi sp,sp,12
     2d4:	c3 a0 00 00 	ret

000002d8 <_Z2R13armS_S_S_>:

void R1(arm a, arm b, arm c, arm d){
     2d8:	37 9c ff dc 	addi sp,sp,-36
     2dc:	5b 9d 00 04 	sw (sp+4),ra
     2e0:	5b 81 00 08 	sw (sp+8),r1
	a.atras0();
     2e4:	37 81 00 08 	addi r1,sp,8
void R1(arm a, arm b, arm c, arm d){
     2e8:	5b 82 00 0c 	sw (sp+12),r2
     2ec:	5b 83 00 10 	sw (sp+16),r3
     2f0:	5b 84 00 14 	sw (sp+20),r4
     2f4:	5b 85 00 18 	sw (sp+24),r5
     2f8:	5b 86 00 1c 	sw (sp+28),r6
     2fc:	5b 87 00 20 	sw (sp+32),r7
     300:	5b 88 00 24 	sw (sp+36),r8
	a.atras0();
     304:	f8 00 07 06 	calli 1f1c <_ZN3arm6atras0Ev>
	c.atras0();
     308:	37 81 00 48 	addi r1,sp,72
     30c:	f8 00 07 04 	calli 1f1c <_ZN3arm6atras0Ev>
	msleep(1000);
     310:	34 01 03 e8 	mvi r1,1000
     314:	f8 00 04 c4 	calli 1624 <msleep>
	b.derecha0();
     318:	37 81 00 28 	addi r1,sp,40
     31c:	f8 00 06 e8 	calli 1ebc <_ZN3arm8derecha0Ev>
	d.izquierda0();
     320:	37 81 00 68 	addi r1,sp,104
     324:	f8 00 06 ee 	calli 1edc <_ZN3arm10izquierda0Ev>
	msleep(1000);
     328:	34 01 03 e8 	mvi r1,1000
     32c:	f8 00 04 be 	calli 1624 <msleep>
	a.adelante0();
     330:	37 81 00 08 	addi r1,sp,8
     334:	f8 00 07 02 	calli 1f3c <_ZN3arm9adelante0Ev>
	c.adelante0();
     338:	37 81 00 48 	addi r1,sp,72
     33c:	f8 00 07 00 	calli 1f3c <_ZN3arm9adelante0Ev>
	msleep(1000);
     340:	34 01 03 e8 	mvi r1,1000
     344:	f8 00 04 b8 	calli 1624 <msleep>
	b.atras0();
     348:	37 81 00 28 	addi r1,sp,40
     34c:	f8 00 06 f4 	calli 1f1c <_ZN3arm6atras0Ev>
	d.atras0();
     350:	37 81 00 68 	addi r1,sp,104
     354:	f8 00 06 f2 	calli 1f1c <_ZN3arm6atras0Ev>
	msleep(1000);
     358:	34 01 03 e8 	mvi r1,1000
     35c:	f8 00 04 b2 	calli 1624 <msleep>
	b.medio0();
     360:	37 81 00 28 	addi r1,sp,40
     364:	f8 00 06 e6 	calli 1efc <_ZN3arm6medio0Ev>
	d.medio0();
     368:	37 81 00 68 	addi r1,sp,104
     36c:	f8 00 06 e4 	calli 1efc <_ZN3arm6medio0Ev>
	msleep(1000);
     370:	34 01 03 e8 	mvi r1,1000
     374:	f8 00 04 ac 	calli 1624 <msleep>
	b.adelante0();
     378:	37 81 00 28 	addi r1,sp,40
     37c:	f8 00 06 f0 	calli 1f3c <_ZN3arm9adelante0Ev>
	d.adelante0();
     380:	37 81 00 68 	addi r1,sp,104
     384:	f8 00 06 ee 	calli 1f3c <_ZN3arm9adelante0Ev>
	msleep(1000);
     388:	34 01 03 e8 	mvi r1,1000
     38c:	f8 00 04 a6 	calli 1624 <msleep>
}
     390:	2b 9d 00 04 	lw ra,(sp+4)
     394:	37 9c 00 24 	addi sp,sp,36
     398:	c3 a0 00 00 	ret

0000039c <_Z2L13armS_S_S_>:

void L1(arm a, arm b, arm c, arm d){
     39c:	37 9c ff dc 	addi sp,sp,-36
     3a0:	5b 9d 00 04 	sw (sp+4),ra
     3a4:	5b 81 00 08 	sw (sp+8),r1
	a.atras0();
     3a8:	37 81 00 08 	addi r1,sp,8
void L1(arm a, arm b, arm c, arm d){
     3ac:	5b 82 00 0c 	sw (sp+12),r2
     3b0:	5b 83 00 10 	sw (sp+16),r3
     3b4:	5b 84 00 14 	sw (sp+20),r4
     3b8:	5b 85 00 18 	sw (sp+24),r5
     3bc:	5b 86 00 1c 	sw (sp+28),r6
     3c0:	5b 87 00 20 	sw (sp+32),r7
     3c4:	5b 88 00 24 	sw (sp+36),r8
	a.atras0();
     3c8:	f8 00 06 d5 	calli 1f1c <_ZN3arm6atras0Ev>
	c.atras0();
     3cc:	37 81 00 48 	addi r1,sp,72
     3d0:	f8 00 06 d3 	calli 1f1c <_ZN3arm6atras0Ev>
	msleep(1000);
     3d4:	34 01 03 e8 	mvi r1,1000
     3d8:	f8 00 04 93 	calli 1624 <msleep>
	b.izquierda0();
     3dc:	37 81 00 28 	addi r1,sp,40
     3e0:	f8 00 06 bf 	calli 1edc <_ZN3arm10izquierda0Ev>
	d.derecha0();
     3e4:	37 81 00 68 	addi r1,sp,104
     3e8:	f8 00 06 b5 	calli 1ebc <_ZN3arm8derecha0Ev>
	msleep(1000);
     3ec:	34 01 03 e8 	mvi r1,1000
     3f0:	f8 00 04 8d 	calli 1624 <msleep>
	a.adelante0();
     3f4:	37 81 00 08 	addi r1,sp,8
     3f8:	f8 00 06 d1 	calli 1f3c <_ZN3arm9adelante0Ev>
	c.adelante0();
     3fc:	37 81 00 48 	addi r1,sp,72
     400:	f8 00 06 cf 	calli 1f3c <_ZN3arm9adelante0Ev>
	msleep(1000);
     404:	34 01 03 e8 	mvi r1,1000
     408:	f8 00 04 87 	calli 1624 <msleep>
	b.atras0();
     40c:	37 81 00 28 	addi r1,sp,40
     410:	f8 00 06 c3 	calli 1f1c <_ZN3arm6atras0Ev>
	d.atras0();
     414:	37 81 00 68 	addi r1,sp,104
     418:	f8 00 06 c1 	calli 1f1c <_ZN3arm6atras0Ev>
	msleep(1000);
     41c:	34 01 03 e8 	mvi r1,1000
     420:	f8 00 04 81 	calli 1624 <msleep>
	b.medio0();
     424:	37 81 00 28 	addi r1,sp,40
     428:	f8 00 06 b5 	calli 1efc <_ZN3arm6medio0Ev>
	d.medio0();
     42c:	37 81 00 68 	addi r1,sp,104
     430:	f8 00 06 b3 	calli 1efc <_ZN3arm6medio0Ev>
	msleep(1000);
     434:	34 01 03 e8 	mvi r1,1000
     438:	f8 00 04 7b 	calli 1624 <msleep>
	b.adelante0();
     43c:	37 81 00 28 	addi r1,sp,40
     440:	f8 00 06 bf 	calli 1f3c <_ZN3arm9adelante0Ev>
	d.adelante0();
     444:	37 81 00 68 	addi r1,sp,104
     448:	f8 00 06 bd 	calli 1f3c <_ZN3arm9adelante0Ev>
	msleep(1000);
     44c:	34 01 03 e8 	mvi r1,1000
     450:	f8 00 04 75 	calli 1624 <msleep>
}
     454:	2b 9d 00 04 	lw ra,(sp+4)
     458:	37 9c 00 24 	addi sp,sp,36
     45c:	c3 a0 00 00 	ret

00000460 <_Z3R113armS_S_S_>:

void R11(arm a, arm b, arm c, arm d){
     460:	37 9c ff dc 	addi sp,sp,-36
     464:	5b 9d 00 04 	sw (sp+4),ra
     468:	5b 81 00 08 	sw (sp+8),r1
	b.atras0();
     46c:	37 81 00 28 	addi r1,sp,40
void R11(arm a, arm b, arm c, arm d){
     470:	5b 82 00 0c 	sw (sp+12),r2
     474:	5b 83 00 10 	sw (sp+16),r3
     478:	5b 84 00 14 	sw (sp+20),r4
     47c:	5b 85 00 18 	sw (sp+24),r5
     480:	5b 86 00 1c 	sw (sp+28),r6
     484:	5b 87 00 20 	sw (sp+32),r7
     488:	5b 88 00 24 	sw (sp+36),r8
	b.atras0();
     48c:	f8 00 06 a4 	calli 1f1c <_ZN3arm6atras0Ev>
	d.atras0();
     490:	37 81 00 68 	addi r1,sp,104
     494:	f8 00 06 a2 	calli 1f1c <_ZN3arm6atras0Ev>
	msleep(1000);
     498:	34 01 03 e8 	mvi r1,1000
     49c:	f8 00 04 62 	calli 1624 <msleep>
	a.derecha0();
     4a0:	37 81 00 08 	addi r1,sp,8
     4a4:	f8 00 06 86 	calli 1ebc <_ZN3arm8derecha0Ev>
	c.izquierda0();
     4a8:	37 81 00 48 	addi r1,sp,72
     4ac:	f8 00 06 8c 	calli 1edc <_ZN3arm10izquierda0Ev>
	msleep(1000);
     4b0:	34 01 03 e8 	mvi r1,1000
     4b4:	f8 00 04 5c 	calli 1624 <msleep>
	b.adelante0();
     4b8:	37 81 00 28 	addi r1,sp,40
     4bc:	f8 00 06 a0 	calli 1f3c <_ZN3arm9adelante0Ev>
	d.adelante0();
     4c0:	37 81 00 68 	addi r1,sp,104
     4c4:	f8 00 06 9e 	calli 1f3c <_ZN3arm9adelante0Ev>
	msleep(1000);
     4c8:	34 01 03 e8 	mvi r1,1000
     4cc:	f8 00 04 56 	calli 1624 <msleep>
	a.atras0();
     4d0:	37 81 00 08 	addi r1,sp,8
     4d4:	f8 00 06 92 	calli 1f1c <_ZN3arm6atras0Ev>
	c.atras0();
     4d8:	37 81 00 48 	addi r1,sp,72
     4dc:	f8 00 06 90 	calli 1f1c <_ZN3arm6atras0Ev>
	msleep(1000);
     4e0:	34 01 03 e8 	mvi r1,1000
     4e4:	f8 00 04 50 	calli 1624 <msleep>
	a.medio0();
     4e8:	37 81 00 08 	addi r1,sp,8
     4ec:	f8 00 06 84 	calli 1efc <_ZN3arm6medio0Ev>
	c.medio0();
     4f0:	37 81 00 48 	addi r1,sp,72
     4f4:	f8 00 06 82 	calli 1efc <_ZN3arm6medio0Ev>
	msleep(1000);
     4f8:	34 01 03 e8 	mvi r1,1000
     4fc:	f8 00 04 4a 	calli 1624 <msleep>
	a.adelante0();
     500:	37 81 00 08 	addi r1,sp,8
     504:	f8 00 06 8e 	calli 1f3c <_ZN3arm9adelante0Ev>
	c.adelante0();
     508:	37 81 00 48 	addi r1,sp,72
     50c:	f8 00 06 8c 	calli 1f3c <_ZN3arm9adelante0Ev>
	msleep(1000);
     510:	34 01 03 e8 	mvi r1,1000
     514:	f8 00 04 44 	calli 1624 <msleep>
}
     518:	2b 9d 00 04 	lw ra,(sp+4)
     51c:	37 9c 00 24 	addi sp,sp,36
     520:	c3 a0 00 00 	ret

00000524 <_Z3L113armS_S_S_>:

void L11(arm a, arm b, arm c, arm d){
     524:	37 9c ff dc 	addi sp,sp,-36
     528:	5b 9d 00 04 	sw (sp+4),ra
     52c:	5b 81 00 08 	sw (sp+8),r1
	b.atras0();
     530:	37 81 00 28 	addi r1,sp,40
void L11(arm a, arm b, arm c, arm d){
     534:	5b 82 00 0c 	sw (sp+12),r2
     538:	5b 83 00 10 	sw (sp+16),r3
     53c:	5b 84 00 14 	sw (sp+20),r4
     540:	5b 85 00 18 	sw (sp+24),r5
     544:	5b 86 00 1c 	sw (sp+28),r6
     548:	5b 87 00 20 	sw (sp+32),r7
     54c:	5b 88 00 24 	sw (sp+36),r8
	b.atras0();
     550:	f8 00 06 73 	calli 1f1c <_ZN3arm6atras0Ev>
	d.atras0();
     554:	37 81 00 68 	addi r1,sp,104
     558:	f8 00 06 71 	calli 1f1c <_ZN3arm6atras0Ev>
	msleep(1000);
     55c:	34 01 03 e8 	mvi r1,1000
     560:	f8 00 04 31 	calli 1624 <msleep>
	a.izquierda0();
     564:	37 81 00 08 	addi r1,sp,8
     568:	f8 00 06 5d 	calli 1edc <_ZN3arm10izquierda0Ev>
	c.derecha0();
     56c:	37 81 00 48 	addi r1,sp,72
     570:	f8 00 06 53 	calli 1ebc <_ZN3arm8derecha0Ev>
	msleep(1000);
     574:	34 01 03 e8 	mvi r1,1000
     578:	f8 00 04 2b 	calli 1624 <msleep>
	b.adelante0();
     57c:	37 81 00 28 	addi r1,sp,40
     580:	f8 00 06 6f 	calli 1f3c <_ZN3arm9adelante0Ev>
	d.adelante0();
     584:	37 81 00 68 	addi r1,sp,104
     588:	f8 00 06 6d 	calli 1f3c <_ZN3arm9adelante0Ev>
	msleep(1000);
     58c:	34 01 03 e8 	mvi r1,1000
     590:	f8 00 04 25 	calli 1624 <msleep>
	a.atras0();
     594:	37 81 00 08 	addi r1,sp,8
     598:	f8 00 06 61 	calli 1f1c <_ZN3arm6atras0Ev>
	c.atras0();
     59c:	37 81 00 48 	addi r1,sp,72
     5a0:	f8 00 06 5f 	calli 1f1c <_ZN3arm6atras0Ev>
	msleep(1000);
     5a4:	34 01 03 e8 	mvi r1,1000
     5a8:	f8 00 04 1f 	calli 1624 <msleep>
	a.medio0();
     5ac:	37 81 00 08 	addi r1,sp,8
     5b0:	f8 00 06 53 	calli 1efc <_ZN3arm6medio0Ev>
	c.medio0();
     5b4:	37 81 00 48 	addi r1,sp,72
     5b8:	f8 00 06 51 	calli 1efc <_ZN3arm6medio0Ev>
	msleep(1000);
     5bc:	34 01 03 e8 	mvi r1,1000
     5c0:	f8 00 04 19 	calli 1624 <msleep>
	a.adelante0();
     5c4:	37 81 00 08 	addi r1,sp,8
     5c8:	f8 00 06 5d 	calli 1f3c <_ZN3arm9adelante0Ev>
	c.adelante0();
     5cc:	37 81 00 48 	addi r1,sp,72
     5d0:	f8 00 06 5b 	calli 1f3c <_ZN3arm9adelante0Ev>
	msleep(1000);
     5d4:	34 01 03 e8 	mvi r1,1000
     5d8:	f8 00 04 13 	calli 1624 <msleep>
}
     5dc:	2b 9d 00 04 	lw ra,(sp+4)
     5e0:	37 9c 00 24 	addi sp,sp,36
     5e4:	c3 a0 00 00 	ret

000005e8 <_Z4Face3armS_S_S_i>:

int Cao  = 1;
int Cao1 = 1;

void Face(arm a, arm b, arm c, arm d, int Ca){
     5e8:	37 9c ff 6c 	addi sp,sp,-148
     5ec:	5b 8b 00 74 	sw (sp+116),r11
     5f0:	5b 8c 00 70 	sw (sp+112),r12
     5f4:	5b 8d 00 6c 	sw (sp+108),r13
     5f8:	5b 8e 00 68 	sw (sp+104),r14
     5fc:	5b 9d 00 64 	sw (sp+100),ra
	if(Ca != Cao){
     600:	78 09 00 00 	mvhi r9,0x0
     604:	39 29 23 bc 	ori r9,r9,0x23bc
     608:	29 2c 00 00 	lw r12,(r9+0)
void Face(arm a, arm b, arm c, arm d, int Ca){
     60c:	2b 8b 00 f8 	lw r11,(sp+248)
     610:	5b 81 00 78 	sw (sp+120),r1
	if(Ca != Cao){
     614:	29 89 00 00 	lw r9,(r12+0)
void Face(arm a, arm b, arm c, arm d, int Ca){
     618:	5b 82 00 7c 	sw (sp+124),r2
     61c:	5b 83 00 80 	sw (sp+128),r3
     620:	5b 84 00 84 	sw (sp+132),r4
     624:	5b 85 00 88 	sw (sp+136),r5
     628:	5b 86 00 8c 	sw (sp+140),r6
     62c:	5b 87 00 90 	sw (sp+144),r7
     630:	5b 88 00 94 	sw (sp+148),r8
	if(Ca != Cao){
     634:	45 2b 00 9a 	be r9,r11,89c <_Z4Face3armS_S_S_i+0x2b4>
		if(Ca < 5){
     638:	34 0a 00 04 	mvi r10,4
     63c:	49 6a 01 25 	bg r11,r10,ad0 <_Z4Face3armS_S_S_i+0x4e8>
			if(Cao < 5){
     640:	49 2a 00 88 	bg r9,r10,860 <_Z4Face3armS_S_S_i+0x278>
				if(Ca > Cao){
     644:	4d 2b 00 42 	bge r9,r11,74c <_Z4Face3armS_S_S_i+0x164>
					for(int i=0; i<(Ca-Cao); i++){
     648:	c9 69 08 00 	sub r1,r11,r9
     64c:	4c 01 02 14 	bge r0,r1,e9c <_Z4Face3armS_S_S_i+0x8b4>
     650:	34 0d 00 00 	mvi r13,0
						R1(a,b,c,d);
     654:	2b 81 00 d8 	lw r1,(sp+216)
					for(int i=0; i<(Ca-Cao); i++){
     658:	35 ad 00 01 	addi r13,r13,1
						R1(a,b,c,d);
     65c:	5b 81 00 44 	sw (sp+68),r1
     660:	2b 81 00 dc 	lw r1,(sp+220)
     664:	5b 81 00 48 	sw (sp+72),r1
     668:	2b 81 00 e0 	lw r1,(sp+224)
     66c:	5b 81 00 4c 	sw (sp+76),r1
     670:	2b 81 00 e4 	lw r1,(sp+228)
     674:	5b 81 00 50 	sw (sp+80),r1
     678:	2b 81 00 e8 	lw r1,(sp+232)
     67c:	5b 81 00 54 	sw (sp+84),r1
     680:	2b 81 00 ec 	lw r1,(sp+236)
     684:	5b 81 00 58 	sw (sp+88),r1
     688:	2b 81 00 f0 	lw r1,(sp+240)
     68c:	5b 81 00 5c 	sw (sp+92),r1
     690:	2b 81 00 f4 	lw r1,(sp+244)
     694:	5b 81 00 60 	sw (sp+96),r1
     698:	2b 81 00 b8 	lw r1,(sp+184)
     69c:	5b 81 00 24 	sw (sp+36),r1
     6a0:	2b 81 00 bc 	lw r1,(sp+188)
     6a4:	5b 81 00 28 	sw (sp+40),r1
     6a8:	2b 81 00 c0 	lw r1,(sp+192)
     6ac:	5b 81 00 2c 	sw (sp+44),r1
     6b0:	2b 81 00 c4 	lw r1,(sp+196)
     6b4:	5b 81 00 30 	sw (sp+48),r1
     6b8:	2b 81 00 c8 	lw r1,(sp+200)
     6bc:	5b 81 00 34 	sw (sp+52),r1
     6c0:	2b 81 00 cc 	lw r1,(sp+204)
     6c4:	5b 81 00 38 	sw (sp+56),r1
     6c8:	2b 81 00 d0 	lw r1,(sp+208)
     6cc:	5b 81 00 3c 	sw (sp+60),r1
     6d0:	2b 81 00 d4 	lw r1,(sp+212)
     6d4:	5b 81 00 40 	sw (sp+64),r1
     6d8:	2b 81 00 78 	lw r1,(sp+120)
     6dc:	2b 89 00 98 	lw r9,(sp+152)
     6e0:	2b 82 00 7c 	lw r2,(sp+124)
     6e4:	2b 83 00 80 	lw r3,(sp+128)
     6e8:	5b 89 00 04 	sw (sp+4),r9
     6ec:	2b 89 00 9c 	lw r9,(sp+156)
     6f0:	2b 84 00 84 	lw r4,(sp+132)
     6f4:	2b 85 00 88 	lw r5,(sp+136)
     6f8:	5b 89 00 08 	sw (sp+8),r9
     6fc:	2b 89 00 a0 	lw r9,(sp+160)
     700:	2b 86 00 8c 	lw r6,(sp+140)
     704:	2b 87 00 90 	lw r7,(sp+144)
     708:	5b 89 00 0c 	sw (sp+12),r9
     70c:	2b 89 00 a4 	lw r9,(sp+164)
     710:	2b 88 00 94 	lw r8,(sp+148)
     714:	5b 89 00 10 	sw (sp+16),r9
     718:	2b 89 00 a8 	lw r9,(sp+168)
     71c:	5b 89 00 14 	sw (sp+20),r9
     720:	2b 89 00 ac 	lw r9,(sp+172)
     724:	5b 89 00 18 	sw (sp+24),r9
     728:	2b 89 00 b0 	lw r9,(sp+176)
     72c:	5b 89 00 1c 	sw (sp+28),r9
     730:	2b 89 00 b4 	lw r9,(sp+180)
     734:	5b 89 00 20 	sw (sp+32),r9
     738:	fb ff fe e8 	calli 2d8 <_Z2R13armS_S_S_>
					for(int i=0; i<(Ca-Cao); i++){
     73c:	29 89 00 00 	lw r9,(r12+0)
     740:	c9 69 08 00 	sub r1,r11,r9
     744:	4d a1 00 42 	bge r13,r1,84c <_Z4Face3armS_S_S_i+0x264>
     748:	e3 ff ff c3 	bi 654 <_Z4Face3armS_S_S_i+0x6c>
					}
				}else{
					for(int i=0; i<(Cao-Ca); i++){
     74c:	c9 2b 08 00 	sub r1,r9,r11
     750:	4c 01 01 1e 	bge r0,r1,bc8 <_Z4Face3armS_S_S_i+0x5e0>
     754:	34 0d 00 00 	mvi r13,0
						L1(a,b,c,d);
     758:	2b 81 00 d8 	lw r1,(sp+216)
					for(int i=0; i<(Cao-Ca); i++){
     75c:	35 ad 00 01 	addi r13,r13,1
						L1(a,b,c,d);
     760:	5b 81 00 44 	sw (sp+68),r1
     764:	2b 81 00 dc 	lw r1,(sp+220)
     768:	5b 81 00 48 	sw (sp+72),r1
     76c:	2b 81 00 e0 	lw r1,(sp+224)
     770:	5b 81 00 4c 	sw (sp+76),r1
     774:	2b 81 00 e4 	lw r1,(sp+228)
     778:	5b 81 00 50 	sw (sp+80),r1
     77c:	2b 81 00 e8 	lw r1,(sp+232)
     780:	5b 81 00 54 	sw (sp+84),r1
     784:	2b 81 00 ec 	lw r1,(sp+236)
     788:	5b 81 00 58 	sw (sp+88),r1
     78c:	2b 81 00 f0 	lw r1,(sp+240)
     790:	5b 81 00 5c 	sw (sp+92),r1
     794:	2b 81 00 f4 	lw r1,(sp+244)
     798:	5b 81 00 60 	sw (sp+96),r1
     79c:	2b 81 00 b8 	lw r1,(sp+184)
     7a0:	5b 81 00 24 	sw (sp+36),r1
     7a4:	2b 81 00 bc 	lw r1,(sp+188)
     7a8:	5b 81 00 28 	sw (sp+40),r1
     7ac:	2b 81 00 c0 	lw r1,(sp+192)
     7b0:	5b 81 00 2c 	sw (sp+44),r1
     7b4:	2b 81 00 c4 	lw r1,(sp+196)
     7b8:	5b 81 00 30 	sw (sp+48),r1
     7bc:	2b 81 00 c8 	lw r1,(sp+200)
     7c0:	5b 81 00 34 	sw (sp+52),r1
     7c4:	2b 81 00 cc 	lw r1,(sp+204)
     7c8:	5b 81 00 38 	sw (sp+56),r1
     7cc:	2b 81 00 d0 	lw r1,(sp+208)
     7d0:	5b 81 00 3c 	sw (sp+60),r1
     7d4:	2b 81 00 d4 	lw r1,(sp+212)
     7d8:	5b 81 00 40 	sw (sp+64),r1
     7dc:	2b 81 00 78 	lw r1,(sp+120)
     7e0:	2b 89 00 98 	lw r9,(sp+152)
     7e4:	2b 82 00 7c 	lw r2,(sp+124)
     7e8:	2b 83 00 80 	lw r3,(sp+128)
     7ec:	5b 89 00 04 	sw (sp+4),r9
     7f0:	2b 89 00 9c 	lw r9,(sp+156)
     7f4:	2b 84 00 84 	lw r4,(sp+132)
     7f8:	2b 85 00 88 	lw r5,(sp+136)
     7fc:	5b 89 00 08 	sw (sp+8),r9
     800:	2b 89 00 a0 	lw r9,(sp+160)
     804:	2b 86 00 8c 	lw r6,(sp+140)
     808:	2b 87 00 90 	lw r7,(sp+144)
     80c:	5b 89 00 0c 	sw (sp+12),r9
     810:	2b 89 00 a4 	lw r9,(sp+164)
     814:	2b 88 00 94 	lw r8,(sp+148)
     818:	5b 89 00 10 	sw (sp+16),r9
     81c:	2b 89 00 a8 	lw r9,(sp+168)
     820:	5b 89 00 14 	sw (sp+20),r9
     824:	2b 89 00 ac 	lw r9,(sp+172)
     828:	5b 89 00 18 	sw (sp+24),r9
     82c:	2b 89 00 b0 	lw r9,(sp+176)
     830:	5b 89 00 1c 	sw (sp+28),r9
     834:	2b 89 00 b4 	lw r9,(sp+180)
     838:	5b 89 00 20 	sw (sp+32),r9
     83c:	fb ff fe d8 	calli 39c <_Z2L13armS_S_S_>
					for(int i=0; i<(Cao-Ca); i++){
     840:	29 89 00 00 	lw r9,(r12+0)
     844:	c9 2b 08 00 	sub r1,r9,r11
     848:	48 2d ff c4 	bg r1,r13,758 <_Z4Face3armS_S_S_i+0x170>
     84c:	78 0e 00 00 	mvhi r14,0x0
     850:	39 ce 23 c0 	ori r14,r14,0x23c0
					}
				}
			}
			if(Cao >= 5){
     854:	34 01 00 04 	mvi r1,4
     858:	29 cd 00 00 	lw r13,(r14+0)
     85c:	4c 29 00 13 	bge r1,r9,8a8 <_Z4Face3armS_S_S_i+0x2c0>
				if(Cao == 6){
     860:	34 01 00 06 	mvi r1,6
     864:	45 21 00 df 	be r9,r1,be0 <_Z4Face3armS_S_S_i+0x5f8>
					R11(a,b,c,d);
				}
				if(Cao == 5){
     868:	29 82 00 00 	lw r2,(r12+0)
     86c:	34 01 00 05 	mvi r1,5
     870:	44 41 01 16 	be r2,r1,cc8 <_Z4Face3armS_S_S_i+0x6e0>
					L11(a,b,c,d);
				}
				if(Ca > Cao1){
     874:	78 01 00 00 	mvhi r1,0x0
     878:	38 21 23 c0 	ori r1,r1,0x23c0
     87c:	28 2d 00 00 	lw r13,(r1+0)
     880:	29 a1 00 00 	lw r1,(r13+0)
     884:	4c 2b 00 12 	bge r1,r11,8cc <_Z4Face3armS_S_S_i+0x2e4>
					for(int i=0; i<(Ca-Cao1); i++){
     888:	c9 61 08 00 	sub r1,r11,r1
     88c:	34 0e 00 00 	mvi r14,0
     890:	48 20 00 51 	bg r1,r0,9d4 <_Z4Face3armS_S_S_i+0x3ec>
     894:	29 89 00 00 	lw r9,(r12+0)
     898:	e0 00 00 04 	bi 8a8 <_Z4Face3armS_S_S_i+0x2c0>
     89c:	78 0e 00 00 	mvhi r14,0x0
     8a0:	39 ce 23 c0 	ori r14,r14,0x23c0
     8a4:	29 cd 00 00 	lw r13,(r14+0)
				}
			}
		}
	}

	Cao1 = Cao;
     8a8:	59 a9 00 00 	sw (r13+0),r9
	Cao = Ca;
     8ac:	59 8b 00 00 	sw (r12+0),r11
}
     8b0:	2b 9d 00 64 	lw ra,(sp+100)
     8b4:	2b 8b 00 74 	lw r11,(sp+116)
     8b8:	2b 8c 00 70 	lw r12,(sp+112)
     8bc:	2b 8d 00 6c 	lw r13,(sp+108)
     8c0:	2b 8e 00 68 	lw r14,(sp+104)
     8c4:	37 9c 00 94 	addi sp,sp,148
     8c8:	c3 a0 00 00 	ret
					for(int i=0; i<(Cao1-Ca); i++){
     8cc:	c8 2b 08 00 	sub r1,r1,r11
     8d0:	4c 01 ff f1 	bge r0,r1,894 <_Z4Face3armS_S_S_i+0x2ac>
     8d4:	34 0e 00 00 	mvi r14,0
						L1(a,b,c,d);
     8d8:	2b 81 00 d8 	lw r1,(sp+216)
					for(int i=0; i<(Cao1-Ca); i++){
     8dc:	35 ce 00 01 	addi r14,r14,1
						L1(a,b,c,d);
     8e0:	5b 81 00 44 	sw (sp+68),r1
     8e4:	2b 81 00 dc 	lw r1,(sp+220)
     8e8:	5b 81 00 48 	sw (sp+72),r1
     8ec:	2b 81 00 e0 	lw r1,(sp+224)
     8f0:	5b 81 00 4c 	sw (sp+76),r1
     8f4:	2b 81 00 e4 	lw r1,(sp+228)
     8f8:	5b 81 00 50 	sw (sp+80),r1
     8fc:	2b 81 00 e8 	lw r1,(sp+232)
     900:	5b 81 00 54 	sw (sp+84),r1
     904:	2b 81 00 ec 	lw r1,(sp+236)
     908:	5b 81 00 58 	sw (sp+88),r1
     90c:	2b 81 00 f0 	lw r1,(sp+240)
     910:	5b 81 00 5c 	sw (sp+92),r1
     914:	2b 81 00 f4 	lw r1,(sp+244)
     918:	5b 81 00 60 	sw (sp+96),r1
     91c:	2b 81 00 b8 	lw r1,(sp+184)
     920:	5b 81 00 24 	sw (sp+36),r1
     924:	2b 81 00 bc 	lw r1,(sp+188)
     928:	5b 81 00 28 	sw (sp+40),r1
     92c:	2b 81 00 c0 	lw r1,(sp+192)
     930:	5b 81 00 2c 	sw (sp+44),r1
     934:	2b 81 00 c4 	lw r1,(sp+196)
     938:	5b 81 00 30 	sw (sp+48),r1
     93c:	2b 81 00 c8 	lw r1,(sp+200)
     940:	5b 81 00 34 	sw (sp+52),r1
     944:	2b 81 00 cc 	lw r1,(sp+204)
     948:	5b 81 00 38 	sw (sp+56),r1
     94c:	2b 81 00 d0 	lw r1,(sp+208)
     950:	5b 81 00 3c 	sw (sp+60),r1
     954:	2b 81 00 d4 	lw r1,(sp+212)
     958:	5b 81 00 40 	sw (sp+64),r1
     95c:	2b 81 00 78 	lw r1,(sp+120)
     960:	2b 89 00 98 	lw r9,(sp+152)
     964:	2b 82 00 7c 	lw r2,(sp+124)
     968:	2b 83 00 80 	lw r3,(sp+128)
     96c:	5b 89 00 04 	sw (sp+4),r9
     970:	2b 89 00 9c 	lw r9,(sp+156)
     974:	2b 84 00 84 	lw r4,(sp+132)
     978:	2b 85 00 88 	lw r5,(sp+136)
     97c:	5b 89 00 08 	sw (sp+8),r9
     980:	2b 89 00 a0 	lw r9,(sp+160)
     984:	2b 86 00 8c 	lw r6,(sp+140)
     988:	2b 87 00 90 	lw r7,(sp+144)
     98c:	5b 89 00 0c 	sw (sp+12),r9
     990:	2b 89 00 a4 	lw r9,(sp+164)
     994:	2b 88 00 94 	lw r8,(sp+148)
     998:	5b 89 00 10 	sw (sp+16),r9
     99c:	2b 89 00 a8 	lw r9,(sp+168)
     9a0:	5b 89 00 14 	sw (sp+20),r9
     9a4:	2b 89 00 ac 	lw r9,(sp+172)
     9a8:	5b 89 00 18 	sw (sp+24),r9
     9ac:	2b 89 00 b0 	lw r9,(sp+176)
     9b0:	5b 89 00 1c 	sw (sp+28),r9
     9b4:	2b 89 00 b4 	lw r9,(sp+180)
     9b8:	5b 89 00 20 	sw (sp+32),r9
     9bc:	fb ff fe 78 	calli 39c <_Z2L13armS_S_S_>
					for(int i=0; i<(Cao1-Ca); i++){
     9c0:	29 a1 00 00 	lw r1,(r13+0)
     9c4:	c8 2b 08 00 	sub r1,r1,r11
     9c8:	48 2e ff c4 	bg r1,r14,8d8 <_Z4Face3armS_S_S_i+0x2f0>
     9cc:	29 89 00 00 	lw r9,(r12+0)
     9d0:	e3 ff ff b6 	bi 8a8 <_Z4Face3armS_S_S_i+0x2c0>
						R1(a,b,c,d);
     9d4:	2b 81 00 d8 	lw r1,(sp+216)
					for(int i=0; i<(Ca-Cao1); i++){
     9d8:	35 ce 00 01 	addi r14,r14,1
						R1(a,b,c,d);
     9dc:	5b 81 00 44 	sw (sp+68),r1
     9e0:	2b 81 00 dc 	lw r1,(sp+220)
     9e4:	5b 81 00 48 	sw (sp+72),r1
     9e8:	2b 81 00 e0 	lw r1,(sp+224)
     9ec:	5b 81 00 4c 	sw (sp+76),r1
     9f0:	2b 81 00 e4 	lw r1,(sp+228)
     9f4:	5b 81 00 50 	sw (sp+80),r1
     9f8:	2b 81 00 e8 	lw r1,(sp+232)
     9fc:	5b 81 00 54 	sw (sp+84),r1
     a00:	2b 81 00 ec 	lw r1,(sp+236)
     a04:	5b 81 00 58 	sw (sp+88),r1
     a08:	2b 81 00 f0 	lw r1,(sp+240)
     a0c:	5b 81 00 5c 	sw (sp+92),r1
     a10:	2b 81 00 f4 	lw r1,(sp+244)
     a14:	5b 81 00 60 	sw (sp+96),r1
     a18:	2b 81 00 b8 	lw r1,(sp+184)
     a1c:	5b 81 00 24 	sw (sp+36),r1
     a20:	2b 81 00 bc 	lw r1,(sp+188)
     a24:	5b 81 00 28 	sw (sp+40),r1
     a28:	2b 81 00 c0 	lw r1,(sp+192)
     a2c:	5b 81 00 2c 	sw (sp+44),r1
     a30:	2b 81 00 c4 	lw r1,(sp+196)
     a34:	5b 81 00 30 	sw (sp+48),r1
     a38:	2b 81 00 c8 	lw r1,(sp+200)
     a3c:	5b 81 00 34 	sw (sp+52),r1
     a40:	2b 81 00 cc 	lw r1,(sp+204)
     a44:	5b 81 00 38 	sw (sp+56),r1
     a48:	2b 81 00 d0 	lw r1,(sp+208)
     a4c:	5b 81 00 3c 	sw (sp+60),r1
     a50:	2b 81 00 d4 	lw r1,(sp+212)
     a54:	5b 81 00 40 	sw (sp+64),r1
     a58:	2b 81 00 78 	lw r1,(sp+120)
     a5c:	2b 89 00 98 	lw r9,(sp+152)
     a60:	2b 82 00 7c 	lw r2,(sp+124)
     a64:	2b 83 00 80 	lw r3,(sp+128)
     a68:	5b 89 00 04 	sw (sp+4),r9
     a6c:	2b 89 00 9c 	lw r9,(sp+156)
     a70:	2b 84 00 84 	lw r4,(sp+132)
     a74:	2b 85 00 88 	lw r5,(sp+136)
     a78:	5b 89 00 08 	sw (sp+8),r9
     a7c:	2b 89 00 a0 	lw r9,(sp+160)
     a80:	2b 86 00 8c 	lw r6,(sp+140)
     a84:	2b 87 00 90 	lw r7,(sp+144)
     a88:	5b 89 00 0c 	sw (sp+12),r9
     a8c:	2b 89 00 a4 	lw r9,(sp+164)
     a90:	2b 88 00 94 	lw r8,(sp+148)
     a94:	5b 89 00 10 	sw (sp+16),r9
     a98:	2b 89 00 a8 	lw r9,(sp+168)
     a9c:	5b 89 00 14 	sw (sp+20),r9
     aa0:	2b 89 00 ac 	lw r9,(sp+172)
     aa4:	5b 89 00 18 	sw (sp+24),r9
     aa8:	2b 89 00 b0 	lw r9,(sp+176)
     aac:	5b 89 00 1c 	sw (sp+28),r9
     ab0:	2b 89 00 b4 	lw r9,(sp+180)
     ab4:	5b 89 00 20 	sw (sp+32),r9
     ab8:	fb ff fe 08 	calli 2d8 <_Z2R13armS_S_S_>
					for(int i=0; i<(Ca-Cao1); i++){
     abc:	29 a1 00 00 	lw r1,(r13+0)
     ac0:	c9 61 08 00 	sub r1,r11,r1
     ac4:	48 2e ff c4 	bg r1,r14,9d4 <_Z4Face3armS_S_S_i+0x3ec>
     ac8:	29 89 00 00 	lw r9,(r12+0)
     acc:	e3 ff ff 77 	bi 8a8 <_Z4Face3armS_S_S_i+0x2c0>
			if(Cao < 5){
     ad0:	4d 49 00 b8 	bge r10,r9,db0 <_Z4Face3armS_S_S_i+0x7c8>
					for(int i=0; i<(Cao1-Ca); i++){
     ad4:	34 0d 00 02 	mvi r13,2
     ad8:	34 0e 00 01 	mvi r14,1
					R11(a,b,c,d);
     adc:	2b 81 00 d8 	lw r1,(sp+216)
     ae0:	5b 81 00 44 	sw (sp+68),r1
     ae4:	2b 81 00 dc 	lw r1,(sp+220)
     ae8:	5b 81 00 48 	sw (sp+72),r1
     aec:	2b 81 00 e0 	lw r1,(sp+224)
     af0:	5b 81 00 4c 	sw (sp+76),r1
     af4:	2b 81 00 e4 	lw r1,(sp+228)
     af8:	5b 81 00 50 	sw (sp+80),r1
     afc:	2b 81 00 e8 	lw r1,(sp+232)
     b00:	5b 81 00 54 	sw (sp+84),r1
     b04:	2b 81 00 ec 	lw r1,(sp+236)
     b08:	5b 81 00 58 	sw (sp+88),r1
     b0c:	2b 81 00 f0 	lw r1,(sp+240)
     b10:	5b 81 00 5c 	sw (sp+92),r1
     b14:	2b 81 00 f4 	lw r1,(sp+244)
     b18:	5b 81 00 60 	sw (sp+96),r1
     b1c:	2b 81 00 b8 	lw r1,(sp+184)
     b20:	5b 81 00 24 	sw (sp+36),r1
     b24:	2b 81 00 bc 	lw r1,(sp+188)
     b28:	5b 81 00 28 	sw (sp+40),r1
     b2c:	2b 81 00 c0 	lw r1,(sp+192)
     b30:	5b 81 00 2c 	sw (sp+44),r1
     b34:	2b 81 00 c4 	lw r1,(sp+196)
     b38:	5b 81 00 30 	sw (sp+48),r1
     b3c:	2b 81 00 c8 	lw r1,(sp+200)
     b40:	5b 81 00 34 	sw (sp+52),r1
     b44:	2b 81 00 cc 	lw r1,(sp+204)
     b48:	5b 81 00 38 	sw (sp+56),r1
     b4c:	2b 81 00 d0 	lw r1,(sp+208)
     b50:	5b 81 00 3c 	sw (sp+60),r1
     b54:	2b 81 00 d4 	lw r1,(sp+212)
     b58:	5b 81 00 40 	sw (sp+64),r1
     b5c:	2b 81 00 78 	lw r1,(sp+120)
     b60:	2b 89 00 98 	lw r9,(sp+152)
     b64:	2b 82 00 7c 	lw r2,(sp+124)
     b68:	2b 83 00 80 	lw r3,(sp+128)
     b6c:	5b 89 00 04 	sw (sp+4),r9
     b70:	2b 89 00 9c 	lw r9,(sp+156)
     b74:	2b 84 00 84 	lw r4,(sp+132)
     b78:	2b 85 00 88 	lw r5,(sp+136)
     b7c:	5b 89 00 08 	sw (sp+8),r9
     b80:	2b 89 00 a0 	lw r9,(sp+160)
     b84:	2b 86 00 8c 	lw r6,(sp+140)
     b88:	2b 87 00 90 	lw r7,(sp+144)
     b8c:	5b 89 00 0c 	sw (sp+12),r9
     b90:	2b 89 00 a4 	lw r9,(sp+164)
     b94:	2b 88 00 94 	lw r8,(sp+148)
     b98:	5b 89 00 10 	sw (sp+16),r9
     b9c:	2b 89 00 a8 	lw r9,(sp+168)
     ba0:	5b 89 00 14 	sw (sp+20),r9
     ba4:	2b 89 00 ac 	lw r9,(sp+172)
     ba8:	5b 89 00 18 	sw (sp+24),r9
     bac:	2b 89 00 b0 	lw r9,(sp+176)
     bb0:	5b 89 00 1c 	sw (sp+28),r9
     bb4:	2b 89 00 b4 	lw r9,(sp+180)
     bb8:	5b 89 00 20 	sw (sp+32),r9
     bbc:	fb ff fe 29 	calli 460 <_Z3R113armS_S_S_>
				for(int i = 0; i<2 ; i++){
     bc0:	5d ae 00 06 	bne r13,r14,bd8 <_Z4Face3armS_S_S_i+0x5f0>
     bc4:	29 89 00 00 	lw r9,(r12+0)
     bc8:	78 02 00 00 	mvhi r2,0x0
     bcc:	38 42 23 c0 	ori r2,r2,0x23c0
     bd0:	28 4d 00 00 	lw r13,(r2+0)
     bd4:	e3 ff ff 35 	bi 8a8 <_Z4Face3armS_S_S_i+0x2c0>
     bd8:	34 0d 00 01 	mvi r13,1
     bdc:	e3 ff ff c0 	bi adc <_Z4Face3armS_S_S_i+0x4f4>
					R11(a,b,c,d);
     be0:	2b 81 00 d8 	lw r1,(sp+216)
     be4:	5b 81 00 44 	sw (sp+68),r1
     be8:	2b 81 00 dc 	lw r1,(sp+220)
     bec:	5b 81 00 48 	sw (sp+72),r1
     bf0:	2b 81 00 e0 	lw r1,(sp+224)
     bf4:	5b 81 00 4c 	sw (sp+76),r1
     bf8:	2b 81 00 e4 	lw r1,(sp+228)
     bfc:	5b 81 00 50 	sw (sp+80),r1
     c00:	2b 81 00 e8 	lw r1,(sp+232)
     c04:	5b 81 00 54 	sw (sp+84),r1
     c08:	2b 81 00 ec 	lw r1,(sp+236)
     c0c:	5b 81 00 58 	sw (sp+88),r1
     c10:	2b 81 00 f0 	lw r1,(sp+240)
     c14:	5b 81 00 5c 	sw (sp+92),r1
     c18:	2b 81 00 f4 	lw r1,(sp+244)
     c1c:	5b 81 00 60 	sw (sp+96),r1
     c20:	2b 81 00 b8 	lw r1,(sp+184)
     c24:	5b 81 00 24 	sw (sp+36),r1
     c28:	2b 81 00 bc 	lw r1,(sp+188)
     c2c:	5b 81 00 28 	sw (sp+40),r1
     c30:	2b 81 00 c0 	lw r1,(sp+192)
     c34:	5b 81 00 2c 	sw (sp+44),r1
     c38:	2b 81 00 c4 	lw r1,(sp+196)
     c3c:	5b 81 00 30 	sw (sp+48),r1
     c40:	2b 81 00 c8 	lw r1,(sp+200)
     c44:	5b 81 00 34 	sw (sp+52),r1
     c48:	2b 81 00 cc 	lw r1,(sp+204)
     c4c:	5b 81 00 38 	sw (sp+56),r1
     c50:	2b 81 00 d0 	lw r1,(sp+208)
     c54:	5b 81 00 3c 	sw (sp+60),r1
     c58:	2b 81 00 d4 	lw r1,(sp+212)
     c5c:	5b 81 00 40 	sw (sp+64),r1
     c60:	2b 81 00 78 	lw r1,(sp+120)
     c64:	2b 89 00 98 	lw r9,(sp+152)
     c68:	2b 82 00 7c 	lw r2,(sp+124)
     c6c:	2b 83 00 80 	lw r3,(sp+128)
     c70:	5b 89 00 04 	sw (sp+4),r9
     c74:	2b 89 00 9c 	lw r9,(sp+156)
     c78:	2b 84 00 84 	lw r4,(sp+132)
     c7c:	2b 85 00 88 	lw r5,(sp+136)
     c80:	5b 89 00 08 	sw (sp+8),r9
     c84:	2b 89 00 a0 	lw r9,(sp+160)
     c88:	2b 86 00 8c 	lw r6,(sp+140)
     c8c:	2b 87 00 90 	lw r7,(sp+144)
     c90:	5b 89 00 0c 	sw (sp+12),r9
     c94:	2b 89 00 a4 	lw r9,(sp+164)
     c98:	2b 88 00 94 	lw r8,(sp+148)
     c9c:	5b 89 00 10 	sw (sp+16),r9
     ca0:	2b 89 00 a8 	lw r9,(sp+168)
     ca4:	5b 89 00 14 	sw (sp+20),r9
     ca8:	2b 89 00 ac 	lw r9,(sp+172)
     cac:	5b 89 00 18 	sw (sp+24),r9
     cb0:	2b 89 00 b0 	lw r9,(sp+176)
     cb4:	5b 89 00 1c 	sw (sp+28),r9
     cb8:	2b 89 00 b4 	lw r9,(sp+180)
     cbc:	5b 89 00 20 	sw (sp+32),r9
     cc0:	fb ff fd e8 	calli 460 <_Z3R113armS_S_S_>
     cc4:	e3 ff fe e9 	bi 868 <_Z4Face3armS_S_S_i+0x280>
					L11(a,b,c,d);
     cc8:	2b 81 00 d8 	lw r1,(sp+216)
     ccc:	5b 81 00 44 	sw (sp+68),r1
     cd0:	2b 81 00 dc 	lw r1,(sp+220)
     cd4:	5b 81 00 48 	sw (sp+72),r1
     cd8:	2b 81 00 e0 	lw r1,(sp+224)
     cdc:	5b 81 00 4c 	sw (sp+76),r1
     ce0:	2b 81 00 e4 	lw r1,(sp+228)
     ce4:	5b 81 00 50 	sw (sp+80),r1
     ce8:	2b 81 00 e8 	lw r1,(sp+232)
     cec:	5b 81 00 54 	sw (sp+84),r1
     cf0:	2b 81 00 ec 	lw r1,(sp+236)
     cf4:	5b 81 00 58 	sw (sp+88),r1
     cf8:	2b 81 00 f0 	lw r1,(sp+240)
     cfc:	5b 81 00 5c 	sw (sp+92),r1
     d00:	2b 81 00 f4 	lw r1,(sp+244)
     d04:	5b 81 00 60 	sw (sp+96),r1
     d08:	2b 81 00 b8 	lw r1,(sp+184)
     d0c:	5b 81 00 24 	sw (sp+36),r1
     d10:	2b 81 00 bc 	lw r1,(sp+188)
     d14:	5b 81 00 28 	sw (sp+40),r1
     d18:	2b 81 00 c0 	lw r1,(sp+192)
     d1c:	5b 81 00 2c 	sw (sp+44),r1
     d20:	2b 81 00 c4 	lw r1,(sp+196)
     d24:	5b 81 00 30 	sw (sp+48),r1
     d28:	2b 81 00 c8 	lw r1,(sp+200)
     d2c:	5b 81 00 34 	sw (sp+52),r1
     d30:	2b 81 00 cc 	lw r1,(sp+204)
     d34:	5b 81 00 38 	sw (sp+56),r1
     d38:	2b 81 00 d0 	lw r1,(sp+208)
     d3c:	5b 81 00 3c 	sw (sp+60),r1
     d40:	2b 81 00 d4 	lw r1,(sp+212)
     d44:	5b 81 00 40 	sw (sp+64),r1
     d48:	2b 81 00 78 	lw r1,(sp+120)
     d4c:	2b 89 00 98 	lw r9,(sp+152)
     d50:	2b 82 00 7c 	lw r2,(sp+124)
     d54:	2b 83 00 80 	lw r3,(sp+128)
     d58:	5b 89 00 04 	sw (sp+4),r9
     d5c:	2b 89 00 9c 	lw r9,(sp+156)
     d60:	2b 84 00 84 	lw r4,(sp+132)
     d64:	2b 85 00 88 	lw r5,(sp+136)
     d68:	5b 89 00 08 	sw (sp+8),r9
     d6c:	2b 89 00 a0 	lw r9,(sp+160)
     d70:	2b 86 00 8c 	lw r6,(sp+140)
     d74:	2b 87 00 90 	lw r7,(sp+144)
     d78:	5b 89 00 0c 	sw (sp+12),r9
     d7c:	2b 89 00 a4 	lw r9,(sp+164)
     d80:	2b 88 00 94 	lw r8,(sp+148)
     d84:	5b 89 00 10 	sw (sp+16),r9
     d88:	2b 89 00 a8 	lw r9,(sp+168)
     d8c:	5b 89 00 14 	sw (sp+20),r9
     d90:	2b 89 00 ac 	lw r9,(sp+172)
     d94:	5b 89 00 18 	sw (sp+24),r9
     d98:	2b 89 00 b0 	lw r9,(sp+176)
     d9c:	5b 89 00 1c 	sw (sp+28),r9
     da0:	2b 89 00 b4 	lw r9,(sp+180)
     da4:	5b 89 00 20 	sw (sp+32),r9
     da8:	fb ff fd df 	calli 524 <_Z3L113armS_S_S_>
     dac:	e3 ff fe b2 	bi 874 <_Z4Face3armS_S_S_i+0x28c>
				if(Ca == 5){
     db0:	34 0a 00 05 	mvi r10,5
     db4:	45 6a 00 3e 	be r11,r10,eac <_Z4Face3armS_S_S_i+0x8c4>
     db8:	78 0e 00 00 	mvhi r14,0x0
     dbc:	39 ce 23 c0 	ori r14,r14,0x23c0
				if(Ca == 6){
     dc0:	34 0a 00 06 	mvi r10,6
     dc4:	29 cd 00 00 	lw r13,(r14+0)
     dc8:	5d 6a fe b8 	bne r11,r10,8a8 <_Z4Face3armS_S_S_i+0x2c0>
					L11(a,b,c,d);
     dcc:	2b 89 00 d8 	lw r9,(sp+216)
     dd0:	5b 89 00 44 	sw (sp+68),r9
     dd4:	2b 89 00 dc 	lw r9,(sp+220)
     dd8:	5b 89 00 48 	sw (sp+72),r9
     ddc:	2b 89 00 e0 	lw r9,(sp+224)
     de0:	5b 89 00 4c 	sw (sp+76),r9
     de4:	2b 89 00 e4 	lw r9,(sp+228)
     de8:	5b 89 00 50 	sw (sp+80),r9
     dec:	2b 89 00 e8 	lw r9,(sp+232)
     df0:	5b 89 00 54 	sw (sp+84),r9
     df4:	2b 89 00 ec 	lw r9,(sp+236)
     df8:	5b 89 00 58 	sw (sp+88),r9
     dfc:	2b 89 00 f0 	lw r9,(sp+240)
     e00:	5b 89 00 5c 	sw (sp+92),r9
     e04:	2b 89 00 f4 	lw r9,(sp+244)
     e08:	5b 89 00 60 	sw (sp+96),r9
     e0c:	2b 89 00 b8 	lw r9,(sp+184)
     e10:	5b 89 00 24 	sw (sp+36),r9
     e14:	2b 89 00 bc 	lw r9,(sp+188)
     e18:	5b 89 00 28 	sw (sp+40),r9
     e1c:	2b 89 00 c0 	lw r9,(sp+192)
     e20:	5b 89 00 2c 	sw (sp+44),r9
     e24:	2b 89 00 c4 	lw r9,(sp+196)
     e28:	5b 89 00 30 	sw (sp+48),r9
     e2c:	2b 89 00 c8 	lw r9,(sp+200)
     e30:	5b 89 00 34 	sw (sp+52),r9
     e34:	2b 89 00 cc 	lw r9,(sp+204)
     e38:	5b 89 00 38 	sw (sp+56),r9
     e3c:	2b 89 00 d0 	lw r9,(sp+208)
     e40:	5b 89 00 3c 	sw (sp+60),r9
     e44:	2b 89 00 d4 	lw r9,(sp+212)
     e48:	5b 89 00 40 	sw (sp+64),r9
     e4c:	2b 89 00 98 	lw r9,(sp+152)
     e50:	5b 89 00 04 	sw (sp+4),r9
     e54:	2b 89 00 9c 	lw r9,(sp+156)
     e58:	5b 89 00 08 	sw (sp+8),r9
     e5c:	2b 89 00 a0 	lw r9,(sp+160)
     e60:	5b 89 00 0c 	sw (sp+12),r9
     e64:	2b 89 00 a4 	lw r9,(sp+164)
     e68:	5b 89 00 10 	sw (sp+16),r9
     e6c:	2b 89 00 a8 	lw r9,(sp+168)
     e70:	5b 89 00 14 	sw (sp+20),r9
     e74:	2b 89 00 ac 	lw r9,(sp+172)
     e78:	5b 89 00 18 	sw (sp+24),r9
     e7c:	2b 89 00 b0 	lw r9,(sp+176)
     e80:	5b 89 00 1c 	sw (sp+28),r9
     e84:	2b 89 00 b4 	lw r9,(sp+180)
     e88:	5b 89 00 20 	sw (sp+32),r9
     e8c:	fb ff fd a6 	calli 524 <_Z3L113armS_S_S_>
			if(Cao >= 5){
     e90:	29 89 00 00 	lw r9,(r12+0)
     e94:	34 01 00 04 	mvi r1,4
     e98:	49 21 ff 0f 	bg r9,r1,ad4 <_Z4Face3armS_S_S_i+0x4ec>
     e9c:	78 01 00 00 	mvhi r1,0x0
     ea0:	38 21 23 c0 	ori r1,r1,0x23c0
     ea4:	28 2d 00 00 	lw r13,(r1+0)
     ea8:	e3 ff fe 80 	bi 8a8 <_Z4Face3armS_S_S_i+0x2c0>
					R11(a,b,c,d);
     eac:	2b 89 00 d8 	lw r9,(sp+216)
     eb0:	5b 89 00 44 	sw (sp+68),r9
     eb4:	2b 89 00 dc 	lw r9,(sp+220)
     eb8:	5b 89 00 48 	sw (sp+72),r9
     ebc:	2b 89 00 e0 	lw r9,(sp+224)
     ec0:	5b 89 00 4c 	sw (sp+76),r9
     ec4:	2b 89 00 e4 	lw r9,(sp+228)
     ec8:	5b 89 00 50 	sw (sp+80),r9
     ecc:	2b 89 00 e8 	lw r9,(sp+232)
     ed0:	5b 89 00 54 	sw (sp+84),r9
     ed4:	2b 89 00 ec 	lw r9,(sp+236)
     ed8:	5b 89 00 58 	sw (sp+88),r9
     edc:	2b 89 00 f0 	lw r9,(sp+240)
     ee0:	5b 89 00 5c 	sw (sp+92),r9
     ee4:	2b 89 00 f4 	lw r9,(sp+244)
     ee8:	5b 89 00 60 	sw (sp+96),r9
     eec:	2b 89 00 b8 	lw r9,(sp+184)
     ef0:	5b 89 00 24 	sw (sp+36),r9
     ef4:	2b 89 00 bc 	lw r9,(sp+188)
     ef8:	5b 89 00 28 	sw (sp+40),r9
     efc:	2b 89 00 c0 	lw r9,(sp+192)
     f00:	5b 89 00 2c 	sw (sp+44),r9
     f04:	2b 89 00 c4 	lw r9,(sp+196)
     f08:	5b 89 00 30 	sw (sp+48),r9
     f0c:	2b 89 00 c8 	lw r9,(sp+200)
     f10:	5b 89 00 34 	sw (sp+52),r9
     f14:	2b 89 00 cc 	lw r9,(sp+204)
     f18:	5b 89 00 38 	sw (sp+56),r9
     f1c:	2b 89 00 d0 	lw r9,(sp+208)
     f20:	5b 89 00 3c 	sw (sp+60),r9
     f24:	2b 89 00 d4 	lw r9,(sp+212)
     f28:	5b 89 00 40 	sw (sp+64),r9
     f2c:	2b 89 00 98 	lw r9,(sp+152)
     f30:	5b 89 00 04 	sw (sp+4),r9
     f34:	2b 89 00 9c 	lw r9,(sp+156)
     f38:	5b 89 00 08 	sw (sp+8),r9
     f3c:	2b 89 00 a0 	lw r9,(sp+160)
     f40:	5b 89 00 0c 	sw (sp+12),r9
     f44:	2b 89 00 a4 	lw r9,(sp+164)
     f48:	5b 89 00 10 	sw (sp+16),r9
     f4c:	2b 89 00 a8 	lw r9,(sp+168)
     f50:	5b 89 00 14 	sw (sp+20),r9
     f54:	2b 89 00 ac 	lw r9,(sp+172)
     f58:	5b 89 00 18 	sw (sp+24),r9
     f5c:	2b 89 00 b0 	lw r9,(sp+176)
     f60:	5b 89 00 1c 	sw (sp+28),r9
     f64:	2b 89 00 b4 	lw r9,(sp+180)
     f68:	5b 89 00 20 	sw (sp+32),r9
     f6c:	fb ff fd 3d 	calli 460 <_Z3R113armS_S_S_>
     f70:	e3 ff ff c8 	bi e90 <_Z4Face3armS_S_S_i+0x8a8>

00000f74 <main>:

int main(){
     f74:	37 9c fe d0 	addi sp,sp,-304
     f78:	5b 8b 00 a8 	sw (sp+168),r11
     f7c:	5b 8c 00 a4 	sw (sp+164),r12
     f80:	5b 8d 00 a0 	sw (sp+160),r13
     f84:	5b 8e 00 9c 	sw (sp+156),r14
     f88:	5b 8f 00 98 	sw (sp+152),r15
     f8c:	5b 90 00 94 	sw (sp+148),r16
     f90:	5b 91 00 90 	sw (sp+144),r17
     f94:	5b 92 00 8c 	sw (sp+140),r18
     f98:	5b 93 00 88 	sw (sp+136),r19
     f9c:	5b 94 00 84 	sw (sp+132),r20
     fa0:	5b 95 00 80 	sw (sp+128),r21
     fa4:	5b 96 00 7c 	sw (sp+124),r22
     fa8:	5b 97 00 78 	sw (sp+120),r23
     fac:	5b 98 00 74 	sw (sp+116),r24
     fb0:	5b 99 00 70 	sw (sp+112),r25
     fb4:	5b 9b 00 6c 	sw (sp+108),fp
     fb8:	5b 9d 00 68 	sw (sp+104),ra

	cam camera;

	uart_putstr("YInitializing...");
     fbc:	78 02 00 00 	mvhi r2,0x0
     fc0:	38 42 23 c4 	ori r2,r2,0x23c4
     fc4:	28 41 00 00 	lw r1,(r2+0)
		uart_putchar('\n');

	    uint8_t cm=read_command();

		if (cm){
			if (command_array[0] == 0xff) {
     fc8:	34 0e 00 ff 	mvi r14,255
	uart_putstr("YInitializing...");
     fcc:	f8 00 01 dc 	calli 173c <uart_putstr>
   volatile uint32_t en7;
   volatile uint32_t period7;
   volatile uint32_t duty7;
} pwm_t;

class  pwm{
     fd0:	78 04 50 00 	mvhi r4,0x5000
	arm1.set_serv(0,1);
     fd4:	34 03 00 01 	mvi r3,1
     fd8:	34 02 00 00 	mvi r2,0
     fdc:	37 81 00 b4 	addi r1,sp,180
     fe0:	5b 84 00 b4 	sw (sp+180),r4
     fe4:	5b 84 00 d4 	sw (sp+212),r4
     fe8:	5b 84 00 f4 	sw (sp+244),r4
     fec:	5b 84 01 14 	sw (sp+276),r4
     ff0:	f8 00 03 72 	calli 1db8 <_ZN3arm8set_servEii>
	arm2.set_serv(2,3);
     ff4:	34 03 00 03 	mvi r3,3
     ff8:	34 02 00 02 	mvi r2,2
     ffc:	37 81 00 d4 	addi r1,sp,212
    1000:	f8 00 03 6e 	calli 1db8 <_ZN3arm8set_servEii>
	arm3.set_serv(4,5);
    1004:	34 03 00 05 	mvi r3,5
    1008:	34 02 00 04 	mvi r2,4
    100c:	37 81 00 f4 	addi r1,sp,244
    1010:	f8 00 03 6a 	calli 1db8 <_ZN3arm8set_servEii>
	arm4.set_serv(6,7);
    1014:	34 03 00 07 	mvi r3,7
    1018:	34 02 00 06 	mvi r2,6
    101c:	37 81 01 14 	addi r1,sp,276
    1020:	f8 00 03 66 	calli 1db8 <_ZN3arm8set_servEii>
	uart_putstr("Ready");
    1024:	78 02 00 00 	mvhi r2,0x0
    1028:	38 42 23 c8 	ori r2,r2,0x23c8
    102c:	28 41 00 00 	lw r1,(r2+0)
    1030:	78 02 00 00 	mvhi r2,0x0
    1034:	38 42 23 cc 	ori r2,r2,0x23cc
    1038:	28 4c 00 00 	lw r12,(r2+0)
    103c:	78 02 00 00 	mvhi r2,0x0
    1040:	38 42 23 d0 	ori r2,r2,0x23d0
    1044:	28 54 00 00 	lw r20,(r2+0)
    1048:	78 02 00 00 	mvhi r2,0x0
    104c:	38 42 23 d4 	ori r2,r2,0x23d4
    1050:	28 50 00 00 	lw r16,(r2+0)
    1054:	78 02 00 00 	mvhi r2,0x0
    1058:	38 42 23 d8 	ori r2,r2,0x23d8
    105c:	28 53 00 00 	lw r19,(r2+0)
    1060:	78 02 00 00 	mvhi r2,0x0
    1064:	38 42 23 dc 	ori r2,r2,0x23dc
    1068:	28 52 00 00 	lw r18,(r2+0)
		uart_putstr("------Instruction------");
    106c:	78 02 00 00 	mvhi r2,0x0
    1070:	38 42 23 e0 	ori r2,r2,0x23e0
    1074:	28 4b 00 00 	lw r11,(r2+0)
					uart_putstr("Home...");
    1078:	78 02 00 00 	mvhi r2,0x0
    107c:	38 42 23 e4 	ori r2,r2,0x23e4
    1080:	28 5b 00 00 	lw fp,(r2+0)
					arm4.home();
					uart_putstr("Ready");
			}

			if (command_array[0] == 0xfe){
					uart_putstr("Init...");
    1084:	78 02 00 00 	mvhi r2,0x0
    1088:	38 42 23 e8 	ori r2,r2,0x23e8
    108c:	28 59 00 00 	lw r25,(r2+0)
					uart_putstr("Ready");
			}

			if (command_array[0] == 0xfd){
				inst = command_array[2];
				uart_putstr("Moving...");
    1090:	78 02 00 00 	mvhi r2,0x0
    1094:	38 42 23 ec 	ori r2,r2,0x23ec
    1098:	28 51 00 00 	lw r17,(r2+0)
			}
			if (command_array[0] == 0xfc){
				br  = command_array[1];
				dir = command_array[2];
				val = command_array[3];
				uart_putstr("Calibrating...");
    109c:	78 02 00 00 	mvhi r2,0x0
    10a0:	38 42 23 f0 	ori r2,r2,0x23f0
    10a4:	28 58 00 00 	lw r24,(r2+0)
				Face(arm1,arm2,arm3,arm4,br);
				uart_putstr("Ready");
			}

			if (command_array[0] == 0x50){
				uart_putstr("Reset camera...");
    10a8:	78 02 00 00 	mvhi r2,0x0
    10ac:	38 42 23 f4 	ori r2,r2,0x23f4
    10b0:	28 57 00 00 	lw r23,(r2+0)
				camera.reset();
			}

			if (command_array[0] == 0x5a){
				uart_putstr("Take picture...");
    10b4:	78 02 00 00 	mvhi r2,0x0
    10b8:	38 42 23 f8 	ori r2,r2,0x23f8
    10bc:	28 56 00 00 	lw r22,(r2+0)
				camera.takepicture();
			}

			if (command_array[0] == 0x5b){
				uart_putstr("Get size...");
    10c0:	78 02 00 00 	mvhi r2,0x0
    10c4:	38 42 23 fc 	ori r2,r2,0x23fc
					uart_putstr("Ready");
    10c8:	b8 20 78 00 	mv r15,r1
				uart_putstr("Get size...");
    10cc:	28 55 00 00 	lw r21,(r2+0)
	uart_putstr("Ready");
    10d0:	f8 00 01 9b 	calli 173c <uart_putstr>
			if (command_array[0] == 0xfe){
    10d4:	34 0d 00 fe 	mvi r13,254
		uart_putchar('\n');
    10d8:	34 01 00 0a 	mvi r1,10
    10dc:	f8 00 01 8e 	calli 1714 <uart_putchar>
		uart_putstr("------Instruction------");
    10e0:	b9 60 08 00 	mv r1,r11
    10e4:	f8 00 01 96 	calli 173c <uart_putstr>
		uart_putchar('\n');
    10e8:	34 01 00 0a 	mvi r1,10
    10ec:	f8 00 01 8a 	calli 1714 <uart_putchar>
	    uint8_t cm=read_command();
    10f0:	fb ff fc 63 	calli 27c <_Z12read_commandv>
		if (cm){
    10f4:	44 20 ff f9 	be r1,r0,10d8 <_RAM_END+0xd8>
			if (command_array[0] == 0xff) {
    10f8:	29 81 00 00 	lw r1,(r12+0)
    10fc:	44 2e 00 19 	be r1,r14,1160 <_RAM_END+0x160>
			if (command_array[0] == 0xfe){
    1100:	44 2d 00 26 	be r1,r13,1198 <_RAM_END+0x198>
			if (command_array[0] == 0xfd){
    1104:	34 02 00 fd 	mvi r2,253
    1108:	44 22 00 33 	be r1,r2,11d4 <_RAM_END+0x1d4>
			if (command_array[0] == 0xfc){
    110c:	34 02 00 fc 	mvi r2,252
    1110:	44 22 00 43 	be r1,r2,121c <_RAM_END+0x21c>
			if (command_array[0] == 0xfb){
    1114:	34 02 00 fb 	mvi r2,251
    1118:	44 22 00 57 	be r1,r2,1274 <_RAM_END+0x274>
			if (command_array[0] == 0x50){
    111c:	34 02 00 50 	mvi r2,80
    1120:	44 22 00 99 	be r1,r2,1384 <_RAM_END+0x384>
			if (command_array[0] == 0x5a){
    1124:	34 02 00 5a 	mvi r2,90
    1128:	44 22 00 9e 	be r1,r2,13a0 <_RAM_END+0x3a0>
			if (command_array[0] == 0x5b){
    112c:	34 02 00 5b 	mvi r2,91
    1130:	44 22 00 a3 	be r1,r2,13bc <_RAM_END+0x3bc>
				camera.getsize();
			}

			if (command_array[0] == 0x5c){
    1134:	34 02 00 5c 	mvi r2,92
    1138:	44 22 00 a8 	be r1,r2,13d8 <_RAM_END+0x3d8>
				uart_putstr("Sending...");
				camera.sendpicture();
			}

			if (command_array[0] == 0x5d){
    113c:	34 02 00 5d 	mvi r2,93
    1140:	5c 22 ff e6 	bne r1,r2,10d8 <_RAM_END+0xd8>
				uart_putstr("Stoping...");
    1144:	78 02 00 00 	mvhi r2,0x0
    1148:	38 42 24 04 	ori r2,r2,0x2404
    114c:	28 41 00 00 	lw r1,(r2+0)
    1150:	f8 00 01 7b 	calli 173c <uart_putstr>
				camera.stoptaking();
    1154:	37 81 00 ac 	addi r1,sp,172
    1158:	f8 00 04 70 	calli 2318 <_ZN3cam10stoptakingEv>
    115c:	e3 ff ff de 	bi 10d4 <_RAM_END+0xd4>
					uart_putstr("Home...");
    1160:	bb 60 08 00 	mv r1,fp
    1164:	f8 00 01 76 	calli 173c <uart_putstr>
					arm1.home();
    1168:	37 81 00 b4 	addi r1,sp,180
    116c:	f8 00 02 c8 	calli 1c8c <_ZN3arm4homeEv>
					arm2.home();
    1170:	37 81 00 d4 	addi r1,sp,212
    1174:	f8 00 02 c6 	calli 1c8c <_ZN3arm4homeEv>
					arm3.home();
    1178:	37 81 00 f4 	addi r1,sp,244
    117c:	f8 00 02 c4 	calli 1c8c <_ZN3arm4homeEv>
					arm4.home();
    1180:	37 81 01 14 	addi r1,sp,276
    1184:	f8 00 02 c2 	calli 1c8c <_ZN3arm4homeEv>
					uart_putstr("Ready");
    1188:	b9 e0 08 00 	mv r1,r15
    118c:	f8 00 01 6c 	calli 173c <uart_putstr>
    1190:	29 81 00 00 	lw r1,(r12+0)
			if (command_array[0] == 0xfe){
    1194:	5c 2d ff dc 	bne r1,r13,1104 <_RAM_END+0x104>
					uart_putstr("Init...");
    1198:	bb 20 08 00 	mv r1,r25
    119c:	f8 00 01 68 	calli 173c <uart_putstr>
					arm1.init();
    11a0:	37 81 00 b4 	addi r1,sp,180
    11a4:	f8 00 02 a1 	calli 1c28 <_ZN3arm4initEv>
					arm2.init();
    11a8:	37 81 00 d4 	addi r1,sp,212
    11ac:	f8 00 02 9f 	calli 1c28 <_ZN3arm4initEv>
					arm3.init();
    11b0:	37 81 00 f4 	addi r1,sp,244
    11b4:	f8 00 02 9d 	calli 1c28 <_ZN3arm4initEv>
					arm4.init();
    11b8:	37 81 01 14 	addi r1,sp,276
    11bc:	f8 00 02 9b 	calli 1c28 <_ZN3arm4initEv>
					uart_putstr("Ready");
    11c0:	b9 e0 08 00 	mv r1,r15
    11c4:	f8 00 01 5e 	calli 173c <uart_putstr>
    11c8:	29 81 00 00 	lw r1,(r12+0)
			if (command_array[0] == 0xfd){
    11cc:	34 02 00 fd 	mvi r2,253
    11d0:	5c 22 ff cf 	bne r1,r2,110c <_RAM_END+0x10c>
				inst = command_array[2];
    11d4:	29 82 00 08 	lw r2,(r12+8)
				uart_putstr("Moving...");
    11d8:	ba 20 08 00 	mv r1,r17
				inst = command_array[2];
    11dc:	5a 82 00 00 	sw (r20+0),r2
				uart_putstr("Moving...");
    11e0:	f8 00 01 57 	calli 173c <uart_putstr>
				if (command_array[1] == 0x01) 
    11e4:	29 81 00 04 	lw r1,(r12+4)
    11e8:	34 02 00 01 	mvi r2,1
    11ec:	44 22 00 a9 	be r1,r2,1490 <_RAM_END+0x490>
				if (command_array[1] == 0x02)
    11f0:	34 02 00 02 	mvi r2,2
    11f4:	44 22 00 9a 	be r1,r2,145c <_RAM_END+0x45c>
				if (command_array[1] == 0x03)
    11f8:	34 02 00 03 	mvi r2,3
    11fc:	44 22 00 8b 	be r1,r2,1428 <_RAM_END+0x428>
				if (command_array[1] == 0x04)
    1200:	34 02 00 04 	mvi r2,4
    1204:	44 22 00 7d 	be r1,r2,13f8 <_RAM_END+0x3f8>
				uart_putstr("Ready");
    1208:	b9 e0 08 00 	mv r1,r15
    120c:	f8 00 01 4c 	calli 173c <uart_putstr>
    1210:	29 81 00 00 	lw r1,(r12+0)
			if (command_array[0] == 0xfc){
    1214:	34 02 00 fc 	mvi r2,252
    1218:	5c 22 ff bf 	bne r1,r2,1114 <_RAM_END+0x114>
				val = command_array[3];
    121c:	29 82 00 0c 	lw r2,(r12+12)
				br  = command_array[1];
    1220:	29 84 00 04 	lw r4,(r12+4)
				dir = command_array[2];
    1224:	29 83 00 08 	lw r3,(r12+8)
				uart_putstr("Calibrating...");
    1228:	bb 00 08 00 	mv r1,r24
				val = command_array[3];
    122c:	5a 42 00 00 	sw (r18+0),r2
				br  = command_array[1];
    1230:	5a 04 00 00 	sw (r16+0),r4
				dir = command_array[2];
    1234:	5a 63 00 00 	sw (r19+0),r3
				uart_putstr("Calibrating...");
    1238:	f8 00 01 41 	calli 173c <uart_putstr>
				if (command_array[1] == 0x01)
    123c:	29 81 00 04 	lw r1,(r12+4)
    1240:	34 02 00 01 	mvi r2,1
    1244:	44 22 00 b1 	be r1,r2,1508 <_RAM_END+0x508>
				if (command_array[1] == 0x02)
    1248:	34 02 00 02 	mvi r2,2
    124c:	44 22 00 a9 	be r1,r2,14f0 <_RAM_END+0x4f0>
				if (command_array[1] == 0x03)
    1250:	34 02 00 03 	mvi r2,3
    1254:	44 22 00 a1 	be r1,r2,14d8 <_RAM_END+0x4d8>
				if (command_array[1] == 0x04)
    1258:	34 02 00 04 	mvi r2,4
    125c:	44 22 00 9a 	be r1,r2,14c4 <_RAM_END+0x4c4>
				uart_putstr("Ready");
    1260:	b9 e0 08 00 	mv r1,r15
    1264:	f8 00 01 36 	calli 173c <uart_putstr>
    1268:	29 81 00 00 	lw r1,(r12+0)
			if (command_array[0] == 0xfb){
    126c:	34 02 00 fb 	mvi r2,251
    1270:	5c 22 ff ab 	bne r1,r2,111c <_RAM_END+0x11c>
				br  = command_array[1];
    1274:	29 82 00 04 	lw r2,(r12+4)
				uart_putstr("Moving...");
    1278:	ba 20 08 00 	mv r1,r17
				br  = command_array[1];
    127c:	5a 02 00 00 	sw (r16+0),r2
				uart_putstr("Moving...");
    1280:	f8 00 01 2f 	calli 173c <uart_putstr>
				Face(arm1,arm2,arm3,arm4,br);
    1284:	2a 01 00 00 	lw r1,(r16+0)
    1288:	5b 81 00 64 	sw (sp+100),r1
    128c:	2b 81 01 14 	lw r1,(sp+276)
    1290:	5b 81 00 44 	sw (sp+68),r1
    1294:	2b 81 01 18 	lw r1,(sp+280)
    1298:	5b 81 00 48 	sw (sp+72),r1
    129c:	2b 81 01 1c 	lw r1,(sp+284)
    12a0:	5b 81 00 4c 	sw (sp+76),r1
    12a4:	2b 81 01 20 	lw r1,(sp+288)
    12a8:	5b 81 00 50 	sw (sp+80),r1
    12ac:	2b 81 01 24 	lw r1,(sp+292)
    12b0:	5b 81 00 54 	sw (sp+84),r1
    12b4:	2b 81 01 28 	lw r1,(sp+296)
    12b8:	5b 81 00 58 	sw (sp+88),r1
    12bc:	2b 81 01 2c 	lw r1,(sp+300)
    12c0:	5b 81 00 5c 	sw (sp+92),r1
    12c4:	2b 81 01 30 	lw r1,(sp+304)
    12c8:	5b 81 00 60 	sw (sp+96),r1
    12cc:	2b 81 00 f4 	lw r1,(sp+244)
    12d0:	5b 81 00 24 	sw (sp+36),r1
    12d4:	2b 81 00 f8 	lw r1,(sp+248)
    12d8:	5b 81 00 28 	sw (sp+40),r1
    12dc:	2b 81 00 fc 	lw r1,(sp+252)
    12e0:	5b 81 00 2c 	sw (sp+44),r1
    12e4:	2b 81 01 00 	lw r1,(sp+256)
    12e8:	5b 81 00 30 	sw (sp+48),r1
    12ec:	2b 81 01 04 	lw r1,(sp+260)
    12f0:	5b 81 00 34 	sw (sp+52),r1
    12f4:	2b 81 01 08 	lw r1,(sp+264)
    12f8:	5b 81 00 38 	sw (sp+56),r1
    12fc:	2b 81 01 0c 	lw r1,(sp+268)
    1300:	5b 81 00 3c 	sw (sp+60),r1
    1304:	2b 82 00 b8 	lw r2,(sp+184)
    1308:	2b 89 01 10 	lw r9,(sp+272)
    130c:	2b 83 00 bc 	lw r3,(sp+188)
    1310:	2b 84 00 c0 	lw r4,(sp+192)
    1314:	5b 89 00 40 	sw (sp+64),r9
    1318:	2b 89 00 d4 	lw r9,(sp+212)
    131c:	2b 85 00 c4 	lw r5,(sp+196)
    1320:	2b 86 00 c8 	lw r6,(sp+200)
    1324:	5b 89 00 04 	sw (sp+4),r9
    1328:	2b 89 00 d8 	lw r9,(sp+216)
    132c:	2b 87 00 cc 	lw r7,(sp+204)
    1330:	2b 88 00 d0 	lw r8,(sp+208)
    1334:	5b 89 00 08 	sw (sp+8),r9
    1338:	2b 89 00 dc 	lw r9,(sp+220)
    133c:	2b 81 00 b4 	lw r1,(sp+180)
    1340:	5b 89 00 0c 	sw (sp+12),r9
    1344:	2b 89 00 e0 	lw r9,(sp+224)
    1348:	5b 89 00 10 	sw (sp+16),r9
    134c:	2b 89 00 e4 	lw r9,(sp+228)
    1350:	5b 89 00 14 	sw (sp+20),r9
    1354:	2b 89 00 e8 	lw r9,(sp+232)
    1358:	5b 89 00 18 	sw (sp+24),r9
    135c:	2b 89 00 ec 	lw r9,(sp+236)
    1360:	5b 89 00 1c 	sw (sp+28),r9
    1364:	2b 89 00 f0 	lw r9,(sp+240)
    1368:	5b 89 00 20 	sw (sp+32),r9
    136c:	fb ff fc 9f 	calli 5e8 <_Z4Face3armS_S_S_i>
				uart_putstr("Ready");
    1370:	b9 e0 08 00 	mv r1,r15
    1374:	f8 00 00 f2 	calli 173c <uart_putstr>
    1378:	29 81 00 00 	lw r1,(r12+0)
			if (command_array[0] == 0x50){
    137c:	34 02 00 50 	mvi r2,80
    1380:	5c 22 ff 69 	bne r1,r2,1124 <_RAM_END+0x124>
				uart_putstr("Reset camera...");
    1384:	ba e0 08 00 	mv r1,r23
    1388:	f8 00 00 ed 	calli 173c <uart_putstr>
				camera.reset();
    138c:	37 81 00 ac 	addi r1,sp,172
    1390:	f8 00 02 f3 	calli 1f5c <_ZN3cam5resetEv>
    1394:	29 81 00 00 	lw r1,(r12+0)
			if (command_array[0] == 0x5a){
    1398:	34 02 00 5a 	mvi r2,90
    139c:	5c 22 ff 64 	bne r1,r2,112c <_RAM_END+0x12c>
				uart_putstr("Take picture...");
    13a0:	ba c0 08 00 	mv r1,r22
    13a4:	f8 00 00 e6 	calli 173c <uart_putstr>
				camera.takepicture();
    13a8:	37 81 00 ac 	addi r1,sp,172
    13ac:	f8 00 03 0b 	calli 1fd8 <_ZN3cam11takepictureEv>
    13b0:	29 81 00 00 	lw r1,(r12+0)
			if (command_array[0] == 0x5b){
    13b4:	34 02 00 5b 	mvi r2,91
    13b8:	5c 22 ff 5f 	bne r1,r2,1134 <_RAM_END+0x134>
				uart_putstr("Get size...");
    13bc:	ba a0 08 00 	mv r1,r21
    13c0:	f8 00 00 df 	calli 173c <uart_putstr>
				camera.getsize();
    13c4:	37 81 00 ac 	addi r1,sp,172
    13c8:	f8 00 03 2c 	calli 2078 <_ZN3cam7getsizeEv>
    13cc:	29 81 00 00 	lw r1,(r12+0)
			if (command_array[0] == 0x5c){
    13d0:	34 02 00 5c 	mvi r2,92
    13d4:	5c 22 ff 5a 	bne r1,r2,113c <_RAM_END+0x13c>
				uart_putstr("Sending...");
    13d8:	78 02 00 00 	mvhi r2,0x0
    13dc:	38 42 24 00 	ori r2,r2,0x2400
    13e0:	28 41 00 00 	lw r1,(r2+0)
    13e4:	f8 00 00 d6 	calli 173c <uart_putstr>
				camera.sendpicture();
    13e8:	37 81 00 ac 	addi r1,sp,172
    13ec:	f8 00 03 56 	calli 2144 <_ZN3cam11sendpictureEv>
    13f0:	29 81 00 00 	lw r1,(r12+0)
    13f4:	e3 ff ff 52 	bi 113c <_RAM_END+0x13c>
					instruccion(arm4,inst);
    13f8:	42 89 00 03 	lbu r9,(r20+3)
    13fc:	2b 81 01 14 	lw r1,(sp+276)
    1400:	2b 82 01 18 	lw r2,(sp+280)
    1404:	2b 83 01 1c 	lw r3,(sp+284)
    1408:	2b 84 01 20 	lw r4,(sp+288)
    140c:	2b 85 01 24 	lw r5,(sp+292)
    1410:	2b 86 01 28 	lw r6,(sp+296)
    1414:	2b 87 01 2c 	lw r7,(sp+300)
    1418:	2b 88 01 30 	lw r8,(sp+304)
    141c:	5b 89 00 04 	sw (sp+4),r9
    1420:	fb ff fb 7a 	calli 208 <_Z11instruccion3armc>
    1424:	e3 ff ff 79 	bi 1208 <_RAM_END+0x208>
					instruccion(arm3,inst);
    1428:	42 89 00 03 	lbu r9,(r20+3)
    142c:	2b 81 00 f4 	lw r1,(sp+244)
    1430:	2b 82 00 f8 	lw r2,(sp+248)
    1434:	2b 83 00 fc 	lw r3,(sp+252)
    1438:	2b 84 01 00 	lw r4,(sp+256)
    143c:	2b 85 01 04 	lw r5,(sp+260)
    1440:	2b 86 01 08 	lw r6,(sp+264)
    1444:	2b 87 01 0c 	lw r7,(sp+268)
    1448:	2b 88 01 10 	lw r8,(sp+272)
    144c:	5b 89 00 04 	sw (sp+4),r9
    1450:	fb ff fb 6e 	calli 208 <_Z11instruccion3armc>
    1454:	29 81 00 04 	lw r1,(r12+4)
    1458:	e3 ff ff 6a 	bi 1200 <_RAM_END+0x200>
					instruccion(arm2,inst);
    145c:	42 89 00 03 	lbu r9,(r20+3)
    1460:	2b 81 00 d4 	lw r1,(sp+212)
    1464:	2b 82 00 d8 	lw r2,(sp+216)
    1468:	2b 83 00 dc 	lw r3,(sp+220)
    146c:	2b 84 00 e0 	lw r4,(sp+224)
    1470:	2b 85 00 e4 	lw r5,(sp+228)
    1474:	2b 86 00 e8 	lw r6,(sp+232)
    1478:	2b 87 00 ec 	lw r7,(sp+236)
    147c:	2b 88 00 f0 	lw r8,(sp+240)
    1480:	5b 89 00 04 	sw (sp+4),r9
    1484:	fb ff fb 61 	calli 208 <_Z11instruccion3armc>
    1488:	29 81 00 04 	lw r1,(r12+4)
    148c:	e3 ff ff 5b 	bi 11f8 <_RAM_END+0x1f8>
					instruccion(arm1,inst);
    1490:	42 89 00 03 	lbu r9,(r20+3)
    1494:	2b 81 00 b4 	lw r1,(sp+180)
    1498:	2b 82 00 b8 	lw r2,(sp+184)
    149c:	2b 83 00 bc 	lw r3,(sp+188)
    14a0:	2b 84 00 c0 	lw r4,(sp+192)
    14a4:	2b 85 00 c4 	lw r5,(sp+196)
    14a8:	2b 86 00 c8 	lw r6,(sp+200)
    14ac:	2b 87 00 cc 	lw r7,(sp+204)
    14b0:	2b 88 00 d0 	lw r8,(sp+208)
    14b4:	5b 89 00 04 	sw (sp+4),r9
    14b8:	fb ff fb 54 	calli 208 <_Z11instruccion3armc>
    14bc:	29 81 00 04 	lw r1,(r12+4)
    14c0:	e3 ff ff 4c 	bi 11f0 <_RAM_END+0x1f0>
					arm4.calib(dir,val);
    14c4:	2a 43 00 00 	lw r3,(r18+0)
    14c8:	42 62 00 03 	lbu r2,(r19+3)
    14cc:	37 81 01 14 	addi r1,sp,276
    14d0:	f8 00 02 66 	calli 1e68 <_ZN3arm5calibEci>
    14d4:	e3 ff ff 63 	bi 1260 <_RAM_END+0x260>
					arm3.calib(dir,val);
    14d8:	2a 43 00 00 	lw r3,(r18+0)
    14dc:	42 62 00 03 	lbu r2,(r19+3)
    14e0:	37 81 00 f4 	addi r1,sp,244
    14e4:	f8 00 02 61 	calli 1e68 <_ZN3arm5calibEci>
    14e8:	29 81 00 04 	lw r1,(r12+4)
    14ec:	e3 ff ff 5b 	bi 1258 <_RAM_END+0x258>
					arm2.calib(dir,val);
    14f0:	2a 43 00 00 	lw r3,(r18+0)
    14f4:	42 62 00 03 	lbu r2,(r19+3)
    14f8:	37 81 00 d4 	addi r1,sp,212
    14fc:	f8 00 02 5b 	calli 1e68 <_ZN3arm5calibEci>
    1500:	29 81 00 04 	lw r1,(r12+4)
    1504:	e3 ff ff 53 	bi 1250 <_RAM_END+0x250>
					arm1.calib(dir,val);
    1508:	2a 43 00 00 	lw r3,(r18+0)
    150c:	42 62 00 03 	lbu r2,(r19+3)
    1510:	37 81 00 b4 	addi r1,sp,180
    1514:	f8 00 02 55 	calli 1e68 <_ZN3arm5calibEci>
    1518:	29 81 00 04 	lw r1,(r12+4)
    151c:	e3 ff ff 4b 	bi 1248 <_RAM_END+0x248>

00001520 <tic_isr>:

uint32_t tic_msec;

void tic_isr()
{
	tic_msec++;
    1520:	78 01 00 00 	mvhi r1,0x0
    1524:	38 21 24 ac 	ori r1,r1,0x24ac
    1528:	28 22 00 00 	lw r2,(r1+0)
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
    152c:	78 04 00 00 	mvhi r4,0x0
    1530:	38 84 24 b0 	ori r4,r4,0x24b0
    1534:	28 83 00 00 	lw r3,(r4+0)
	tic_msec++;
    1538:	28 41 00 00 	lw r1,(r2+0)
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
    153c:	28 63 00 00 	lw r3,(r3+0)
	tic_msec++;
    1540:	34 21 00 01 	addi r1,r1,1
    1544:	58 41 00 00 	sw (r2+0),r1
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
    1548:	34 01 00 0e 	mvi r1,14
    154c:	58 61 00 00 	sw (r3+0),r1
}
    1550:	c3 a0 00 00 	ret

00001554 <isr_null>:
    1554:	c3 a0 00 00 	ret

00001558 <irq_handler>:
{
    1558:	37 9c ff f0 	addi sp,sp,-16
    155c:	5b 8b 00 10 	sw (sp+16),r11
    1560:	5b 8c 00 0c 	sw (sp+12),r12
    1564:	5b 8d 00 08 	sw (sp+8),r13
    1568:	5b 9d 00 04 	sw (sp+4),ra
    156c:	78 02 00 00 	mvhi r2,0x0
    1570:	38 42 24 b4 	ori r2,r2,0x24b4
    1574:	28 4b 00 00 	lw r11,(r2+0)
    1578:	b8 20 60 00 	mv r12,r1
    157c:	35 6d 00 80 	addi r13,r11,128
		if (pending & 0x01) (*isr_table[i])();
    1580:	21 81 00 01 	andi r1,r12,0x1
    1584:	44 20 00 03 	be r1,r0,1590 <irq_handler+0x38>
    1588:	29 61 00 00 	lw r1,(r11+0)
    158c:	d8 20 00 00 	call r1
    1590:	35 6b 00 04 	addi r11,r11,4
		pending >>= 1;
    1594:	01 8c 00 01 	srui r12,r12,1
	for(i=0; i<32; i++) {
    1598:	5d ab ff fa 	bne r13,r11,1580 <irq_handler+0x28>
}
    159c:	2b 9d 00 04 	lw ra,(sp+4)
    15a0:	2b 8b 00 10 	lw r11,(sp+16)
    15a4:	2b 8c 00 0c 	lw r12,(sp+12)
    15a8:	2b 8d 00 08 	lw r13,(sp+8)
    15ac:	37 9c 00 10 	addi sp,sp,16
    15b0:	c3 a0 00 00 	ret

000015b4 <isr_init>:
{
    15b4:	78 02 00 00 	mvhi r2,0x0
    15b8:	38 42 24 b8 	ori r2,r2,0x24b8
    15bc:	28 41 00 00 	lw r1,(r2+0)
    15c0:	78 02 00 00 	mvhi r2,0x0
    15c4:	38 42 24 bc 	ori r2,r2,0x24bc
    15c8:	28 43 00 00 	lw r3,(r2+0)
    15cc:	34 22 00 80 	addi r2,r1,128
		isr_table[i] = &isr_null;
    15d0:	58 23 00 00 	sw (r1+0),r3
    15d4:	34 21 00 04 	addi r1,r1,4
	for(i=0; i<32; i++)
    15d8:	5c 22 ff fe 	bne r1,r2,15d0 <isr_init+0x1c>
}
    15dc:	c3 a0 00 00 	ret

000015e0 <isr_register>:
	isr_table[irq] = isr;
    15e0:	78 04 00 00 	mvhi r4,0x0
    15e4:	38 84 24 c0 	ori r4,r4,0x24c0
    15e8:	3c 23 00 02 	sli r3,r1,2
    15ec:	28 81 00 00 	lw r1,(r4+0)
    15f0:	b4 23 08 00 	add r1,r1,r3
    15f4:	58 22 00 00 	sw (r1+0),r2
}
    15f8:	c3 a0 00 00 	ret

000015fc <isr_unregister>:
	isr_table[irq] = &isr_null;
    15fc:	78 03 00 00 	mvhi r3,0x0
    1600:	38 63 24 c4 	ori r3,r3,0x24c4
    1604:	3c 22 00 02 	sli r2,r1,2
    1608:	28 61 00 00 	lw r1,(r3+0)
    160c:	78 03 00 00 	mvhi r3,0x0
    1610:	38 63 24 c8 	ori r3,r3,0x24c8
    1614:	b4 22 08 00 	add r1,r1,r2
    1618:	28 62 00 00 	lw r2,(r3+0)
    161c:	58 22 00 00 	sw (r1+0),r2
}
    1620:	c3 a0 00 00 	ret

00001624 <msleep>:
	timer0->compare1 = (FCPU/1000)*msec;
    1624:	78 03 00 00 	mvhi r3,0x0
    1628:	38 02 86 a0 	mvu r2,0x86a0
    162c:	78 42 00 01 	orhi r2,r2,0x1
    1630:	38 63 24 cc 	ori r3,r3,0x24cc
    1634:	88 22 08 00 	mul r1,r1,r2
    1638:	28 62 00 00 	lw r2,(r3+0)
    163c:	28 42 00 00 	lw r2,(r2+0)
    1640:	58 41 00 10 	sw (r2+16),r1
	timer0->counter1 = 0;
    1644:	58 40 00 14 	sw (r2+20),r0
	timer0->tcr1 = TIMER_EN;
    1648:	34 01 00 08 	mvi r1,8
    164c:	58 41 00 0c 	sw (r2+12),r1
 		tcr = timer0->tcr1;
    1650:	28 41 00 0c 	lw r1,(r2+12)
 	} while ( ! (tcr & TIMER_TRIG) );
    1654:	20 21 00 01 	andi r1,r1,0x1
    1658:	44 20 ff fe 	be r1,r0,1650 <msleep+0x2c>
}
    165c:	c3 a0 00 00 	ret

00001660 <nsleep>:
	timer0->compare1 = (FCPU/1000000)*nsec;
    1660:	78 03 00 00 	mvhi r3,0x0
    1664:	38 63 24 d0 	ori r3,r3,0x24d0
    1668:	28 62 00 00 	lw r2,(r3+0)
    166c:	08 21 00 64 	muli r1,r1,100
    1670:	28 42 00 00 	lw r2,(r2+0)
    1674:	58 41 00 10 	sw (r2+16),r1
	timer0->counter1 = 0;
    1678:	58 40 00 14 	sw (r2+20),r0
	timer0->tcr1 = TIMER_EN;
    167c:	34 01 00 08 	mvi r1,8
    1680:	58 41 00 0c 	sw (r2+12),r1
 		tcr = timer0->tcr1;
    1684:	28 41 00 0c 	lw r1,(r2+12)
 	} while ( ! (tcr & TIMER_TRIG) );
    1688:	20 21 00 01 	andi r1,r1,0x1
    168c:	44 20 ff fe 	be r1,r0,1684 <nsleep+0x24>
}
    1690:	c3 a0 00 00 	ret

00001694 <tic_init>:
void tic_init()
{
	tic_msec = 0;

	// Setup timer0.0
	timer0->compare0 = (FCPU/10000);
    1694:	78 02 00 00 	mvhi r2,0x0
    1698:	38 42 24 d4 	ori r2,r2,0x24d4
    169c:	28 41 00 00 	lw r1,(r2+0)
	tic_msec = 0;
    16a0:	78 03 00 00 	mvhi r3,0x0
	timer0->compare0 = (FCPU/10000);
    16a4:	34 02 27 10 	mvi r2,10000
    16a8:	28 21 00 00 	lw r1,(r1+0)
	tic_msec = 0;
    16ac:	38 63 24 d8 	ori r3,r3,0x24d8
	timer0->compare0 = (FCPU/10000);
    16b0:	58 22 00 04 	sw (r1+4),r2
	tic_msec = 0;
    16b4:	28 62 00 00 	lw r2,(r3+0)
	timer0->counter0 = 0;
    16b8:	58 20 00 08 	sw (r1+8),r0
	isr_table[irq] = isr;
    16bc:	78 03 00 00 	mvhi r3,0x0
	tic_msec = 0;
    16c0:	58 40 00 00 	sw (r2+0),r0
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
    16c4:	34 02 00 0e 	mvi r2,14
    16c8:	58 22 00 00 	sw (r1+0),r2
	isr_table[irq] = isr;
    16cc:	78 02 00 00 	mvhi r2,0x0
    16d0:	38 42 24 dc 	ori r2,r2,0x24dc
    16d4:	38 63 24 e0 	ori r3,r3,0x24e0
    16d8:	28 41 00 00 	lw r1,(r2+0)
    16dc:	28 62 00 00 	lw r2,(r3+0)
    16e0:	58 22 00 04 	sw (r1+4),r2

	isr_register(1, &tic_isr);
}
    16e4:	c3 a0 00 00 	ret

000016e8 <uart_init>:
	//uart0->lcr = 0x03;  // Line Control Register:    8N1
	//uart0->mcr = 0x00;  // Modem Control Register

	// Setup Divisor register (Fclk / Baud)
	//uart0->div = (FCPU/(57600*16));
}
    16e8:	c3 a0 00 00 	ret

000016ec <uart_getchar>:

char uart_getchar()
{   
	while (! (uart0->ucr & UART_DR)) ;
    16ec:	78 02 00 00 	mvhi r2,0x0
    16f0:	38 42 24 e4 	ori r2,r2,0x24e4
    16f4:	28 41 00 00 	lw r1,(r2+0)
    16f8:	28 22 00 00 	lw r2,(r1+0)
    16fc:	28 41 00 00 	lw r1,(r2+0)
    1700:	20 21 00 01 	andi r1,r1,0x1
    1704:	44 20 ff fe 	be r1,r0,16fc <uart_getchar+0x10>
	return uart0->rxtx;
    1708:	28 41 00 04 	lw r1,(r2+4)
}
    170c:	20 21 00 ff 	andi r1,r1,0xff
    1710:	c3 a0 00 00 	ret

00001714 <uart_putchar>:

void uart_putchar(char c)
{
	while (uart0->ucr & UART_BUSY) ;
    1714:	78 03 00 00 	mvhi r3,0x0
    1718:	38 63 24 e8 	ori r3,r3,0x24e8
    171c:	28 62 00 00 	lw r2,(r3+0)
{
    1720:	20 21 00 ff 	andi r1,r1,0xff
	while (uart0->ucr & UART_BUSY) ;
    1724:	28 43 00 00 	lw r3,(r2+0)
    1728:	28 62 00 00 	lw r2,(r3+0)
    172c:	20 42 00 10 	andi r2,r2,0x10
    1730:	5c 40 ff fe 	bne r2,r0,1728 <uart_putchar+0x14>
	uart0->rxtx = c;
    1734:	58 61 00 04 	sw (r3+4),r1
}
    1738:	c3 a0 00 00 	ret

0000173c <uart_putstr>:

void uart_putstr(char *str)
{
	char *c = str;
	while(*c) {
    173c:	40 24 00 00 	lbu r4,(r1+0)
    1740:	44 80 00 0c 	be r4,r0,1770 <uart_putstr+0x34>
	while (uart0->ucr & UART_BUSY) ;
    1744:	78 03 00 00 	mvhi r3,0x0
    1748:	38 63 24 ec 	ori r3,r3,0x24ec
    174c:	28 62 00 00 	lw r2,(r3+0)
    1750:	28 43 00 00 	lw r3,(r2+0)
    1754:	28 62 00 00 	lw r2,(r3+0)
    1758:	20 42 00 10 	andi r2,r2,0x10
    175c:	5c 40 ff fe 	bne r2,r0,1754 <uart_putstr+0x18>
	uart0->rxtx = c;
    1760:	58 64 00 04 	sw (r3+4),r4
		uart_putchar(*c);
		c++;
    1764:	34 21 00 01 	addi r1,r1,1
	while(*c) {
    1768:	40 24 00 00 	lbu r4,(r1+0)
    176c:	5c 80 ff fa 	bne r4,r0,1754 <uart_putstr+0x18>
	}
}
    1770:	c3 a0 00 00 	ret

00001774 <uart1_init>:
    1774:	c3 a0 00 00 	ret

00001778 <uart1_getchar>:
	//uart0->div = (FCPU/(57600*16));
}

char uart1_getchar()
{   
	while (! (uart1->ucr & UART_DR)) ;
    1778:	78 02 00 00 	mvhi r2,0x0
    177c:	38 42 24 f0 	ori r2,r2,0x24f0
    1780:	28 41 00 00 	lw r1,(r2+0)
    1784:	28 22 00 00 	lw r2,(r1+0)
    1788:	28 41 00 00 	lw r1,(r2+0)
    178c:	20 21 00 01 	andi r1,r1,0x1
    1790:	44 20 ff fe 	be r1,r0,1788 <uart1_getchar+0x10>
	return uart1->rxtx;
    1794:	28 41 00 04 	lw r1,(r2+4)
}
    1798:	20 21 00 ff 	andi r1,r1,0xff
    179c:	c3 a0 00 00 	ret

000017a0 <uart1_putchar>:

void uart1_putchar(char c)
{
	while (uart1->ucr & UART_BUSY) ;
    17a0:	78 03 00 00 	mvhi r3,0x0
    17a4:	38 63 24 f4 	ori r3,r3,0x24f4
    17a8:	28 62 00 00 	lw r2,(r3+0)
{
    17ac:	20 21 00 ff 	andi r1,r1,0xff
	while (uart1->ucr & UART_BUSY) ;
    17b0:	28 43 00 00 	lw r3,(r2+0)
    17b4:	28 62 00 00 	lw r2,(r3+0)
    17b8:	20 42 00 10 	andi r2,r2,0x10
    17bc:	5c 40 ff fe 	bne r2,r0,17b4 <uart1_putchar+0x14>
	uart1->rxtx = c;
    17c0:	58 61 00 04 	sw (r3+4),r1
}
    17c4:	c3 a0 00 00 	ret

000017c8 <uart1_putstr>:

void uart1_putstr(char *str)
{
	char *c = str;
	while(*c) {
    17c8:	40 24 00 00 	lbu r4,(r1+0)
    17cc:	44 80 00 0c 	be r4,r0,17fc <uart1_putstr+0x34>
	while (uart1->ucr & UART_BUSY) ;
    17d0:	78 03 00 00 	mvhi r3,0x0
    17d4:	38 63 24 f8 	ori r3,r3,0x24f8
    17d8:	28 62 00 00 	lw r2,(r3+0)
    17dc:	28 43 00 00 	lw r3,(r2+0)
    17e0:	28 62 00 00 	lw r2,(r3+0)
    17e4:	20 42 00 10 	andi r2,r2,0x10
    17e8:	5c 40 ff fe 	bne r2,r0,17e0 <uart1_putstr+0x18>
	uart1->rxtx = c;
    17ec:	58 64 00 04 	sw (r3+4),r4
		uart1_putchar(*c);
		c++;
    17f0:	34 21 00 01 	addi r1,r1,1
	while(*c) {
    17f4:	40 24 00 00 	lbu r4,(r1+0)
    17f8:	5c 80 ff fa 	bne r4,r0,17e0 <uart1_putstr+0x18>
	}
}
    17fc:	c3 a0 00 00 	ret

00001800 <fifo_read>:
 * FIFO Functions
 */

uint32_t fifo_read()
{
	return fifo0->datout;
    1800:	78 02 00 00 	mvhi r2,0x0
    1804:	38 42 24 fc 	ori r2,r2,0x24fc
    1808:	28 41 00 00 	lw r1,(r2+0)
    180c:	28 21 00 00 	lw r1,(r1+0)
    1810:	28 21 00 04 	lw r1,(r1+4)
}
    1814:	c3 a0 00 00 	ret

00001818 <fifo_write>:

void fifo_write(uint32_t c)
{
	fifo0->datin = c;
    1818:	78 03 00 00 	mvhi r3,0x0
    181c:	38 63 25 00 	ori r3,r3,0x2500
    1820:	28 62 00 00 	lw r2,(r3+0)
    1824:	28 42 00 00 	lw r2,(r2+0)
    1828:	58 41 00 08 	sw (r2+8),r1
}
    182c:	c3 a0 00 00 	ret

00001830 <fifo_state>:

uint32_t fifo_state()
{
	return fifo0->dat;
    1830:	78 02 00 00 	mvhi r2,0x0
    1834:	38 42 25 04 	ori r2,r2,0x2504
    1838:	28 41 00 00 	lw r1,(r2+0)
    183c:	28 21 00 00 	lw r1,(r1+0)
    1840:	28 21 00 00 	lw r1,(r1+0)
}
    1844:	c3 a0 00 00 	ret

00001848 <fifo_reset>:

void fifo_reset()
{
	fifo0->reset = 1;
    1848:	78 02 00 00 	mvhi r2,0x0
    184c:	38 42 25 08 	ori r2,r2,0x2508
    1850:	28 41 00 00 	lw r1,(r2+0)
    1854:	34 02 00 01 	mvi r2,1
    1858:	28 21 00 00 	lw r1,(r1+0)
    185c:	58 22 00 0c 	sw (r1+12),r2
}
    1860:	c3 a0 00 00 	ret

00001864 <_ZN3pwm5pauseEv>:
#include "pwm.h"

void pwm::pause(){
    1864:	37 9c ff fc 	addi sp,sp,-4
    1868:	5b 9d 00 04 	sw (sp+4),ra

	msleep(1000);
    186c:	34 01 03 e8 	mvi r1,1000
    1870:	fb ff ff 6d 	calli 1624 <msleep>

};
    1874:	2b 9d 00 04 	lw ra,(sp+4)
    1878:	37 9c 00 04 	addi sp,sp,4
    187c:	c3 a0 00 00 	ret

00001880 <_ZN3pwm6pwm_enEij>:
void pwm::pwm_en(int sel, uint32_t val){

	if(sel == 0) pwm0->en0 = val;
    1880:	5c 40 00 08 	bne r2,r0,18a0 <_ZN3pwm6pwm_enEij+0x20>
    1884:	28 24 00 00 	lw r4,(r1+0)
    1888:	58 83 00 00 	sw (r4+0),r3
	if(sel == 1) pwm0->en1 = val;
	if(sel == 2) pwm0->en2 = val;
	if(sel == 3) pwm0->en3 = val;
	if(sel == 4) pwm0->en4 = val;
	if(sel == 5) pwm0->en5 = val;
    188c:	34 04 00 05 	mvi r4,5
    1890:	5c 44 00 0d 	bne r2,r4,18c4 <_ZN3pwm6pwm_enEij+0x44>
    1894:	28 21 00 00 	lw r1,(r1+0)
    1898:	58 23 00 3c 	sw (r1+60),r3
	if(sel == 6) pwm0->en6 = val;
	if(sel == 7) pwm0->en7 = val;

};
    189c:	c3 a0 00 00 	ret
	if(sel == 1) pwm0->en1 = val;
    18a0:	34 04 00 01 	mvi r4,1
    18a4:	5c 44 00 04 	bne r2,r4,18b4 <_ZN3pwm6pwm_enEij+0x34>
    18a8:	28 24 00 00 	lw r4,(r1+0)
    18ac:	58 83 00 0c 	sw (r4+12),r3
    18b0:	e3 ff ff f7 	bi 188c <_ZN3pwm6pwm_enEij+0xc>
	if(sel == 2) pwm0->en2 = val;
    18b4:	34 04 00 02 	mvi r4,2
    18b8:	5c 44 00 08 	bne r2,r4,18d8 <_ZN3pwm6pwm_enEij+0x58>
    18bc:	28 24 00 00 	lw r4,(r1+0)
    18c0:	58 83 00 18 	sw (r4+24),r3
	if(sel == 6) pwm0->en6 = val;
    18c4:	34 04 00 06 	mvi r4,6
    18c8:	5c 44 00 08 	bne r2,r4,18e8 <_ZN3pwm6pwm_enEij+0x68>
    18cc:	28 21 00 00 	lw r1,(r1+0)
    18d0:	58 23 00 48 	sw (r1+72),r3
};
    18d4:	c3 a0 00 00 	ret
	if(sel == 3) pwm0->en3 = val;
    18d8:	34 04 00 03 	mvi r4,3
    18dc:	5c 44 00 08 	bne r2,r4,18fc <_ZN3pwm6pwm_enEij+0x7c>
    18e0:	28 24 00 00 	lw r4,(r1+0)
    18e4:	58 83 00 24 	sw (r4+36),r3
	if(sel == 7) pwm0->en7 = val;
    18e8:	34 04 00 07 	mvi r4,7
    18ec:	5c 44 ff ec 	bne r2,r4,189c <_ZN3pwm6pwm_enEij+0x1c>
    18f0:	28 21 00 00 	lw r1,(r1+0)
    18f4:	58 23 00 54 	sw (r1+84),r3
};
    18f8:	c3 a0 00 00 	ret
	if(sel == 4) pwm0->en4 = val;
    18fc:	34 04 00 04 	mvi r4,4
    1900:	5c 44 ff e3 	bne r2,r4,188c <_ZN3pwm6pwm_enEij+0xc>
    1904:	28 21 00 00 	lw r1,(r1+0)
    1908:	58 23 00 30 	sw (r1+48),r3
};
    190c:	c3 a0 00 00 	ret

00001910 <_ZN3pwm8pwm_dutyEij>:

void pwm::pwm_duty(int sel, uint32_t val){

	if(sel == 0) pwm0->duty0 = val;
    1910:	5c 40 00 08 	bne r2,r0,1930 <_ZN3pwm8pwm_dutyEij+0x20>
    1914:	28 24 00 00 	lw r4,(r1+0)
    1918:	58 83 00 08 	sw (r4+8),r3
	if(sel == 1) pwm0->duty1 = val;
	if(sel == 2) pwm0->duty2 = val;
	if(sel == 3) pwm0->duty3 = val;
	if(sel == 4) pwm0->duty4 = val;
	if(sel == 5) pwm0->duty5 = val;
    191c:	34 04 00 05 	mvi r4,5
    1920:	5c 44 00 0d 	bne r2,r4,1954 <_ZN3pwm8pwm_dutyEij+0x44>
    1924:	28 21 00 00 	lw r1,(r1+0)
    1928:	58 23 00 44 	sw (r1+68),r3
	if(sel == 6) pwm0->duty6 = val;
	if(sel == 7) pwm0->duty7 = val;

};
    192c:	c3 a0 00 00 	ret
	if(sel == 1) pwm0->duty1 = val;
    1930:	34 04 00 01 	mvi r4,1
    1934:	5c 44 00 04 	bne r2,r4,1944 <_ZN3pwm8pwm_dutyEij+0x34>
    1938:	28 24 00 00 	lw r4,(r1+0)
    193c:	58 83 00 14 	sw (r4+20),r3
    1940:	e3 ff ff f7 	bi 191c <_ZN3pwm8pwm_dutyEij+0xc>
	if(sel == 2) pwm0->duty2 = val;
    1944:	34 04 00 02 	mvi r4,2
    1948:	5c 44 00 08 	bne r2,r4,1968 <_ZN3pwm8pwm_dutyEij+0x58>
    194c:	28 24 00 00 	lw r4,(r1+0)
    1950:	58 83 00 20 	sw (r4+32),r3
	if(sel == 6) pwm0->duty6 = val;
    1954:	34 04 00 06 	mvi r4,6
    1958:	5c 44 00 08 	bne r2,r4,1978 <_ZN3pwm8pwm_dutyEij+0x68>
    195c:	28 21 00 00 	lw r1,(r1+0)
    1960:	58 23 00 50 	sw (r1+80),r3
};
    1964:	c3 a0 00 00 	ret
	if(sel == 3) pwm0->duty3 = val;
    1968:	34 04 00 03 	mvi r4,3
    196c:	5c 44 00 08 	bne r2,r4,198c <_ZN3pwm8pwm_dutyEij+0x7c>
    1970:	28 24 00 00 	lw r4,(r1+0)
    1974:	58 83 00 2c 	sw (r4+44),r3
	if(sel == 7) pwm0->duty7 = val;
    1978:	34 04 00 07 	mvi r4,7
    197c:	5c 44 ff ec 	bne r2,r4,192c <_ZN3pwm8pwm_dutyEij+0x1c>
    1980:	28 21 00 00 	lw r1,(r1+0)
    1984:	58 23 00 5c 	sw (r1+92),r3
};
    1988:	c3 a0 00 00 	ret
	if(sel == 4) pwm0->duty4 = val;
    198c:	34 04 00 04 	mvi r4,4
    1990:	5c 44 ff e3 	bne r2,r4,191c <_ZN3pwm8pwm_dutyEij+0xc>
    1994:	28 21 00 00 	lw r1,(r1+0)
    1998:	58 23 00 38 	sw (r1+56),r3
};
    199c:	c3 a0 00 00 	ret

000019a0 <_ZN3pwm10pwm_periodEij>:

void pwm::pwm_period(int sel, uint32_t val){

	if(sel == 0) pwm0->period0 = val;
    19a0:	5c 40 00 08 	bne r2,r0,19c0 <_ZN3pwm10pwm_periodEij+0x20>
    19a4:	28 24 00 00 	lw r4,(r1+0)
    19a8:	58 83 00 04 	sw (r4+4),r3
	if(sel == 1) pwm0->period1 = val;
	if(sel == 2) pwm0->period2 = val;
	if(sel == 3) pwm0->period3 = val;
	if(sel == 4) pwm0->period4 = val;
	if(sel == 5) pwm0->period5 = val;
    19ac:	34 04 00 05 	mvi r4,5
    19b0:	5c 44 00 0d 	bne r2,r4,19e4 <_ZN3pwm10pwm_periodEij+0x44>
    19b4:	28 21 00 00 	lw r1,(r1+0)
    19b8:	58 23 00 40 	sw (r1+64),r3
	if(sel == 6) pwm0->period6 = val;
	if(sel == 7) pwm0->period7 = val;

};
    19bc:	c3 a0 00 00 	ret
	if(sel == 1) pwm0->period1 = val;
    19c0:	34 04 00 01 	mvi r4,1
    19c4:	5c 44 00 04 	bne r2,r4,19d4 <_ZN3pwm10pwm_periodEij+0x34>
    19c8:	28 24 00 00 	lw r4,(r1+0)
    19cc:	58 83 00 10 	sw (r4+16),r3
    19d0:	e3 ff ff f7 	bi 19ac <_ZN3pwm10pwm_periodEij+0xc>
	if(sel == 2) pwm0->period2 = val;
    19d4:	34 04 00 02 	mvi r4,2
    19d8:	5c 44 00 08 	bne r2,r4,19f8 <_ZN3pwm10pwm_periodEij+0x58>
    19dc:	28 24 00 00 	lw r4,(r1+0)
    19e0:	58 83 00 1c 	sw (r4+28),r3
	if(sel == 6) pwm0->period6 = val;
    19e4:	34 04 00 06 	mvi r4,6
    19e8:	5c 44 00 08 	bne r2,r4,1a08 <_ZN3pwm10pwm_periodEij+0x68>
    19ec:	28 21 00 00 	lw r1,(r1+0)
    19f0:	58 23 00 4c 	sw (r1+76),r3
};
    19f4:	c3 a0 00 00 	ret
	if(sel == 3) pwm0->period3 = val;
    19f8:	34 04 00 03 	mvi r4,3
    19fc:	5c 44 00 08 	bne r2,r4,1a1c <_ZN3pwm10pwm_periodEij+0x7c>
    1a00:	28 24 00 00 	lw r4,(r1+0)
    1a04:	58 83 00 28 	sw (r4+40),r3
	if(sel == 7) pwm0->period7 = val;
    1a08:	34 04 00 07 	mvi r4,7
    1a0c:	5c 44 ff ec 	bne r2,r4,19bc <_ZN3pwm10pwm_periodEij+0x1c>
    1a10:	28 21 00 00 	lw r1,(r1+0)
    1a14:	58 23 00 58 	sw (r1+88),r3
};
    1a18:	c3 a0 00 00 	ret
	if(sel == 4) pwm0->period4 = val;
    1a1c:	34 04 00 04 	mvi r4,4
    1a20:	5c 44 ff e3 	bne r2,r4,19ac <_ZN3pwm10pwm_periodEij+0xc>
    1a24:	28 21 00 00 	lw r1,(r1+0)
    1a28:	58 23 00 34 	sw (r1+52),r3
};
    1a2c:	c3 a0 00 00 	ret

00001a30 <_ZN3pwm9pwm_getenEj>:

uint32_t pwm::pwm_geten(uint32_t sel){
    1a30:	b8 20 18 00 	mv r3,r1

	if(sel == 0) return pwm0->en0;
    1a34:	44 40 00 11 	be r2,r0,1a78 <_ZN3pwm9pwm_getenEj+0x48>
	if(sel == 1) return pwm0->en1;
    1a38:	34 01 00 01 	mvi r1,1
    1a3c:	44 41 00 12 	be r2,r1,1a84 <_ZN3pwm9pwm_getenEj+0x54>
	if(sel == 2) return pwm0->en2;
    1a40:	34 01 00 02 	mvi r1,2
    1a44:	44 41 00 16 	be r2,r1,1a9c <_ZN3pwm9pwm_getenEj+0x6c>
	if(sel == 3) return pwm0->en3;
    1a48:	34 01 00 03 	mvi r1,3
    1a4c:	44 41 00 11 	be r2,r1,1a90 <_ZN3pwm9pwm_getenEj+0x60>
	if(sel == 4) return pwm0->en4;
    1a50:	34 01 00 04 	mvi r1,4
    1a54:	44 41 00 15 	be r2,r1,1aa8 <_ZN3pwm9pwm_getenEj+0x78>
	if(sel == 5) return pwm0->en5;
    1a58:	34 01 00 05 	mvi r1,5
    1a5c:	44 41 00 19 	be r2,r1,1ac0 <_ZN3pwm9pwm_getenEj+0x90>
	if(sel == 6) return pwm0->en6;
    1a60:	34 01 00 06 	mvi r1,6
    1a64:	44 41 00 1a 	be r2,r1,1acc <_ZN3pwm9pwm_getenEj+0x9c>
	if(sel == 7) return pwm0->en7;
    1a68:	34 04 00 07 	mvi r4,7
	return 0;
    1a6c:	34 01 00 00 	mvi r1,0
	if(sel == 7) return pwm0->en7;
    1a70:	44 44 00 11 	be r2,r4,1ab4 <_ZN3pwm9pwm_getenEj+0x84>

};
    1a74:	c3 a0 00 00 	ret
	if(sel == 0) return pwm0->en0;
    1a78:	28 21 00 00 	lw r1,(r1+0)
    1a7c:	28 21 00 00 	lw r1,(r1+0)
};
    1a80:	c3 a0 00 00 	ret
	if(sel == 1) return pwm0->en1;
    1a84:	28 61 00 00 	lw r1,(r3+0)
    1a88:	28 21 00 0c 	lw r1,(r1+12)
};
    1a8c:	c3 a0 00 00 	ret
	if(sel == 3) return pwm0->en3;
    1a90:	28 61 00 00 	lw r1,(r3+0)
    1a94:	28 21 00 24 	lw r1,(r1+36)
};
    1a98:	c3 a0 00 00 	ret
	if(sel == 2) return pwm0->en2;
    1a9c:	28 61 00 00 	lw r1,(r3+0)
    1aa0:	28 21 00 18 	lw r1,(r1+24)
};
    1aa4:	c3 a0 00 00 	ret
	if(sel == 4) return pwm0->en4;
    1aa8:	28 61 00 00 	lw r1,(r3+0)
    1aac:	28 21 00 30 	lw r1,(r1+48)
};
    1ab0:	c3 a0 00 00 	ret
	if(sel == 7) return pwm0->en7;
    1ab4:	28 61 00 00 	lw r1,(r3+0)
    1ab8:	28 21 00 54 	lw r1,(r1+84)
};
    1abc:	c3 a0 00 00 	ret
	if(sel == 5) return pwm0->en5;
    1ac0:	28 61 00 00 	lw r1,(r3+0)
    1ac4:	28 21 00 3c 	lw r1,(r1+60)
};
    1ac8:	c3 a0 00 00 	ret
	if(sel == 6) return pwm0->en6;
    1acc:	28 61 00 00 	lw r1,(r3+0)
    1ad0:	28 21 00 48 	lw r1,(r1+72)
};
    1ad4:	c3 a0 00 00 	ret

00001ad8 <_ZN3pwm11pwm_getdutyEj>:

uint32_t pwm::pwm_getduty(uint32_t sel){
    1ad8:	b8 20 18 00 	mv r3,r1

	if(sel == 0) return pwm0->duty0;
    1adc:	44 40 00 11 	be r2,r0,1b20 <_ZN3pwm11pwm_getdutyEj+0x48>
	if(sel == 1) return pwm0->duty1;
    1ae0:	34 01 00 01 	mvi r1,1
    1ae4:	44 41 00 12 	be r2,r1,1b2c <_ZN3pwm11pwm_getdutyEj+0x54>
	if(sel == 2) return pwm0->duty2;
    1ae8:	34 01 00 02 	mvi r1,2
    1aec:	44 41 00 16 	be r2,r1,1b44 <_ZN3pwm11pwm_getdutyEj+0x6c>
	if(sel == 3) return pwm0->duty3;
    1af0:	34 01 00 03 	mvi r1,3
    1af4:	44 41 00 11 	be r2,r1,1b38 <_ZN3pwm11pwm_getdutyEj+0x60>
	if(sel == 4) return pwm0->duty4;
    1af8:	34 01 00 04 	mvi r1,4
    1afc:	44 41 00 15 	be r2,r1,1b50 <_ZN3pwm11pwm_getdutyEj+0x78>
	if(sel == 5) return pwm0->duty5;
    1b00:	34 01 00 05 	mvi r1,5
    1b04:	44 41 00 19 	be r2,r1,1b68 <_ZN3pwm11pwm_getdutyEj+0x90>
	if(sel == 6) return pwm0->duty6;
    1b08:	34 01 00 06 	mvi r1,6
    1b0c:	44 41 00 1a 	be r2,r1,1b74 <_ZN3pwm11pwm_getdutyEj+0x9c>
	if(sel == 7) return pwm0->duty7;
    1b10:	34 04 00 07 	mvi r4,7
	return 0;
    1b14:	34 01 00 00 	mvi r1,0
	if(sel == 7) return pwm0->duty7;
    1b18:	44 44 00 11 	be r2,r4,1b5c <_ZN3pwm11pwm_getdutyEj+0x84>
	
};
    1b1c:	c3 a0 00 00 	ret
	if(sel == 0) return pwm0->duty0;
    1b20:	28 21 00 00 	lw r1,(r1+0)
    1b24:	28 21 00 08 	lw r1,(r1+8)
};
    1b28:	c3 a0 00 00 	ret
	if(sel == 1) return pwm0->duty1;
    1b2c:	28 61 00 00 	lw r1,(r3+0)
    1b30:	28 21 00 14 	lw r1,(r1+20)
};
    1b34:	c3 a0 00 00 	ret
	if(sel == 3) return pwm0->duty3;
    1b38:	28 61 00 00 	lw r1,(r3+0)
    1b3c:	28 21 00 2c 	lw r1,(r1+44)
};
    1b40:	c3 a0 00 00 	ret
	if(sel == 2) return pwm0->duty2;
    1b44:	28 61 00 00 	lw r1,(r3+0)
    1b48:	28 21 00 20 	lw r1,(r1+32)
};
    1b4c:	c3 a0 00 00 	ret
	if(sel == 4) return pwm0->duty4;
    1b50:	28 61 00 00 	lw r1,(r3+0)
    1b54:	28 21 00 38 	lw r1,(r1+56)
};
    1b58:	c3 a0 00 00 	ret
	if(sel == 7) return pwm0->duty7;
    1b5c:	28 61 00 00 	lw r1,(r3+0)
    1b60:	28 21 00 5c 	lw r1,(r1+92)
};
    1b64:	c3 a0 00 00 	ret
	if(sel == 5) return pwm0->duty5;
    1b68:	28 61 00 00 	lw r1,(r3+0)
    1b6c:	28 21 00 44 	lw r1,(r1+68)
};
    1b70:	c3 a0 00 00 	ret
	if(sel == 6) return pwm0->duty6;
    1b74:	28 61 00 00 	lw r1,(r3+0)
    1b78:	28 21 00 50 	lw r1,(r1+80)
};
    1b7c:	c3 a0 00 00 	ret

00001b80 <_ZN3pwm13pwm_getperiodEj>:

uint32_t pwm::pwm_getperiod(uint32_t sel){
    1b80:	b8 20 18 00 	mv r3,r1

	if(sel == 0) return pwm0->period0;
    1b84:	44 40 00 11 	be r2,r0,1bc8 <_ZN3pwm13pwm_getperiodEj+0x48>
	if(sel == 1) return pwm0->period1;
    1b88:	34 01 00 01 	mvi r1,1
    1b8c:	44 41 00 12 	be r2,r1,1bd4 <_ZN3pwm13pwm_getperiodEj+0x54>
	if(sel == 2) return pwm0->period2;
    1b90:	34 01 00 02 	mvi r1,2
    1b94:	44 41 00 16 	be r2,r1,1bec <_ZN3pwm13pwm_getperiodEj+0x6c>
	if(sel == 3) return pwm0->period3;
    1b98:	34 01 00 03 	mvi r1,3
    1b9c:	44 41 00 11 	be r2,r1,1be0 <_ZN3pwm13pwm_getperiodEj+0x60>
	if(sel == 4) return pwm0->period4;
    1ba0:	34 01 00 04 	mvi r1,4
    1ba4:	44 41 00 15 	be r2,r1,1bf8 <_ZN3pwm13pwm_getperiodEj+0x78>
	if(sel == 5) return pwm0->period5;
    1ba8:	34 01 00 05 	mvi r1,5
    1bac:	44 41 00 19 	be r2,r1,1c10 <_ZN3pwm13pwm_getperiodEj+0x90>
	if(sel == 6) return pwm0->period6;
    1bb0:	34 01 00 06 	mvi r1,6
    1bb4:	44 41 00 1a 	be r2,r1,1c1c <_ZN3pwm13pwm_getperiodEj+0x9c>
	if(sel == 7) return pwm0->period7;
    1bb8:	34 04 00 07 	mvi r4,7
	return 0;
    1bbc:	34 01 00 00 	mvi r1,0
	if(sel == 7) return pwm0->period7;
    1bc0:	44 44 00 11 	be r2,r4,1c04 <_ZN3pwm13pwm_getperiodEj+0x84>
	
    1bc4:	c3 a0 00 00 	ret
	if(sel == 0) return pwm0->period0;
    1bc8:	28 21 00 00 	lw r1,(r1+0)
    1bcc:	28 21 00 04 	lw r1,(r1+4)
    1bd0:	c3 a0 00 00 	ret
	if(sel == 1) return pwm0->period1;
    1bd4:	28 61 00 00 	lw r1,(r3+0)
    1bd8:	28 21 00 10 	lw r1,(r1+16)
    1bdc:	c3 a0 00 00 	ret
	if(sel == 3) return pwm0->period3;
    1be0:	28 61 00 00 	lw r1,(r3+0)
    1be4:	28 21 00 28 	lw r1,(r1+40)
    1be8:	c3 a0 00 00 	ret
	if(sel == 2) return pwm0->period2;
    1bec:	28 61 00 00 	lw r1,(r3+0)
    1bf0:	28 21 00 1c 	lw r1,(r1+28)
    1bf4:	c3 a0 00 00 	ret
	if(sel == 4) return pwm0->period4;
    1bf8:	28 61 00 00 	lw r1,(r3+0)
    1bfc:	28 21 00 34 	lw r1,(r1+52)
    1c00:	c3 a0 00 00 	ret
	if(sel == 7) return pwm0->period7;
    1c04:	28 61 00 00 	lw r1,(r3+0)
    1c08:	28 21 00 58 	lw r1,(r1+88)
    1c0c:	c3 a0 00 00 	ret
	if(sel == 5) return pwm0->period5;
    1c10:	28 61 00 00 	lw r1,(r3+0)
    1c14:	28 21 00 40 	lw r1,(r1+64)
    1c18:	c3 a0 00 00 	ret
	if(sel == 6) return pwm0->period6;
    1c1c:	28 61 00 00 	lw r1,(r3+0)
    1c20:	28 21 00 4c 	lw r1,(r1+76)
    1c24:	c3 a0 00 00 	ret

00001c28 <_ZN3arm4initEv>:
#include "servos.h"

void arm::init(){
    1c28:	37 9c ff f8 	addi sp,sp,-8
    1c2c:	5b 8b 00 08 	sw (sp+8),r11
    1c30:	5b 9d 00 04 	sw (sp+4),ra
	pwm_duty(serv2,atr);
    1c34:	28 23 00 18 	lw r3,(r1+24)
    1c38:	28 22 00 08 	lw r2,(r1+8)
void arm::init(){
    1c3c:	b8 20 58 00 	mv r11,r1
	pwm_duty(serv2,atr);
    1c40:	fb ff ff 34 	calli 1910 <_ZN3pwm8pwm_dutyEij>
	pause();
    1c44:	b9 60 08 00 	mv r1,r11
    1c48:	fb ff ff 07 	calli 1864 <_ZN3pwm5pauseEv>
	pwm_duty(serv1,mid);
    1c4c:	29 63 00 14 	lw r3,(r11+20)
    1c50:	29 62 00 04 	lw r2,(r11+4)
    1c54:	b9 60 08 00 	mv r1,r11
    1c58:	fb ff ff 2e 	calli 1910 <_ZN3pwm8pwm_dutyEij>
	pause();
    1c5c:	b9 60 08 00 	mv r1,r11
    1c60:	fb ff ff 01 	calli 1864 <_ZN3pwm5pauseEv>
	pwm_duty(serv2,ade);
    1c64:	29 63 00 1c 	lw r3,(r11+28)
    1c68:	29 62 00 08 	lw r2,(r11+8)
    1c6c:	b9 60 08 00 	mv r1,r11
    1c70:	fb ff ff 28 	calli 1910 <_ZN3pwm8pwm_dutyEij>
	pause();
    1c74:	b9 60 08 00 	mv r1,r11
    1c78:	fb ff fe fb 	calli 1864 <_ZN3pwm5pauseEv>
};
    1c7c:	2b 9d 00 04 	lw ra,(sp+4)
    1c80:	2b 8b 00 08 	lw r11,(sp+8)
    1c84:	37 9c 00 08 	addi sp,sp,8
    1c88:	c3 a0 00 00 	ret

00001c8c <_ZN3arm4homeEv>:

void arm::home(){
    1c8c:	37 9c ff f8 	addi sp,sp,-8
    1c90:	5b 8b 00 08 	sw (sp+8),r11
    1c94:	5b 9d 00 04 	sw (sp+4),ra
	pwm_duty(serv2,atr);
    1c98:	28 23 00 18 	lw r3,(r1+24)
    1c9c:	28 22 00 08 	lw r2,(r1+8)
void arm::home(){
    1ca0:	b8 20 58 00 	mv r11,r1
	pwm_duty(serv2,atr);
    1ca4:	fb ff ff 1b 	calli 1910 <_ZN3pwm8pwm_dutyEij>
	pause();
    1ca8:	b9 60 08 00 	mv r1,r11
    1cac:	fb ff fe ee 	calli 1864 <_ZN3pwm5pauseEv>
};
    1cb0:	2b 9d 00 04 	lw ra,(sp+4)
    1cb4:	2b 8b 00 08 	lw r11,(sp+8)
    1cb8:	37 9c 00 08 	addi sp,sp,8
    1cbc:	c3 a0 00 00 	ret

00001cc0 <_ZN3arm7derechaEv>:

void arm::derecha(){
    1cc0:	37 9c ff f8 	addi sp,sp,-8
    1cc4:	5b 8b 00 08 	sw (sp+8),r11
    1cc8:	5b 9d 00 04 	sw (sp+4),ra
	pwm_duty(serv1,der);
    1ccc:	28 23 00 0c 	lw r3,(r1+12)
    1cd0:	28 22 00 04 	lw r2,(r1+4)
void arm::derecha(){
    1cd4:	b8 20 58 00 	mv r11,r1
	pwm_duty(serv1,der);
    1cd8:	fb ff ff 0e 	calli 1910 <_ZN3pwm8pwm_dutyEij>
	pause();
    1cdc:	b9 60 08 00 	mv r1,r11
    1ce0:	fb ff fe e1 	calli 1864 <_ZN3pwm5pauseEv>
	pwm_duty(serv2,atr);
    1ce4:	29 63 00 18 	lw r3,(r11+24)
    1ce8:	29 62 00 08 	lw r2,(r11+8)
    1cec:	b9 60 08 00 	mv r1,r11
    1cf0:	fb ff ff 08 	calli 1910 <_ZN3pwm8pwm_dutyEij>
	pause();
    1cf4:	b9 60 08 00 	mv r1,r11
    1cf8:	fb ff fe db 	calli 1864 <_ZN3pwm5pauseEv>
	pwm_duty(serv1,mid);
    1cfc:	29 63 00 14 	lw r3,(r11+20)
    1d00:	29 62 00 04 	lw r2,(r11+4)
    1d04:	b9 60 08 00 	mv r1,r11
    1d08:	fb ff ff 02 	calli 1910 <_ZN3pwm8pwm_dutyEij>
	pause();
    1d0c:	b9 60 08 00 	mv r1,r11
    1d10:	fb ff fe d5 	calli 1864 <_ZN3pwm5pauseEv>
	pwm_duty(serv2,ade);
    1d14:	29 63 00 1c 	lw r3,(r11+28)
    1d18:	29 62 00 08 	lw r2,(r11+8)
    1d1c:	b9 60 08 00 	mv r1,r11
    1d20:	fb ff fe fc 	calli 1910 <_ZN3pwm8pwm_dutyEij>
	pause();
    1d24:	b9 60 08 00 	mv r1,r11
    1d28:	fb ff fe cf 	calli 1864 <_ZN3pwm5pauseEv>
};
    1d2c:	2b 9d 00 04 	lw ra,(sp+4)
    1d30:	2b 8b 00 08 	lw r11,(sp+8)
    1d34:	37 9c 00 08 	addi sp,sp,8
    1d38:	c3 a0 00 00 	ret

00001d3c <_ZN3arm9izquierdaEv>:

void arm::izquierda(){
    1d3c:	37 9c ff f8 	addi sp,sp,-8
    1d40:	5b 8b 00 08 	sw (sp+8),r11
    1d44:	5b 9d 00 04 	sw (sp+4),ra
	pwm_duty(serv1,iz);
    1d48:	28 23 00 10 	lw r3,(r1+16)
    1d4c:	28 22 00 04 	lw r2,(r1+4)
void arm::izquierda(){
    1d50:	b8 20 58 00 	mv r11,r1
	pwm_duty(serv1,iz);
    1d54:	fb ff fe ef 	calli 1910 <_ZN3pwm8pwm_dutyEij>
	pause();
    1d58:	b9 60 08 00 	mv r1,r11
    1d5c:	fb ff fe c2 	calli 1864 <_ZN3pwm5pauseEv>
	pwm_duty(serv2,atr);
    1d60:	29 63 00 18 	lw r3,(r11+24)
    1d64:	29 62 00 08 	lw r2,(r11+8)
    1d68:	b9 60 08 00 	mv r1,r11
    1d6c:	fb ff fe e9 	calli 1910 <_ZN3pwm8pwm_dutyEij>
	pause();
    1d70:	b9 60 08 00 	mv r1,r11
    1d74:	fb ff fe bc 	calli 1864 <_ZN3pwm5pauseEv>
	pwm_duty(serv1,mid);
    1d78:	29 63 00 14 	lw r3,(r11+20)
    1d7c:	29 62 00 04 	lw r2,(r11+4)
    1d80:	b9 60 08 00 	mv r1,r11
    1d84:	fb ff fe e3 	calli 1910 <_ZN3pwm8pwm_dutyEij>
	pause();
    1d88:	b9 60 08 00 	mv r1,r11
    1d8c:	fb ff fe b6 	calli 1864 <_ZN3pwm5pauseEv>
	pwm_duty(serv2,ade);
    1d90:	29 63 00 1c 	lw r3,(r11+28)
    1d94:	29 62 00 08 	lw r2,(r11+8)
    1d98:	b9 60 08 00 	mv r1,r11
    1d9c:	fb ff fe dd 	calli 1910 <_ZN3pwm8pwm_dutyEij>
	pause();
    1da0:	b9 60 08 00 	mv r1,r11
    1da4:	fb ff fe b0 	calli 1864 <_ZN3pwm5pauseEv>
};
    1da8:	2b 9d 00 04 	lw ra,(sp+4)
    1dac:	2b 8b 00 08 	lw r11,(sp+8)
    1db0:	37 9c 00 08 	addi sp,sp,8
    1db4:	c3 a0 00 00 	ret

00001db8 <_ZN3arm8set_servEii>:

void arm::set_serv(int x,int y){
    1db8:	37 9c ff f8 	addi sp,sp,-8
    1dbc:	5b 8b 00 08 	sw (sp+8),r11
    1dc0:	5b 9d 00 04 	sw (sp+4),ra
	serv1 = x;
	serv2 = y;

	der = DER;
	iz  = IZ;
    1dc4:	34 04 00 05 	mvi r4,5
    1dc8:	58 24 00 10 	sw (r1+16),r4
	mid = MID;
    1dcc:	34 04 00 0d 	mvi r4,13
    1dd0:	58 24 00 14 	sw (r1+20),r4

	atr = ATR;
    1dd4:	34 04 00 12 	mvi r4,18
	serv2 = y;
    1dd8:	58 23 00 08 	sw (r1+8),r3
	atr = ATR;
    1ddc:	58 24 00 18 	sw (r1+24),r4
	der = DER;
    1de0:	34 03 00 19 	mvi r3,25
	ade = ADE;
    1de4:	34 04 00 0c 	mvi r4,12
    1de8:	58 24 00 1c 	sw (r1+28),r4
	serv1 = x;
    1dec:	58 22 00 04 	sw (r1+4),r2
	der = DER;
    1df0:	58 23 00 0c 	sw (r1+12),r3

	pwm_period(serv1,200);
    1df4:	34 03 00 c8 	mvi r3,200
void arm::set_serv(int x,int y){
    1df8:	b8 20 58 00 	mv r11,r1
	pwm_period(serv1,200);
    1dfc:	fb ff fe e9 	calli 19a0 <_ZN3pwm10pwm_periodEij>
	pwm_period(serv2,200);
    1e00:	29 62 00 08 	lw r2,(r11+8)
    1e04:	b9 60 08 00 	mv r1,r11
    1e08:	34 03 00 c8 	mvi r3,200
    1e0c:	fb ff fe e5 	calli 19a0 <_ZN3pwm10pwm_periodEij>
	pwm_duty(serv1,mid);
    1e10:	29 63 00 14 	lw r3,(r11+20)
    1e14:	29 62 00 04 	lw r2,(r11+4)
    1e18:	b9 60 08 00 	mv r1,r11
    1e1c:	fb ff fe bd 	calli 1910 <_ZN3pwm8pwm_dutyEij>
	pwm_duty(serv2,atr);
    1e20:	29 63 00 18 	lw r3,(r11+24)
    1e24:	29 62 00 08 	lw r2,(r11+8)
    1e28:	b9 60 08 00 	mv r1,r11
    1e2c:	fb ff fe b9 	calli 1910 <_ZN3pwm8pwm_dutyEij>
	pwm_en(serv1,1);
    1e30:	29 62 00 04 	lw r2,(r11+4)
    1e34:	b9 60 08 00 	mv r1,r11
    1e38:	34 03 00 01 	mvi r3,1
    1e3c:	fb ff fe 91 	calli 1880 <_ZN3pwm6pwm_enEij>
	pwm_en(serv2,1);
    1e40:	29 62 00 08 	lw r2,(r11+8)
    1e44:	34 03 00 01 	mvi r3,1
    1e48:	b9 60 08 00 	mv r1,r11
    1e4c:	fb ff fe 8d 	calli 1880 <_ZN3pwm6pwm_enEij>
	pause();
    1e50:	b9 60 08 00 	mv r1,r11
    1e54:	fb ff fe 84 	calli 1864 <_ZN3pwm5pauseEv>
};
    1e58:	2b 9d 00 04 	lw ra,(sp+4)
    1e5c:	2b 8b 00 08 	lw r11,(sp+8)
    1e60:	37 9c 00 08 	addi sp,sp,8
    1e64:	c3 a0 00 00 	ret

00001e68 <_ZN3arm5calibEci>:

void arm::calib(char dir,int val){
    1e68:	20 42 00 ff 	andi r2,r2,0xff
	if(dir == 0x20){
    1e6c:	34 04 00 20 	mvi r4,32
    1e70:	44 44 00 09 	be r2,r4,1e94 <_ZN3arm5calibEci+0x2c>
		der = val;
	}
	if(dir == 0x21){
    1e74:	34 04 00 21 	mvi r4,33
    1e78:	5c 44 00 03 	bne r2,r4,1e84 <_ZN3arm5calibEci+0x1c>
		iz = val;
    1e7c:	58 23 00 10 	sw (r1+16),r3
		atr = val;
	}
	if(dir == 0x24){
		ade = val;
	}
};
    1e80:	c3 a0 00 00 	ret
	if(dir == 0x22){
    1e84:	34 04 00 22 	mvi r4,34
    1e88:	5c 44 00 05 	bne r2,r4,1e9c <_ZN3arm5calibEci+0x34>
		mid = val;
    1e8c:	58 23 00 14 	sw (r1+20),r3
};
    1e90:	c3 a0 00 00 	ret
		der = val;
    1e94:	58 23 00 0c 	sw (r1+12),r3
};
    1e98:	c3 a0 00 00 	ret
	if(dir == 0x23){
    1e9c:	34 04 00 23 	mvi r4,35
    1ea0:	5c 44 00 03 	bne r2,r4,1eac <_ZN3arm5calibEci+0x44>
		atr = val;
    1ea4:	58 23 00 18 	sw (r1+24),r3
};
    1ea8:	c3 a0 00 00 	ret
	if(dir == 0x24){
    1eac:	34 04 00 24 	mvi r4,36
    1eb0:	5c 44 ff f4 	bne r2,r4,1e80 <_ZN3arm5calibEci+0x18>
		ade = val;
    1eb4:	58 23 00 1c 	sw (r1+28),r3
};
    1eb8:	e3 ff ff f2 	bi 1e80 <_ZN3arm5calibEci+0x18>

00001ebc <_ZN3arm8derecha0Ev>:

void arm::derecha0(){
    1ebc:	37 9c ff fc 	addi sp,sp,-4
    1ec0:	5b 9d 00 04 	sw (sp+4),ra
	pwm_duty(serv2,der);
    1ec4:	28 23 00 0c 	lw r3,(r1+12)
    1ec8:	28 22 00 08 	lw r2,(r1+8)
    1ecc:	fb ff fe 91 	calli 1910 <_ZN3pwm8pwm_dutyEij>
};
    1ed0:	2b 9d 00 04 	lw ra,(sp+4)
    1ed4:	37 9c 00 04 	addi sp,sp,4
    1ed8:	c3 a0 00 00 	ret

00001edc <_ZN3arm10izquierda0Ev>:


void arm::izquierda0(){
    1edc:	37 9c ff fc 	addi sp,sp,-4
    1ee0:	5b 9d 00 04 	sw (sp+4),ra
	pwm_duty(serv2,iz);
    1ee4:	28 23 00 10 	lw r3,(r1+16)
    1ee8:	28 22 00 08 	lw r2,(r1+8)
    1eec:	fb ff fe 89 	calli 1910 <_ZN3pwm8pwm_dutyEij>
};
    1ef0:	2b 9d 00 04 	lw ra,(sp+4)
    1ef4:	37 9c 00 04 	addi sp,sp,4
    1ef8:	c3 a0 00 00 	ret

00001efc <_ZN3arm6medio0Ev>:


void arm::medio0(){
    1efc:	37 9c ff fc 	addi sp,sp,-4
    1f00:	5b 9d 00 04 	sw (sp+4),ra
	pwm_duty(serv2,mid);
    1f04:	28 23 00 14 	lw r3,(r1+20)
    1f08:	28 22 00 08 	lw r2,(r1+8)
    1f0c:	fb ff fe 81 	calli 1910 <_ZN3pwm8pwm_dutyEij>
};
    1f10:	2b 9d 00 04 	lw ra,(sp+4)
    1f14:	37 9c 00 04 	addi sp,sp,4
    1f18:	c3 a0 00 00 	ret

00001f1c <_ZN3arm6atras0Ev>:


void arm::atras0(){
    1f1c:	37 9c ff fc 	addi sp,sp,-4
    1f20:	5b 9d 00 04 	sw (sp+4),ra
	pwm_duty(serv2,atr);
    1f24:	28 23 00 18 	lw r3,(r1+24)
    1f28:	28 22 00 08 	lw r2,(r1+8)
    1f2c:	fb ff fe 79 	calli 1910 <_ZN3pwm8pwm_dutyEij>
};
    1f30:	2b 9d 00 04 	lw ra,(sp+4)
    1f34:	37 9c 00 04 	addi sp,sp,4
    1f38:	c3 a0 00 00 	ret

00001f3c <_ZN3arm9adelante0Ev>:


void arm::adelante0(){
    1f3c:	37 9c ff fc 	addi sp,sp,-4
    1f40:	5b 9d 00 04 	sw (sp+4),ra
	pwm_duty(serv2,ade);
    1f44:	28 23 00 1c 	lw r3,(r1+28)
    1f48:	28 22 00 08 	lw r2,(r1+8)
    1f4c:	fb ff fe 71 	calli 1910 <_ZN3pwm8pwm_dutyEij>
};
    1f50:	2b 9d 00 04 	lw ra,(sp+4)
    1f54:	37 9c 00 04 	addi sp,sp,4
    1f58:	c3 a0 00 00 	ret

00001f5c <_ZN3cam5resetEv>:
#pragma GCC diagnostic ignored "-Wwrite-strings"
#include "cam.h"

void cam::reset(){
    1f5c:	37 9c ff f4 	addi sp,sp,-12
    1f60:	5b 8b 00 0c 	sw (sp+12),r11
    1f64:	5b 8c 00 08 	sw (sp+8),r12
    1f68:	5b 9d 00 04 	sw (sp+4),ra

	char R1;
	char R2;

	for(int i = 0;i < 4;i++){
		uart1_putchar(RESET_CAMERA[i]);
    1f6c:	34 01 00 56 	mvi r1,86
    1f70:	fb ff fe 0c 	calli 17a0 <uart1_putchar>
    1f74:	34 01 00 00 	mvi r1,0
    1f78:	fb ff fe 0a 	calli 17a0 <uart1_putchar>
    1f7c:	34 01 00 26 	mvi r1,38
    1f80:	fb ff fe 08 	calli 17a0 <uart1_putchar>
    1f84:	34 01 00 00 	mvi r1,0
    1f88:	fb ff fe 06 	calli 17a0 <uart1_putchar>
	}

	R1 = uart1_getchar();
    1f8c:	fb ff fd fb 	calli 1778 <uart1_getchar>
    1f90:	b8 20 60 00 	mv r12,r1
    1f94:	34 0b 00 46 	mvi r11,70
    1f98:	35 6b ff ff 	addi r11,r11,-1

	for(int i = 0;i < 70;i++){
		R2 = uart1_getchar();
    1f9c:	fb ff fd f7 	calli 1778 <uart1_getchar>
	for(int i = 0;i < 70;i++){
    1fa0:	5d 60 ff fe 	bne r11,r0,1f98 <_ZN3cam5resetEv+0x3c>
	}

	if(R1 == 0x76 && R2 == 0x0a){
    1fa4:	65 8c 00 76 	cmpei r12,r12,118
    1fa8:	64 21 00 0a 	cmpei r1,r1,10
    1fac:	a1 81 08 00 	and r1,r12,r1
    1fb0:	44 20 00 05 	be r1,r0,1fc4 <_ZN3cam5resetEv+0x68>
		uart_putstr("Ok");
    1fb4:	78 02 00 00 	mvhi r2,0x0
    1fb8:	38 42 25 20 	ori r2,r2,0x2520
    1fbc:	28 41 00 00 	lw r1,(r2+0)
    1fc0:	fb ff fd df 	calli 173c <uart_putstr>
	}
	

};
    1fc4:	2b 9d 00 04 	lw ra,(sp+4)
    1fc8:	2b 8b 00 0c 	lw r11,(sp+12)
    1fcc:	2b 8c 00 08 	lw r12,(sp+8)
    1fd0:	37 9c 00 0c 	addi sp,sp,12
    1fd4:	c3 a0 00 00 	ret

00001fd8 <_ZN3cam11takepictureEv>:

void cam::takepicture(){
    1fd8:	37 9c ff e0 	addi sp,sp,-32
    1fdc:	5b 8b 00 0c 	sw (sp+12),r11
    1fe0:	5b 8c 00 08 	sw (sp+8),r12
    1fe4:	5b 9d 00 04 	sw (sp+4),ra
    1fe8:	78 01 00 00 	mvhi r1,0x0
    1fec:	38 21 25 24 	ori r1,r1,0x2524
    1ff0:	28 2b 00 00 	lw r11,(r1+0)
    1ff4:	34 01 00 56 	mvi r1,86

	uint32_t Z [5];

	for(int i = 0;i < 5;i++){
		uart1_putchar(TAKE_PICTURE[i]);
    1ff8:	20 21 00 ff 	andi r1,r1,0xff
    1ffc:	35 6c 00 14 	addi r12,r11,20
    2000:	35 6b 00 04 	addi r11,r11,4
    2004:	fb ff fd e7 	calli 17a0 <uart1_putchar>
	for(int i = 0;i < 5;i++){
    2008:	45 6c 00 06 	be r11,r12,2020 <_ZN3cam11takepictureEv+0x48>
    200c:	29 61 00 00 	lw r1,(r11+0)
    2010:	35 6b 00 04 	addi r11,r11,4
		uart1_putchar(TAKE_PICTURE[i]);
    2014:	20 21 00 ff 	andi r1,r1,0xff
    2018:	fb ff fd e2 	calli 17a0 <uart1_putchar>
	for(int i = 0;i < 5;i++){
    201c:	5d 6c ff fc 	bne r11,r12,200c <_ZN3cam11takepictureEv+0x34>
    2020:	37 8b 00 10 	addi r11,sp,16
    2024:	37 8c 00 24 	addi r12,sp,36
	}

	for(int i = 0;i < 5;i++){
		Z[i] = uart1_getchar();
    2028:	fb ff fd d4 	calli 1778 <uart1_getchar>
    202c:	59 61 00 00 	sw (r11+0),r1
    2030:	35 6b 00 04 	addi r11,r11,4
	for(int i = 0;i < 5;i++){
    2034:	5d 6c ff fd 	bne r11,r12,2028 <_ZN3cam11takepictureEv+0x50>
	}


	if(Z[0] == 0x76 && Z[2] == 0x36){
    2038:	2b 82 00 10 	lw r2,(sp+16)
    203c:	34 01 00 76 	mvi r1,118
    2040:	44 41 00 06 	be r2,r1,2058 <_ZN3cam11takepictureEv+0x80>
		uart_putstr("Ok");	}

};
    2044:	2b 9d 00 04 	lw ra,(sp+4)
    2048:	2b 8b 00 0c 	lw r11,(sp+12)
    204c:	2b 8c 00 08 	lw r12,(sp+8)
    2050:	37 9c 00 20 	addi sp,sp,32
    2054:	c3 a0 00 00 	ret
	if(Z[0] == 0x76 && Z[2] == 0x36){
    2058:	2b 82 00 18 	lw r2,(sp+24)
    205c:	34 01 00 36 	mvi r1,54
    2060:	5c 41 ff f9 	bne r2,r1,2044 <_ZN3cam11takepictureEv+0x6c>
		uart_putstr("Ok");	}
    2064:	78 02 00 00 	mvhi r2,0x0
    2068:	38 42 25 28 	ori r2,r2,0x2528
    206c:	28 41 00 00 	lw r1,(r2+0)
    2070:	fb ff fd b3 	calli 173c <uart_putstr>
};
    2074:	e3 ff ff f4 	bi 2044 <_ZN3cam11takepictureEv+0x6c>

00002078 <_ZN3cam7getsizeEv>:

void cam::getsize(){
    2078:	37 9c ff cc 	addi sp,sp,-52
    207c:	5b 8b 00 10 	sw (sp+16),r11
    2080:	5b 8c 00 0c 	sw (sp+12),r12
    2084:	5b 8d 00 08 	sw (sp+8),r13
    2088:	5b 9d 00 04 	sw (sp+4),ra
    208c:	78 02 00 00 	mvhi r2,0x0
    2090:	38 42 25 2c 	ori r2,r2,0x252c
    2094:	28 4b 00 00 	lw r11,(r2+0)
    2098:	b8 20 68 00 	mv r13,r1
    209c:	34 01 00 56 	mvi r1,86
    20a0:	35 6c 00 14 	addi r12,r11,20

	uint32_t Z [9];

	for(int i = 0;i < 5;i++){
		uart1_putchar(GET_SIZE[i]);
    20a4:	20 21 00 ff 	andi r1,r1,0xff
    20a8:	35 6b 00 04 	addi r11,r11,4
    20ac:	fb ff fd bd 	calli 17a0 <uart1_putchar>
	for(int i = 0;i < 5;i++){
    20b0:	45 6c 00 06 	be r11,r12,20c8 <_ZN3cam7getsizeEv+0x50>
    20b4:	29 61 00 00 	lw r1,(r11+0)
    20b8:	35 6b 00 04 	addi r11,r11,4
		uart1_putchar(GET_SIZE[i]);
    20bc:	20 21 00 ff 	andi r1,r1,0xff
    20c0:	fb ff fd b8 	calli 17a0 <uart1_putchar>
	for(int i = 0;i < 5;i++){
    20c4:	5d 6c ff fc 	bne r11,r12,20b4 <_ZN3cam7getsizeEv+0x3c>
    20c8:	37 8b 00 14 	addi r11,sp,20
    20cc:	37 8c 00 38 	addi r12,sp,56
	}

	for(int i = 0;i < 9;i++){
		Z[i] = uart1_getchar();
    20d0:	fb ff fd aa 	calli 1778 <uart1_getchar>
    20d4:	59 61 00 00 	sw (r11+0),r1
    20d8:	35 6b 00 04 	addi r11,r11,4
	for(int i = 0;i < 9;i++){
    20dc:	5d 6c ff fd 	bne r11,r12,20d0 <_ZN3cam7getsizeEv+0x58>
	}

	if(Z[0] == 0x76 && Z[2] == 0x34){
    20e0:	2b 82 00 14 	lw r2,(sp+20)
    20e4:	34 01 00 76 	mvi r1,118
    20e8:	44 41 00 07 	be r2,r1,2104 <_ZN3cam7getsizeEv+0x8c>
		xl = Z[8];

		uart_putchar(xh);
		uart_putchar(xl);
	}
};
    20ec:	2b 9d 00 04 	lw ra,(sp+4)
    20f0:	2b 8b 00 10 	lw r11,(sp+16)
    20f4:	2b 8c 00 0c 	lw r12,(sp+12)
    20f8:	2b 8d 00 08 	lw r13,(sp+8)
    20fc:	37 9c 00 34 	addi sp,sp,52
    2100:	c3 a0 00 00 	ret
	if(Z[0] == 0x76 && Z[2] == 0x34){
    2104:	2b 82 00 1c 	lw r2,(sp+28)
    2108:	34 01 00 34 	mvi r1,52
    210c:	5c 41 ff f8 	bne r2,r1,20ec <_ZN3cam7getsizeEv+0x74>
		uart_putstr("Ok");
    2110:	78 02 00 00 	mvhi r2,0x0
    2114:	38 42 25 30 	ori r2,r2,0x2530
    2118:	28 41 00 00 	lw r1,(r2+0)
    211c:	fb ff fd 88 	calli 173c <uart_putstr>
		xh = Z[7];
    2120:	2b 82 00 30 	lw r2,(sp+48)
		uart_putchar(xh);
    2124:	20 41 00 ff 	andi r1,r2,0xff
		xh = Z[7];
    2128:	59 a2 00 00 	sw (r13+0),r2
		xl = Z[8];
    212c:	2b 82 00 34 	lw r2,(sp+52)
    2130:	59 a2 00 04 	sw (r13+4),r2
		uart_putchar(xh);
    2134:	fb ff fd 78 	calli 1714 <uart_putchar>
		uart_putchar(xl);
    2138:	41 a1 00 07 	lbu r1,(r13+7)
    213c:	fb ff fd 76 	calli 1714 <uart_putchar>
};
    2140:	e3 ff ff eb 	bi 20ec <_ZN3cam7getsizeEv+0x74>

00002144 <_ZN3cam11sendpictureEv>:

void cam::sendpicture(){
    2144:	37 9c ff a0 	addi sp,sp,-96
    2148:	5b 8b 00 18 	sw (sp+24),r11
    214c:	5b 8c 00 14 	sw (sp+20),r12
    2150:	5b 8d 00 10 	sw (sp+16),r13
    2154:	5b 8e 00 0c 	sw (sp+12),r14
    2158:	5b 8f 00 08 	sw (sp+8),r15
    215c:	5b 9d 00 04 	sw (sp+4),ra
    2160:	78 02 00 00 	mvhi r2,0x0
    2164:	38 42 25 34 	ori r2,r2,0x2534
    2168:	28 4b 00 00 	lw r11,(r2+0)
    216c:	b8 20 68 00 	mv r13,r1
    2170:	34 01 00 56 	mvi r1,86
    2174:	35 6c 00 14 	addi r12,r11,20
	uint32_t X [9];
	char R1;
	char R2;

	for(int i = 0;i < 5;i++){
		uart1_putchar(GET_SIZE[i]);
    2178:	20 21 00 ff 	andi r1,r1,0xff
    217c:	35 6b 00 04 	addi r11,r11,4
    2180:	fb ff fd 88 	calli 17a0 <uart1_putchar>
	for(int i = 0;i < 5;i++){
    2184:	45 6c 00 06 	be r11,r12,219c <_ZN3cam11sendpictureEv+0x58>
    2188:	29 61 00 00 	lw r1,(r11+0)
    218c:	35 6b 00 04 	addi r11,r11,4
		uart1_putchar(GET_SIZE[i]);
    2190:	20 21 00 ff 	andi r1,r1,0xff
    2194:	fb ff fd 83 	calli 17a0 <uart1_putchar>
	for(int i = 0;i < 5;i++){
    2198:	5d 6c ff fc 	bne r11,r12,2188 <_ZN3cam11sendpictureEv+0x44>
    219c:	37 8b 00 40 	addi r11,sp,64
    21a0:	37 8c 00 64 	addi r12,sp,100
	}

	for(int i = 0;i < 9;i++){
		X[i] = uart1_getchar();
    21a4:	fb ff fd 75 	calli 1778 <uart1_getchar>
    21a8:	59 61 00 00 	sw (r11+0),r1
    21ac:	35 6b 00 04 	addi r11,r11,4
	for(int i = 0;i < 9;i++){
    21b0:	5d 6c ff fd 	bne r11,r12,21a4 <_ZN3cam11sendpictureEv+0x60>
	}

	if(X[0] == 0x76 && X[2] == 0x34){
    21b4:	2b 82 00 40 	lw r2,(sp+64)
    21b8:	34 01 00 76 	mvi r1,118
    21bc:	2b 8e 00 5c 	lw r14,(sp+92)
    21c0:	2b 8f 00 60 	lw r15,(sp+96)
    21c4:	44 41 00 2b 	be r2,r1,2270 <_ZN3cam11sendpictureEv+0x12c>
    21c8:	29 a1 00 00 	lw r1,(r13+0)
		xh = X[7];
		xl = X[8];
	}

	uart_putchar(xh);
    21cc:	20 21 00 ff 	andi r1,r1,0xff
    21d0:	fb ff fd 51 	calli 1714 <uart_putchar>
    21d4:	78 02 00 00 	mvhi r2,0x0
	uart_putchar(xl);
    21d8:	41 a1 00 07 	lbu r1,(r13+7)
    21dc:	38 42 25 38 	ori r2,r2,0x2538
    21e0:	28 4b 00 00 	lw r11,(r2+0)
    21e4:	fb ff fd 4c 	calli 1714 <uart_putchar>
    21e8:	34 01 00 56 	mvi r1,86
    21ec:	35 6c 00 30 	addi r12,r11,48
    21f0:	e0 00 00 02 	bi 21f8 <_ZN3cam11sendpictureEv+0xb4>
    21f4:	29 61 00 00 	lw r1,(r11+0)
    21f8:	35 6b 00 04 	addi r11,r11,4

	for(int i = 0;i < 12;i++){
		uart1_putchar(SEND_JPG[i]);
    21fc:	20 21 00 ff 	andi r1,r1,0xff
    2200:	fb ff fd 68 	calli 17a0 <uart1_putchar>
	for(int i = 0;i < 12;i++){
    2204:	5d 8b ff fc 	bne r12,r11,21f4 <_ZN3cam11sendpictureEv+0xb0>

	}

	uart1_putchar(X[7]);
    2208:	21 c1 00 ff 	andi r1,r14,0xff
    220c:	fb ff fd 65 	calli 17a0 <uart1_putchar>
	uart1_putchar(X[8]);
    2210:	21 e1 00 ff 	andi r1,r15,0xff
    2214:	fb ff fd 63 	calli 17a0 <uart1_putchar>
	uart1_putchar(0x00);
    2218:	34 01 00 00 	mvi r1,0
    221c:	fb ff fd 61 	calli 17a0 <uart1_putchar>
	uart1_putchar(0x0a);
    2220:	34 01 00 0a 	mvi r1,10
    2224:	37 8d 00 1c 	addi r13,sp,28
    2228:	fb ff fd 5e 	calli 17a0 <uart1_putchar>
    222c:	37 8c 00 30 	addi r12,sp,48
    2230:	b9 a0 58 00 	mv r11,r13

	for(int i = 0;i < 5;i++){
		Z[i] = uart1_getchar();
    2234:	fb ff fd 51 	calli 1778 <uart1_getchar>
    2238:	59 61 00 00 	sw (r11+0),r1
    223c:	35 6b 00 04 	addi r11,r11,4
	for(int i = 0;i < 5;i++){
    2240:	5d 8b ff fd 	bne r12,r11,2234 <_ZN3cam11sendpictureEv+0xf0>
	}

	if(Z[0] == 0x76 && Z[2] == 0x32){
    2244:	2b 82 00 1c 	lw r2,(sp+28)
    2248:	34 01 00 76 	mvi r1,118
    224c:	44 41 00 10 	be r2,r1,228c <_ZN3cam11sendpictureEv+0x148>
		uart_putstr("Sent");
		}
		
	}

};
    2250:	2b 9d 00 04 	lw ra,(sp+4)
    2254:	2b 8b 00 18 	lw r11,(sp+24)
    2258:	2b 8c 00 14 	lw r12,(sp+20)
    225c:	2b 8d 00 10 	lw r13,(sp+16)
    2260:	2b 8e 00 0c 	lw r14,(sp+12)
    2264:	2b 8f 00 08 	lw r15,(sp+8)
    2268:	37 9c 00 60 	addi sp,sp,96
    226c:	c3 a0 00 00 	ret
	if(X[0] == 0x76 && X[2] == 0x34){
    2270:	2b 82 00 48 	lw r2,(sp+72)
    2274:	34 01 00 34 	mvi r1,52
    2278:	5c 41 ff d4 	bne r2,r1,21c8 <_ZN3cam11sendpictureEv+0x84>
		xh = X[7];
    227c:	59 ae 00 00 	sw (r13+0),r14
		xl = X[8];
    2280:	59 af 00 04 	sw (r13+4),r15
    2284:	b9 c0 08 00 	mv r1,r14
    2288:	e3 ff ff d1 	bi 21cc <_ZN3cam11sendpictureEv+0x88>
	if(Z[0] == 0x76 && Z[2] == 0x32){
    228c:	2b 82 00 24 	lw r2,(sp+36)
    2290:	34 01 00 32 	mvi r1,50
    2294:	5c 41 ff ef 	bne r2,r1,2250 <_ZN3cam11sendpictureEv+0x10c>
		for(uint32_t i = 0;i < (X[7]*256 + X[8]);i++){
    2298:	3d cc 00 08 	sli r12,r14,8
    229c:	b5 8f 60 00 	add r12,r12,r15
    22a0:	45 80 00 0f 	be r12,r0,22dc <_ZN3cam11sendpictureEv+0x198>
			R1 = uart1_getchar();
    22a4:	fb ff fd 35 	calli 1778 <uart1_getchar>
			fifo_write(R1);
    22a8:	fb ff fd 5c 	calli 1818 <fifo_write>
		for(uint32_t i = 0;i < (X[7]*256 + X[8]);i++){
    22ac:	34 0e 00 00 	mvi r14,0
			if(i >= 50){
    22b0:	34 0f 00 31 	mvi r15,49
		for(uint32_t i = 0;i < (X[7]*256 + X[8]);i++){
    22b4:	35 ce 00 01 	addi r14,r14,1
    22b8:	45 8e 00 09 	be r12,r14,22dc <_ZN3cam11sendpictureEv+0x198>
			R1 = uart1_getchar();
    22bc:	fb ff fd 2f 	calli 1778 <uart1_getchar>
			fifo_write(R1);
    22c0:	fb ff fd 56 	calli 1818 <fifo_write>
			if(i >= 50){
    22c4:	51 ee ff fc 	bgeu r15,r14,22b4 <_ZN3cam11sendpictureEv+0x170>
				R2 = fifo_read();
    22c8:	fb ff fd 4e 	calli 1800 <fifo_read>
				uart_putchar(R2);
    22cc:	20 21 00 ff 	andi r1,r1,0xff
		for(uint32_t i = 0;i < (X[7]*256 + X[8]);i++){
    22d0:	35 ce 00 01 	addi r14,r14,1
				uart_putchar(R2);
    22d4:	fb ff fd 10 	calli 1714 <uart_putchar>
		for(uint32_t i = 0;i < (X[7]*256 + X[8]);i++){
    22d8:	5d 8e ff f9 	bne r12,r14,22bc <_ZN3cam11sendpictureEv+0x178>
			Z[i] = uart1_getchar();
    22dc:	fb ff fd 27 	calli 1778 <uart1_getchar>
    22e0:	59 a1 00 00 	sw (r13+0),r1
    22e4:	35 ad 00 04 	addi r13,r13,4
		for(int i = 0;i < 5;i++){
    22e8:	5d ab ff fd 	bne r13,r11,22dc <_ZN3cam11sendpictureEv+0x198>
		if(Z[0] == 0x76 && Z[2] == 0x32){
    22ec:	2b 82 00 1c 	lw r2,(sp+28)
    22f0:	34 01 00 76 	mvi r1,118
    22f4:	5c 41 ff d7 	bne r2,r1,2250 <_ZN3cam11sendpictureEv+0x10c>
    22f8:	2b 82 00 24 	lw r2,(sp+36)
    22fc:	34 01 00 32 	mvi r1,50
    2300:	5c 41 ff d4 	bne r2,r1,2250 <_ZN3cam11sendpictureEv+0x10c>
		uart_putstr("Sent");
    2304:	78 02 00 00 	mvhi r2,0x0
    2308:	38 42 25 3c 	ori r2,r2,0x253c
    230c:	28 41 00 00 	lw r1,(r2+0)
    2310:	fb ff fd 0b 	calli 173c <uart_putstr>
};
    2314:	e3 ff ff cf 	bi 2250 <_ZN3cam11sendpictureEv+0x10c>

00002318 <_ZN3cam10stoptakingEv>:

void cam::stoptaking(){
    2318:	37 9c ff e0 	addi sp,sp,-32
    231c:	5b 8b 00 0c 	sw (sp+12),r11
    2320:	5b 8c 00 08 	sw (sp+8),r12
    2324:	5b 9d 00 04 	sw (sp+4),ra
    2328:	78 01 00 00 	mvhi r1,0x0
    232c:	38 21 25 40 	ori r1,r1,0x2540
    2330:	28 2b 00 00 	lw r11,(r1+0)
    2334:	34 01 00 56 	mvi r1,86

	uint32_t Z [5];

	for(int i = 0;i < 5;i++){
		uart1_putchar(STOP_TAKING_PICS[i]);
    2338:	20 21 00 ff 	andi r1,r1,0xff
    233c:	35 6c 00 14 	addi r12,r11,20
    2340:	35 6b 00 04 	addi r11,r11,4
    2344:	fb ff fd 17 	calli 17a0 <uart1_putchar>
	for(int i = 0;i < 5;i++){
    2348:	45 6c 00 06 	be r11,r12,2360 <_ZN3cam10stoptakingEv+0x48>
    234c:	29 61 00 00 	lw r1,(r11+0)
    2350:	35 6b 00 04 	addi r11,r11,4
		uart1_putchar(STOP_TAKING_PICS[i]);
    2354:	20 21 00 ff 	andi r1,r1,0xff
    2358:	fb ff fd 12 	calli 17a0 <uart1_putchar>
	for(int i = 0;i < 5;i++){
    235c:	5d 6c ff fc 	bne r11,r12,234c <_ZN3cam10stoptakingEv+0x34>
    2360:	37 8b 00 10 	addi r11,sp,16
    2364:	37 8c 00 24 	addi r12,sp,36
	}

	for(int i = 0;i < 5;i++){
		Z[i] = uart1_getchar();
    2368:	fb ff fd 04 	calli 1778 <uart1_getchar>
    236c:	59 61 00 00 	sw (r11+0),r1
    2370:	35 6b 00 04 	addi r11,r11,4
	for(int i = 0;i < 5;i++){
    2374:	5d 6c ff fd 	bne r11,r12,2368 <_ZN3cam10stoptakingEv+0x50>
	}


	if(Z[0] == 0x76 && Z[2] == 0x36){
    2378:	2b 82 00 10 	lw r2,(sp+16)
    237c:	34 01 00 76 	mvi r1,118
    2380:	44 41 00 06 	be r2,r1,2398 <_ZN3cam10stoptakingEv+0x80>
		uart_putstr("Finish");
	}

};
    2384:	2b 9d 00 04 	lw ra,(sp+4)
    2388:	2b 8b 00 0c 	lw r11,(sp+12)
    238c:	2b 8c 00 08 	lw r12,(sp+8)
    2390:	37 9c 00 20 	addi sp,sp,32
    2394:	c3 a0 00 00 	ret
	if(Z[0] == 0x76 && Z[2] == 0x36){
    2398:	2b 82 00 18 	lw r2,(sp+24)
    239c:	34 01 00 36 	mvi r1,54
    23a0:	5c 41 ff f9 	bne r2,r1,2384 <_ZN3cam10stoptakingEv+0x6c>
		uart_putstr("Finish");
    23a4:	78 02 00 00 	mvhi r2,0x0
    23a8:	38 42 25 44 	ori r2,r2,0x2544
    23ac:	28 41 00 00 	lw r1,(r2+0)
    23b0:	fb ff fc e3 	calli 173c <uart_putstr>
};
    23b4:	e3 ff ff f4 	bi 2384 <_ZN3cam10stoptakingEv+0x6c>
