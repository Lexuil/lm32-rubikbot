
Se asignan símbolos comunes
Símbolo común       tamaño            fichero

isr_table           0x80              soc-hw.o
tic_msec            0x4               soc-hw.o

Configuración de la Memoria

Nombre           Origen             Longitud           Atributos
ram              0x0000000000000000 0x0000000000010000
*default*        0x0000000000000000 0xffffffffffffffff

Guión del enlazador y mapa de memoria

                0x0000000000000000                __DYNAMIC = 0x0
                0x0000000000000000                _RAM_START = 0x0
                0x0000000000001000                _RAM_SIZE = 0x1000
                0x0000000000001000                _RAM_END = (_RAM_START + _RAM_SIZE)

.text           0x0000000000000000      0xe3c
                0x0000000000000000                _ftext = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000000000      0x208 crt0ram.o
                0x0000000000000000                _start
                0x0000000000000140                irq_enable
                0x000000000000014c                irq_disable
                0x0000000000000158                irq_set_mask
                0x0000000000000160                irq_get_mask
                0x0000000000000168                jump
                0x000000000000016c                halt
                0x00000000000001f8                get_sp
                0x0000000000000200                get_gp
 .text          0x0000000000000208       0x74 main.o
                0x0000000000000208                instruccion(arm, char)
 .text.startup  0x000000000000027c      0x318 main.o
                0x000000000000027c                main
 .text          0x0000000000000594      0x250 soc-hw.o
                0x0000000000000594                tic_isr
                0x00000000000005c8                isr_null
                0x00000000000005cc                irq_handler
                0x0000000000000628                isr_init
                0x0000000000000654                isr_register
                0x0000000000000670                isr_unregister
                0x0000000000000698                msleep
                0x00000000000006d0                nsleep
                0x0000000000000704                tic_init
                0x0000000000000758                uart_init
                0x000000000000075c                uart_getchar
                0x0000000000000784                uart_putchar
                0x00000000000007ac                uart_putstr
 .text          0x00000000000007e4      0x3c4 pwm.o
                0x00000000000007e4                pwm::pause()
                0x0000000000000800                pwm::pwm_en(int, unsigned int)
                0x0000000000000890                pwm::pwm_duty(int, unsigned int)
                0x0000000000000920                pwm::pwm_period(int, unsigned int)
                0x00000000000009b0                pwm::pwm_geten(unsigned int)
                0x0000000000000a58                pwm::pwm_getduty(unsigned int)
                0x0000000000000b00                pwm::pwm_getperiod(unsigned int)
 .text          0x0000000000000ba8      0x294 servos.o
                0x0000000000000ba8                arm::init()
                0x0000000000000c0c                arm::home()
                0x0000000000000c40                arm::derecha()
                0x0000000000000cbc                arm::izquierda()
                0x0000000000000d38                arm::set_serv(int, int)
                0x0000000000000de8                arm::calib(char, int)
                0x0000000000000e3c                _etext = .

.rodata         0x0000000000000e3c       0x70
                0x0000000000000e3c                . = ALIGN (0x4)
                0x0000000000000e3c                _frodata = .
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.cst4   0x0000000000000e3c       0x14 main.o
 .rodata.cst4   0x0000000000000e50       0x44 soc-hw.o
 .rodata.cst4   0x0000000000000e94        0x4 servos.o
 .rodata        0x0000000000000e98       0x14 servos.o
 *(.rodata1)
                0x0000000000000eac                _erodata = .

.data           0x0000000000000eac       0x10
                0x0000000000000eac                . = ALIGN (0x4)
                0x0000000000000eac                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000000eac        0x0 crt0ram.o
 .data          0x0000000000000eac        0x1 main.o
                0x0000000000000eac                C
 *fill*         0x0000000000000ead        0x3 
 .data          0x0000000000000eb0        0xc soc-hw.o
                0x0000000000000eb0                spi0
                0x0000000000000eb4                timer0
                0x0000000000000eb8                uart0
 .data          0x0000000000000ebc        0x0 pwm.o
 .data          0x0000000000000ebc        0x0 servos.o
 *(.data1)
                0x0000000000000ec0                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x0000000000000ebc                _edata = .

.bss            0x0000000000000ebc       0x94
                0x0000000000000ebc                . = ALIGN (0x4)
                0x0000000000000ebc                _fbss = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 *(.scommon)
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000000ebc        0x0 crt0ram.o
 .bss           0x0000000000000ebc       0x10 main.o
                0x0000000000000ebc                val
                0x0000000000000ec0                dir
                0x0000000000000ec4                inst
                0x0000000000000ec8                br
 .bss           0x0000000000000ecc        0x0 soc-hw.o
 .bss           0x0000000000000ecc        0x0 pwm.o
 .bss           0x0000000000000ecc        0x0 servos.o
 *(COMMON)
 COMMON         0x0000000000000ecc       0x84 soc-hw.o
                0x0000000000000ecc                isr_table
                0x0000000000000f4c                tic_msec
                0x0000000000000f50                _ebss = .
                0x0000000000000f50                _end = .
                0x000000000000fffc                PROVIDE (_fstack = ((ORIGIN (ram) + LENGTH (ram)) - 0x4))
LOAD crt0ram.o
LOAD main.o
LOAD soc-hw.o
LOAD pwm.o
LOAD servos.o
OUTPUT(image elf32-lm32)

.debug_frame    0x0000000000000000      0x2c0
 .debug_frame   0x0000000000000000       0x70 main.o
 .debug_frame   0x0000000000000070       0xf8 soc-hw.o
 .debug_frame   0x0000000000000168       0x94 pwm.o
 .debug_frame   0x00000000000001fc       0xc4 servos.o

.debug_info     0x0000000000000000     0x1ab9
 .debug_info    0x0000000000000000      0x97b main.o
 .debug_info    0x000000000000097b      0x3f5 soc-hw.o
 .debug_info    0x0000000000000d70      0x520 pwm.o
 .debug_info    0x0000000000001290      0x829 servos.o

.debug_abbrev   0x0000000000000000      0x73a
 .debug_abbrev  0x0000000000000000      0x235 main.o
 .debug_abbrev  0x0000000000000235      0x215 soc-hw.o
 .debug_abbrev  0x000000000000044a      0x150 pwm.o
 .debug_abbrev  0x000000000000059a      0x1a0 servos.o

.debug_loc      0x0000000000000000      0x500
 .debug_loc     0x0000000000000000       0x77 main.o
 .debug_loc     0x0000000000000077      0x13d soc-hw.o
 .debug_loc     0x00000000000001b4      0x201 pwm.o
 .debug_loc     0x00000000000003b5      0x14b servos.o

.debug_aranges  0x0000000000000000       0x88
 .debug_aranges
                0x0000000000000000       0x28 main.o
 .debug_aranges
                0x0000000000000028       0x20 soc-hw.o
 .debug_aranges
                0x0000000000000048       0x20 pwm.o
 .debug_aranges
                0x0000000000000068       0x20 servos.o

.debug_ranges   0x0000000000000000       0x48
 .debug_ranges  0x0000000000000000       0x30 main.o
 .debug_ranges  0x0000000000000030       0x18 soc-hw.o

.debug_line     0x0000000000000000      0xde5
 .debug_line    0x0000000000000000      0x261 main.o
 .debug_line    0x0000000000000261      0x2d1 soc-hw.o
 .debug_line    0x0000000000000532      0x614 pwm.o
 .debug_line    0x0000000000000b46      0x29f servos.o

.debug_str      0x0000000000000000      0x4ff
 .debug_str     0x0000000000000000      0x3b7 main.o
                                        0x3e2 (tamaño antes de la relajación)
 .debug_str     0x00000000000003b7      0x135 soc-hw.o
                                        0x21b (tamaño antes de la relajación)
 .debug_str     0x00000000000004ec        0x8 pwm.o
                                        0x2bc (tamaño antes de la relajación)
 .debug_str     0x00000000000004f4        0xb servos.o
                                        0x35d (tamaño antes de la relajación)

.comment        0x0000000000000000       0x11
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (tamaño antes de la relajación)
 .comment       0x0000000000000011       0x12 soc-hw.o
 .comment       0x0000000000000011       0x12 pwm.o
 .comment       0x0000000000000011       0x12 servos.o
